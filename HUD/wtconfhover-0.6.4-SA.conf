# This is a file describing a standard autoconfiguration, do not edit.
# See custom/sample.conf for a more generic template and explanation on the syntax.

name: WT XS v0.6.4-SA
pvp: true

slots:
    core:
        class: CoreUnit
    shield:
        class: ShieldGeneratorUnit
    warpdrive:
        class: WarpDriveUnit
    spacefueltank:
        class: SpaceFuelContainer
        select: manual
    radar:
        class: RadarPVPUnit
        select: manual
    db:
        class: DatabankUnit
        select: manual
    weapon:
        class: WeaponUnit
        select: manual
    ammoCont:
        class: AmmoContainerUnit
        select: manual

handlers:
    unit:
        onStart:
            lua: |
                showARCompass = false --export
                holdBrakeOnInit = true --export
                autoRes = true --export
                autoResMode = 1 --export
                autoResMinHitCount = 0 --export
                shieldDebugLog = false --export
                maxAngularSpeed = 0 --export
                weaponsPerPanel = 3 --export
                showGunnerAR = true --export
                
                Nav = Navigator.new(self.system, self.core, self.unit)
                pitchInput = 0
                rollInput = 0
                yawInput = 0
                dampingOff = 0
                screenHeight = system.getScreenHeight()
                screenWidth = system.getScreenWidth()
                
                brakeInput = holdBrakeOnInit and vec3(construct.getWorldVelocity()):len()<100 and 1 or 0

                function shieldClass(a,b,c,d,e,f,g)if d==nil then d=true end;if g==nil then g=false end;local h={}local i={MAX=0,MAX2=1,RATIO=2}e=e or i.MAX2;f=f or 0;local j=nil;local k={0,0,0,0}local l=c.getResistances()local m={0,0,0,0}local n=1;local o=30;local p={}for q=1,o do p[#p+1]={0,0,0,0}end;local r={0,0,0,0}local s=0;local t=0;local u=0.0001;local v={}for q=1,120 do v[q]=c.getShieldHitpoints()/c.getMaxShieldHitpoints()end;local w={"AM","EM","KI","TH"}local function x(y,z)z=z or 1;local A=0;for q=1,#y do A=A+y[q]end;if A==0 then return{0,0,0,0}end;local B={}for q=1,#y do B[q]=y[q]/A*z end;return B end;local function C(D)local E={0,0,0,0}for F,G in ipairs(D)do for q,H in ipairs(G)do E[q]=E[q]+H end end;return E end;local function I(J)local K={}local L=#J;for q=1,L do K[q]=q end;local M=false;repeat M=false;for q=2,L do if J[K[q-1]]<J[K[q]]then K[q-1],K[q]=K[q],K[q-1]M=true end end until not M;return table.unpack(K)end;local function N(G,O)local P,Q,R,S=I(G)if G[P]>O*3 then G[P]=G[P]-O*3 end;G[Q]=G[Q]G[R]=G[R]+O*1;G[S]=G[S]+O*2 end;local function T(U)local V={}for q=1,#U do local W=U[q]if not V[W]then V[W]=true else return true end end;return false end;local function X(U,Y)for q=1,#U do if math.abs(U[q]-Y[q])>u/10 then return false end end;return true end;local function Z(_)local a0={0,0,0,0}local a1=I(_)a0[a1]=1;return a0 end;local function a2(_)local a0={0,0,0,0}local a3,a4=I(_)a0[a3]=1;if _[a4]>1 and _[a4]/_[a3]>0.3 then a0[a4]=1 end;return a0 end;local function a5(a6)local a7=x(a6,c.getResistancesPool())N(a7,u)if X(a7,l)or c.getResistancesCooldown()>0 then return end;local a8=c.setResistances(table.unpack(a7))if not a8 then a.print('wtShield ERROR (code: 4) ('..table.concat(a7,",")..')')else l=a7;a.print('Successfuly applied resistances ('..table.concat(a7,",")..')')end end;local function a9()if c.getResistancesCooldown()~=0 or X(r,{0,0,0,0})then return end;local a0;if e==i.MAX then a0=Z(r)elseif e==i.MAX2 then a0=a2(r)elseif e==i.RATIO then a0=k else a0={0.25,0.25,0.25,0.25}a.print('wtShield ERROR (code: 3)')end;a5(a0)end;function h.onDown()c.startVenting()end;function h.onVentingEvent(aa,ab)if not aa then c.activate()end end;function h.toogleAutoRes()d=not d;if d then j=nil end;a.print('AutoRes '..(d and'ON'or'OFF'))end;function h.manualOverride(a7)d=false;j=a7;a.print('AutoRes OFF, setting manual res to '..table.concat(a7,", "))end;function h.onAbsorb(ac,ad)local ae=0.9-ac/ad;local af;for q=1,#l do if math.abs(ae-l[q])<u/10 then if not af then af=q else a.print('wtShield ERROR (code: 1)')return end end end;if not af then a.print('wtShield ERROR (code: 2)')return end;if g then a.print('HIT '..w[af]..' '..ad)end;local ag=a.getUtcTime()t=t+1;m[af]=ag;p[#p][af]=p[#p][af]+ad;r=C(p)k=x(r)end;function h.onTick()local ag=a.getUtcTime()if d and t>0 and(f==0 or t>=f)and ag-math.max(table.unpack(m))<o*n*0.8 then a9()end;if j then a5(j)end;s=t;table.remove(p,1)p[#p+1]={0,0,0,0}r=C(p)k=x(r)if X(r,{0,0,0,0})then t=0 end;table.remove(v,1)v[120]=c.getShieldHitpoints()/c.getMaxShieldHitpoints()end;function h.getStressRatio()return k end;function h.getLastHitTimes()return m end;function h.getShieldHistory()return v end;function h.getAutoRes()return d end;function h.getAutoResModeStr()if not d then return'OFF'elseif e==0 then return'MAX'elseif e==1 then return'MAX2'elseif e==2 then return'RATIO'end end;a.print('currentRes: '..table.concat(l,", "))if d then a5({1,1,1,1})elseif T(l)then a.print('found equal resists, unequalizing...')a5(l)end;b.setTimer('wtShieldTick',n)return h end

                function audioManagerClass(a)local b={}local c={}function b.onUpdate()if a.isPlayingSound()then return end;if c[1]==nil then return end;a.playSound(c[1])table.remove(c,1)end;function b.playSound(d)table.insert(c,d)end;return b end;function monitorClass(a,e,f,g)local h={}local i;local j=audioManagerClass(a)local k=0.4;local l=0.1;local m=0.4;local n=0.1;local o=0.4;local p=0.1;local q="wthud/fuelLow.mp3"local r="wthud/fuelCritical.mp3"local s="wthud/shieldLow.mp3"local t="wthud/shieldCritical.mp3"local u="wthud/ccsLow.mp3"local v="wthud/ccsCritical.mp3"local w="wthud/targetAccelerating.mp3"local x="wthud/targetBraking.mp3"local function y()local z={}if sheild~=nil then z.shieldHpRatio=f.getShieldHitpoints()/f.getMaxShieldHitpoints()end;z.stressHpRatio=e.getMaxCoreStress()>0 and e.getCoreStress()/e.getMaxCoreStress()or 0;z.fuelPercent=g~=nil and g.getItemsVolume()/g.getMaxVolume()or 0;return z end;function h.onUpdate()local z=y()if f~=nil then if(i.shieldHpRatio or 0)>m and z.shieldHpRatio<=m then j.playSound(s)end;if(i.shieldHpRatio or 0)>n and z.shieldHpRatio<=n then j.playSound(t)end end;if i.stressHpRatio>o and z.stressHpRatio<=o then j.playSound(u)end;if i.stressHpRatio>p and z.stressHpRatio<=p then j.playSound(v)end;if i.fuelPercent>k and z.fuelPercent<=k then j.playSound(q)end;if i.fuelPercent>l and z.fuelPercent<=l then j.playSound(r)end;i=z;j.onUpdate()end;i=y()return h end

                wtShield = shieldClass(system, unit, shield, autoRes, autoResMode, autoResMinHitCount, shieldDebugLog)
                wtMonitor = monitorClass(system, core, shield, spacefueltank_1)
                
                unit.hideWidget()
                if warpdrive ~= nil then warpdrive.show() end
                system.showHelper(0)
                system.showScreen(1)
                
                local a=require('atlas')local function b(c)local d=" *([+-]?%d+%.?%d*e?[+-]?%d*)"local e="::pos{"..d..","..d..","..d..","..d..","..d.."}"local f,g,h,i,j=string.match(c,e)if f==nil or g==nil or h==nil or i==nil or j==nil then system.print("Error converting POS")return vec3()end;if f=="0"and g=="0"then return vec3(h,i,j)end;i=math.rad(i)h=math.rad(h)local l=a[tonumber(f)][tonumber(g)]local m=math.cos(h)local n=vec3(m*math.cos(i),m*math.sin(i),math.sin(h))return vec3(l.center)+(l.radius+j)*n end;local function o(p)p=vec3(p)return"::pos{0,0,"..p.x..","..p.y..","..p.z.."}"end;local q={}local function r()if db_1~=nil and db_1.hasKey('AR')then local s=0;for k,t in pairs(json.decode(db_1.getStringValue('AR')))do q[k]=t;s=s+1 end;system.print('Loaded '..s..' AR marks from databank')end end;local function u()if db_1~=nil then db_1.setStringValue('AR',json.encode(q))system.print('saved AR marks to databank')end end;local function v(p,w,x)q[w]={b(p),x}u()end;r()local y={}for z,A in pairs(a[0])do table.insert(y,A)end;local function B(C)if C<1000 then return math.ceil(C)..'m'elseif C<1000*10 then return string.format("%.2fkm",C/1000)elseif C<1000*100 then return string.format("%.1fkm",C/1000)elseif C<1000*200*10 then return string.format("%.2fsu",C/1000/200)elseif C<1000*200*100 then return string.format("%.1fsu",C/1000/200)else return math.ceil(C/1000/200)..'su'end end;local function D(p)local function E(F,G,H)local I=(G-F):normalize()local J=(H-F):dot(I)/I:dot(I)if J<=0 then return H:dist(F),F elseif J>=(G-F):len()then return H:dist(G),G end;local K=F+J*I;local L=K:dist(H)return L,K end;local M=vec3({13771471,7435803,-128971})local N=18000000;local O=500000;local P=math.huge;local Q=math.huge;local R=math.huge;local S,T,U,V;local W=M+(p-M):normalize()*N;local R=p:dist(W)local X=p:dist(M)>N;for Y=1,#y do body1=y[Y]local C=p:dist(vec3(body1.center))if C<P then P=C;S=body1 end;if body1.type[1]=="Planet"or body1.isSanctuary==true then for Z=Y+1,#y do body2=y[Z]if body2.type[1]=="Planet"or body2.isSanctuary==true then local _,a0=E(vec3(body1.center),vec3(body2.center),p)if _<Q then Q=_;T=body1;U=body2;V=a0 end end end end end;if X then local a1=vec3(S.center)+(p-vec3(S.center)):normalize()*O;local a2=(p-a1):len()if a2<R then R=a2;X=(p-vec3(S.center)):len()>O;W=a1 end end;return{closestBody={body=S,dist=P},closestPipe={body1=T,body2=U,dist=Q,point=V},isPvP=X,PvpBorderDist=R,PvpBorderPos=W}end;local a3=0;function onText(a4)a4=string.lower(a4)if a4:match('^addar%s(::pos.+})%s(.+)')~=nil then local p,w,x=a4:match('^addar%s(::pos.+})%s(.+)%s?(#%x?%x?%x?%x?%x?%x?)')if p==nil then p,w=a4:match('^addar%s(::pos.+})%s(.+)')x='#76f9e0'end;v(p,w,x)elseif a4:match('^clearar')~=nil then local w=a4:match('^clearar%s(.+)')if w==nil then q={}else q[w]=nil end;u()elseif a4:match('^info')~=nil then local p=a4:match('^info%s(::pos.+})')local a5=D(b(p))system.print('Info on '..p)system.print('isPvP: '..(a5.isPvP and'true'or'false'))system.print('Border ('..B(a5.PvpBorderDist)..'): '..o(a5.PvpBorderPos))system.print('closest Pipe ('..B(a5.closestPipe.dist)..'): '..a5.closestPipe.body1.name[1]..' - '..a5.closestPipe.body2.name[1])system.print('closest Body ('..B(a5.closestBody.dist)..'): '..a5.closestBody.body.name[1])elseif a4:match('^helper$')~=nil then a3=1-a3;system.showHelper(a3)end end;local a6=system.getScreenHeight()local a7=system.getScreenWidth()local function a8(a9,aa)local ab={}local ac=vec3(0,0,1)local ad=vec3(0,1,0)local ae=vec3(0,0,1)ab["00"]=a9+ae*aa;ab["50"]=a9-ae*aa;for Y=1,4 do ae=ae:rotate(math.pi/180*36,ad)for Z=0,9 do ae=ae:rotate(math.pi/180*36,ac)ab[''..Y..Z]=a9+ae*aa end end;return ab end;local function af(ag)return math.floor(ag+0.5)end;local function ah(ai,aj,x,ak,al)local am=400;local an=library.getPointOnScreen({aj.x,aj.y,aj.z})if an[3]<=0 then return''end;local ag=an[1]*a7-am/2;local ao=an[2]*a6-am/2;svg=[[<svg viewBox="0 0 500 500" class="point" style="left:]]..ag..[[px;top:]]..ao..[[px;position:absolute;width:]]..am..[[px;height:]]..am..[[px">]]if ai=='circle'then svg=svg..[[<circle cx="250" cy="250" r="10" opacity="0.3" stroke="]]..x..[[" stroke-width="2" fill="none"/>]]elseif ai=='cross'then svg=svg..[[<line x1="250" y1="242" x2="250" y2="258" opacity="0.5"  stroke="]]..x..[[" stroke-width="2"/><line x1="242" y1="250" x2="258" y2="250" opacity="0.5"  stroke="]]..x..[[" stroke-width="2"/>]]elseif ai=='box'then svg=svg..[[<rect x="237" y="237" width="26" height="26" style="fill: rgba(0,0,0,0); stroke: ]]..x..[[; stroke-width: 2"/>]]end;svg=svg..[[<text x="50%" y ="47%" style="text-anchor: middle; fill: ]]..x..[[; font-family: Arial, sans-serif; font-size: 14px;">]]..(ak or'')..[[</text><text x="50%" y ="55%" style="text-anchor: middle; fill: ]]..x..[[; font-family: Arial, sans-serif; font-size: 14px;">]]..(al or'')..[[</text></svg>]]return svg end;local function ap(aj,x,ak,al)return ah('circle',aj,x,ak,al)end;local function aq(aj,x)return ah('cross',aj,x)end;local function ar(construct)local as=vec3(construct.getWorldPosition())local ab=a8(as,10^7)local at=''for w,aj in pairs(ab)do at=at..ap(aj,"#cc8899",w)end;return at end;local function au(construct)local as=vec3(construct.getWorldPosition())local a=require('atlas')local at=''for z,A in pairs(a[0])do if A.type[1]=="Planet"or A.isSanctuary==true then local C=math.floor((vec3(A.center)-as):len()/10^3/200).."su"at=at..ap(vec3(A.center),"#f9e076",A.name[1],C)end end;return at end;local function av(a5)local x=a5.isPvP and"#72ff5b"or"#FF5B72"local aw=a5.isPvP and"Safe Zone"or"PVP"return ap(a5.PvpBorderPos,x,aw,B(a5.PvpBorderDist))end;local function ax(construct,C)local ay=vec3(construct.getWorldVelocity()):normalize()local az=vec3(construct.getWorldForward()):normalize()local p=vec3(construct.getWorldPosition())local aA=p+az*C;local aB=p-az*C;local aC=p+ay*C;local aD=p-ay*C;local aE='#ccc'local aF='#a11'local at=ap(aC,aE)..ap(aD,aF)..aq(aA,aE)..aq(aB,aF)return at end;local function aG()local at=''for w,aH in pairs(q)do local p,x=vec3(aH[1]),aH[2]local C=(p-vec3(construct.getWorldPosition())):len()at=at..ah('box',p,x,w,B(C))end;return at end;local function aI(a5)local at=''at=at..ar(construct)at=at..au(construct)at=at..ax(construct,10^7)at=at..av(a5)at=at..ap(a5.closestPipe.point,'#ccc','PIPE',B(a5.closestPipe.dist))at=at..aG(construct)return at end;local function aJ(aK,aL,aM,aN)local aO='-'aN=aN or'█'local aP=math.floor(math.min(math.abs(math.max(aL-1,0)),1)*aK+0.5)local aQ=math.floor(math.min(math.abs(aL),1)*aK+0.5)local aR;if aL>=0 then aR='[</a><a class="'..(aM or'')..'">'..string.rep(aN,aQ-aP)..'</a><a class="red">'..string.rep(aN,aP)..'</a><a>'..string.rep(aO,aK-aQ)..']'elseif aL<0 then aR='['..string.rep(aO,aK-aQ)..'</a><a class="red">'..string.rep(aN,aQ).."</a><a>]"else aR='[</a><a class="red">'..string.rep('X',aK).."</a><a>]"end;return aR end;local function aS()local aT=construct.getMass()local aU=0;local aV=construct.getPlayersOnBoard()local aW=construct.getPlayersOnBoardInVRStation()local aX=construct.getDockedConstructs()for z,aY in ipairs(aV)do aU=aU+construct.getBoardedPlayerMass(aY)end;for z,aY in ipairs(aW)do aU=aU+construct.getBoardedInVRStationAvatarMass(aY)end;for z,aY in ipairs(aX)do aT=aT+construct.getDockedConstructMass(aY)end;aT=aT+math.max(0,aU-20000)return aT end;local function aZ(a_)local b0=a_;while true do b0,k=string.gsub(b0,"^(-?%d+)(%d%d%d)",'%1,%2')if k==0 then break end end;return b0 end;local function b1(b2)b2=b2*3.6;return aZ(math.floor(b2))..' km/h'end;local function b3(b4)return string.format("%02d",math.floor(b4//60))..':'..string.format("%02d",math.floor(b4%60))end;local function b5(b4)if b4==-1 then return'ERR'elseif b4<60 then return math.floor(b4)..'s'elseif b4<60*60 then return math.floor(b4/60)..'m'elseif b4<60*60*24 then return math.floor(b4/(60*60))..'h'else return'1d+'end end;local function b6(b7)if b7<1000 then return math.floor(b7)elseif b7<1000*10 then return string.format("%.2fk",b7/1000)elseif b7<1000*100 then return string.format("%.1fk",b7/1000)elseif b7<1000*1000*10 then return string.format("%.2fm",b7/1000000)elseif b7<1000*200*100 then return string.format("%.1fm",b7/1000000)else return math.ceil(b7/1000000)..'m'end end;local function b8(b9,ba)local aL={}for Y=1,#b9 do aL[Y]=b9[Y]/ba end;return aL end;local bb=[[
                <style>
                .ui {
                    color: white;
                     font: Inconsolata, monospace;
                    font-family: monospace;
                    font-size: 0.75em;
                     font-weight: bold;
                     opacity: 0.75;
                    white-space: pre;
                     text-shadow: -1px -1px 0 #050, 1px -1px 0 #050, -1px 1px 0 #050, 1px 1px 0 #050;
                }
                .blue {
                    color: #5BD8FF;
                     text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
                }
                .red {
                    color: #FF5B72;
                     text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
                }
                .orange {
                    color: #fc934f;
                     text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
                }
                .yellow {
                    color: #fce94f;
                     text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
                }
                .green {
                    color: #72ff5b;
                     text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
                }
                </style>
                ]]local function bc()local bd=system.getUtcTime()local be=unit.getThrottle()/100;local bf=af(be*100)local bg=aS()local bh=string.format("%.1fg",vec3(construct.getWorldAcceleration()):len()/9.80665)local bi=json.decode(unit.getWidgetData()).spaceThrust;local bj=construct.getMaxThrustAlongAxis('space_engine',construct.getForward())[3]local bk=bj>0 and bi/bj or 0;local bl=af(bk*100)local bm=vec3(construct.getWorldVelocity()):len()local bn=construct.getMaxSpeed()local bo=bm/bn;local bp=brakeInput>0;local bq=spacefueltank_1~=nil and json.decode(spacefueltank_1.getWidgetData())or{}local br=(bq.percentage~=nil and bq.percentage or 0)/100;local bs=af(br*100)local bt=bq.timeLeft~=nil and(bq.timeLeft=='n/a'and 0 or bq.timeLeft)or-1;local bu=b5(bt)local bv=construct.getMaxBrake()local bw=bm^2/(bv/bg)/2;local bx=bm~=0 and bw/bm*2 or 0;local by=bm^2/((bv+bj)/bg)/2;local bz=bm~=0 and by/bm*2 or 0;local bA=-1;if db_1~=nil and db_1.hasKey('targetSpeed')then bA=db_1.getIntValue('targetSpeed')end;local bB=(bA or 0)/bn;local bC;if bA~=-1 then local bD=aJ(20,bB)local bE=string.format("%-14s",b1(bA))bC='targ speed '..bD..' '..bE else bC=string.rep(' ',48)end;local bF=aJ(20,bo)..' '..string.format("%-14s",b1(bm))local bG=bp and'</a><a class="red">BRAKES ACTIVE</a><a>'or string.rep(' ',13)local bH=dampingOff==1 and'</a><a class="yellow">DAMPING OFF</a><a>'or string.rep(' ',11)return[[
                <style>
                .main-panel {
                   position: absolute;
                   top: 71vh;
                   left: 43vw;
                   font-size: 1em;
                }
                </style>
                <div class="ui main-panel"><a>
                 ___              WT HUD v0.6.4                 ___
                |                                                  |
                | ]]..bC..[[ |
                |      speed ]]..bF..[[ |
                                          max speed ]]..b1(bn)..[[ 
                    throttle ]]..aJ(20,be)..' '..bf..[[%
                      thrust ]]..aJ(20,bk)..' '..bl..'% ('..bh..[[)
                        fuel ]]..aJ(20,br)..' '..bs..'% ('..bu..[[)
                |  brake dist ]]..string.format('%-8s','['..B(bw)..']')..[[  ]]..string.format('%-8s','('..B(by)..')')..[[     ]]..bG..[[ |
                |  brake time []]..b3(bx)..[[]  (]]..b3(bz)..[[)         ]]..bH..[[ |
                |___                                            ___|
                </a></div>
                ]]end;local function bI(ab)local ag=10;local bJ={}local bK={' ','▄','█'}for z,bL in ipairs(ab)do local bM={}local bN=math.floor(bL*ag)for z=1,bN do table.insert(bM,bK[#bK])end;if bN<ag then table.insert(bM,bK[math.floor(bL*ag%1*(#bK-1)+0.5)+1])end;for z=1,ag-bN+1 do table.insert(bM,bK[1])end;table.insert(bJ,bM)end;local bO={}for Y=ag,1,-1 do local bM=''for Z=1,#ab do bM=bM..bJ[Z][Y]end;table.insert(bO,bM)end;return bO end;local function bP(bL)local bM={'','','','','','','','','',''}local bQ=11-(math.floor(bL*9+0.5)+1)bM[bQ]=math.floor(bL*100+0.5)..'%'return bM end;local function bR(bS,bT)local bL={}for Y=1,#bS,math.floor(#bS/20)do table.insert(bL,bS[Y])end;bL[#bL]=bT;local bU=bI(bL)local bV=bP(bT)return bU,bV end;local function bW(b2)b2=b2 or 5;local bX={'|','/','|','\\'}local bQ=math.floor(system.getUtcTime()*b2%#bX)+1;return bX[bQ]end;local function bY()local bd=system.getUtcTime()local bZ=core.getMaxCoreStress()-core.getCoreStress()local b_=core.getMaxCoreStress()local c0=b_>0 and bZ/b_ or 0;local c1=af(c0*100)local c2=shield.getShieldHitpoints()local c3=shield.getMaxShieldHitpoints()local c4=c2/c3;local c5=af(c4*100)local c6=b8(shield.getResistances(),shield.getResistancesPool())local c7=shield.getResistancesCooldown()local c8=shield.getResistancesMaxCooldown()local c9=c7/c8;local ca=shield.getVentingCooldown()local cb=shield.getVentingMaxCooldown()local cc=ca/cb;local cd=wtShield.getStressRatio()local ce=wtShield.getLastHitTimes()local cf={bd-ce[1],bd-ce[2],bd-ce[3],bd-ce[4]}local cg=wtShield.getAutoRes()local ch=wtShield.getShieldHistory()local ci=''if c0<0.5 then ci='yellow'elseif c0<0.2 then ci='red'end;local cj=aJ(20,c0,ci)local ck=string.format('%-5s',c1 ..'%')local cl=shield.isVenting()local cm=''if cl then cm='yellow'elseif shield.isActive()==0 then cm='red'end;local cn=''if c4<0.5 then cn='yellow'elseif c4<0.2 then cn='red'end;shieldStatusStr=shield.isActive()and' ONLINE'or'OFFLINE'local co,bV=bR(ch,c4)for Y=1,#co do co[Y]='</a><a class="'..cn..'">'..co[Y]..'</a><a>'end;local cp={}for Y,J in ipairs(c6)do cp[Y]=aJ(10,J,'blue')..string.format('%4s',math.floor(J*100+0.5)..'%')end;local cq={}for Y,J in ipairs(cd)do cq[Y]=aJ(10,J,'red')..string.format('%4s',math.floor(J*100+0.5)..'%')end;local cr=cg and''or'yellow'local cs='</a><a class="'..cr..'">'..wtShield.getAutoResModeStr()..'</a><a>'local ct=aJ(20,c9)local cu=string.format('%-11s',c7==0 and'READY'or b3(c7))local cv=cl and aJ(20,1,'yellow',bW())or aJ(20,cc)local cw=string.format('%-11s',cl and'IN PROGRESS'or(ca==0 and'READY'or b3(ca)))return[[
                <style>
                .shield-panel {
                    position: absolute;
                    top: 2vh;
                    left: 2vw;
                    font-size: 0.75em;
                }
                </style>
                <div class="ui shield-panel"><a>
                 ___                                        ___
                | ]]..string.format('%20s',b6(bZ))..[[ / ]]..string.format('%-21s',b6(b_))..[[ |
                |       CCS ]]..cj..[[ ]]..string.format('%-11s',b6(c1)..'%')..[[ |
                |                                              |        
                  ]]..string.format('%20s',b6(c2))..[[ / ]]..string.format('%-21s',b6(c3))..[[ 
                     </a><a class="]]..cm..[[">SHIELD</a><a> |]]..co[1]..[[| ]]..bV[1]..[[        
                    </a><a class="]]..cm..[[">]]..shieldStatusStr..[[</a><a> |]]..co[2]..[[| ]]..bV[2]..[[ 
                            |]]..co[3]..[[| ]]..bV[3]..[[ 
                            |]]..co[4]..[[| ]]..bV[4]..[[ 
                            |]]..co[5]..[[| ]]..bV[5]..[[ 
                            |]]..co[6]..[[| ]]..bV[6]..[[ 
                            |]]..co[7]..[[| ]]..bV[7]..[[ 
                            |]]..co[8]..[[| ]]..bV[8]..[[ 
                            |]]..co[9]..[[| ]]..bV[9]..[[ 
                            |]]..co[10]..[[| ]]..bV[10]..[[ 

                                 ]]..cp[2]..[[ 
                                 ]]..cq[2]..[[ 
                                       EM
                  ]]..cp[1]..[[  AM    KI  ]]..cp[3]..[[ 
                  ]]..cq[1]..[[     TH     ]]..cq[3]..[[ 
                                 ]]..cp[4]..[[ 
                                 ]]..cq[4]..[[ 
                  (Auto: ]]..cs..[[)
                |      RES  ]]..ct..[[ ]]..cu..[[ |
                |     VENT  ]]..cv..[[ ]]..cw..[[ |
                |___                                        ___|
                </a></div>
                    ]]end;local function cx(a5)local function cy(w)return w:gsub("Asteroid ","A"):gsub("Moon ","M"):sub(1,11)end;local aw=a5.isPvP and'SAFE ZONE'or' PVP ZONE'return[[
                <style>
                .position-panel {
                    position: absolute;
                    top: 10vh;
                    left: 85vw;
                    font-size: 0.9em;
                }
                </style>
                <div class="ui position-panel"><a>
                 ___                ___
                |                      |
                |  ]]..aw..[[  ]]..string.format('%7s',B(a5.PvpBorderDist))..[[  |
                   ]]..string.format('%11s',cy(a5.closestBody.body.name[1]))..[[ ]]..string.format('%6s',B(a5.closestBody.dist))..[[ 
                 
                 ]]..string.format('%11s',cy(a5.closestPipe.body1.name[1]))..[[-]]..string.format('%-11s',cy(a5.closestPipe.body2.name[1]))..[[ 
                |  PIPE        ]]..string.format('%7s',B(a5.closestPipe.dist))..[[ |
                |___                ___|
                </a></div>
                ]]end;local function cz()return[[
                    <style>
                    .helper {
                        width: 26em;
                        padding: 2px;
                        position:fixed;
                        top:5vh;
                        left:1vw;
                        text-align: left;
                        background:  #2C2F33;
                        color: #FFFFFF;
                        font-family: "Times New Roman", Times, serif;
                        font-size: 0.9em;
                        border-radius: 5px;
                        border: 2px solid black;    
                    }
                    </style>
                    <div class="helper">
                                WTHud v0.6.4<br>
                                ]]..core.getConstructName()..[[ - ]]..core.getConstructId()..[[<br><br>
                                Alt+1:        Toggle Auto-Res<br>
                                Alt+2:        Toggle Rotational Damping<br>
                                Alt+3:        Toggle AR Compass<br>
                                Alt+4:        Toggle AR Gunner<br>
                                Alt+Shift+8:  Toggle Shield<br>
                                Alt+9:        Toggle Venting<br>
                                Shift+Arrows: Manual Resistances<br>
                                Ctrl+Space:   Hold Brakes<br>
                    </div>
                    ]]end;function getHudHTML()local a5=D(vec3(construct.getWorldPosition()))local cA=lshiftInput and cz()or''local cB=showARCompass and aI(a5)or''return bb..bc()..bY()..cx(a5)..cA..cB end
                
                function weaponClass(a,b,c)local d={}local e={}local f={}local g=0;c=c or 3;local function h()if not(type(b)=='table'and#b>0)then return end;local i;for j,k in ipairs(b)do if(j-1)%c==0 then i=a.createWidgetPanel('')end;local l=a.createData(k.getWidgetData())e[l]=k;a.addDataToWidget(l,a.createWidget(i,k.getWidgetType()))end end;local function m(e)return{["weaponStatus"]=e:match('"weaponStatus":(%d+)'),["animationTime"]=tonumber(e:match('"cycleAnimationRemainingTime":(.-),'))or 0,["fireReady"]=e:match('"fireReady":(.-),'),["outOfZone"]=e:match('"outOfZone":(.-),'),["targetConstructID"]=e:match('"constructId":"(.-)"'),["hitProb"]=math.floor((tonumber(e:match('"hitProbability":(%d%.%d+),'))or 0)*100)}end;local function n(o,f)if o["weaponStatus"]~=f["weaponStatus"]or o["fireReady"]~=f["fireReady"]or o["outOfZone"]~=f["outOfZone"]or o["targetConstructID"]~=f["targetConstructID"]or o["hitProb"]~=f["hitProb"]or o["animationTime"]>(f["animationTime"]or 0)then return true end;return false end;function d.onUpdate()for l,k in pairs(e)do local e=k.getWidgetData()local o=m(e)local p=n(o,f[l]or{})f[l]=o;local q=a.getUtcTime()if not p and q-g<1 then goto r end;g=q;local s=e:match('"ammoName":"(.-)"')local t=""if s:match("Antimatter")then t="AM"elseif s:match("Electromagnetic")then t="EM"elseif s:match("Kinetic")then t="KI"elseif s:match("Thermic")then t="TH"end;local u=""if s:match("Precision")then u="Prec"elseif s:match("Heavy")then u="Heavy"end;e=e:gsub('"ammoName":"(.-)"','"ammoName":"'..o["hitProb"]..'%% - '..t..' '..u..'"')e=e:gsub('"constructId":"(%d+(%d%d%d))","name":"(.?.?.?.?.?.?.?.?.?.?.?.?.?.?).-"','"constructId":"%1","name":"%2 - %3"')if not a.updateData(l,e)then a.print('wtWeapons update error')end::r::end end;h()return d end

                function radarClass(a,b,c,d,e,f,g)local h=require("dkjson")local i={}local j=50;local l=0.1;local m={['l']=true,['m']=true,['s']=true,['xs']=true}local n=false;local o=f or{}local p={}local q={}local r=0;local s={}local t=0;local u={}local v={}local w={}local x;local y;local z=0;local A;i.counter={["total"]=0,["displayed"]=0,["allies"]=0,["enemies"]=0,["dead"]=0,["locked by"]=0,["attacked by"]=0,closest={},idents={},threats={}}i.lastEnemyContact=0;if g~=nil and g.hasKey('friendlist')then local B=0;for k,C in pairs(h.decode(g.getStringValue('friendlist')))do p[tonumber(k)]=C;B=B+1 end;a.print('Loaded '..B..' ids to friendlist from databank')end;if g~=nil and g.hasKey('deadCores')then local B=0;for k,C in pairs(h.decode(g.getStringValue('deadCores')))do q[tonumber(k)]=C;B=B+1 end;a.print('Loaded '..B..' ids to deadCores from databank')end;local D=false;local E=false;local F={}local G=m;local H=false;local I;local J={}local K=a.getScreenHeight()local L=a.getScreenWidth()local function M(N,O,P,Q,R)local S=400;local T=c.getPointOnScreen({O.x,O.y,O.z})if T[3]<=0 then return''end;local U=T[1]*L-S/2;local V=T[2]*K-S/2;svg=[[<svg viewBox="0 0 500 500" class="point" style="left:]]..U..[[px;top:]]..V..[[px;position:absolute;width:]]..S..[[px;height:]]..S..[[px">]]if N=='circle'then svg=svg..[[<circle cx="250" cy="250" r="10" opacity="0.3" stroke="]]..P..[[" stroke-width="2" fill="none"/>]]elseif N=='cross'then svg=svg..[[<line x1="250" y1="242" x2="250" y2="258" opacity="0.5"  stroke="]]..P..[[" stroke-width="2"/><line x1="242" y1="250" x2="258" y2="250" opacity="0.5"  stroke="]]..P..[[" stroke-width="2"/>]]elseif N=='box'then svg=svg..[[<rect x="240" y="240" width="20" height="20" style="fill: rgba(0,0,0,0); stroke: ]]..P..[[; stroke-width: 2"/>]]end;svg=svg..[[<text x="50%" y ="47%" style="text-anchor: middle; fill: ]]..P..[[; font-family: Arial, sans-serif; font-size: 14px;">]]..(Q or'')..[[</text><text x="50%" y ="55%" style="text-anchor: middle; fill: ]]..P..[[; font-family: Arial, sans-serif; font-size: 14px;">]]..(R or'')..[[</text></svg>]]return svg end;local function W(O,P,Q,R)return M('box',O,P,Q,R)end;local function X()I=a.createData(e.getWidgetData())a.addDataToWidget(I,a.createWidget(a.createWidgetPanel(''),e.getWidgetType()))end;local function Y()if g~=nil then g.setStringValue('deadCores',h.encode(q))a.print('saved deadCores to databank')end end;local function Z()local _={}local a0={}local a1={}local a2={}local a3={}local a4=e.getWidgetData()local a5=a4:gmatch('({"constructId":".-{.-}.-})')local a6=next(F)~=nil;local a7={["total"]=0,["displayed"]=0,["allies"]=0,["enemies"]=0,["dead"]=0,["locked by"]=0,["attacked by"]=0,idents={},threats={},closest={}}for a8 in a5 do a7["total"]=a7["total"]+1;if a7["total"]%j==0 then coroutine.yield()end;local a9=a.getUtcTime()local aa=tonumber(a8:match('"constructId":"([%d]*)"'))local ab=a8:match('"size":"(.-)"')local ac=e.hasMatchingTransponder(aa)if ac then table.insert(_,aa)end;local ad=o[aa]==true or p[aa]==true or ac;local ae=e.isConstructAbandoned(aa)if ae then a7["dead"]=a7["dead"]+1;if q[aa]==nil and a9-10>r then r=a9;local af=e.getConstructWorldPos(aa)q[aa]=af;Y()local ag='Dead core: '..aa..' at '..'::pos{0,0,'..af[1]..','..af[2]..','..af[3]..'}'a.print(ag)end elseif ad then if#a7.closest<8 then table.insert(a7.closest,aa)end;a7["allies"]=a7["allies"]+1 else if#a7.closest<8 then table.insert(a7.closest,aa)end;a7["enemies"]=a7["enemies"]+1 end;local ah=e.getThreatFrom(aa)if ah=='identified'then table.insert(a7.threats,aa)a7["locked by"]=a7["locked by"]+1 elseif ah=='attacked'then table.insert(a7.threats,aa)a7["attacked by"]=a7["attacked by"]+1 end;if e.isConstructIdentified(aa)then table.insert(a7.idents,aa)end;if e.getThreatRateFrom(aa)<3 and F[aa%1000]~=true and aa~=e.getTargetId()then if not D and not G[ab:lower()]then goto ai end;if ad~=n then goto ai end;if not D and a6 and F[aa%1000]~=true then goto ai end;if D and not e.isConstructIdentified(aa)then goto ai end end;if E then a8=a8:gsub('"name":"(.?.?.?.?).-"','"name":"-----------------------%1 - '..string.format("%03d",conructID%1000)..'"')else a8=a8:gsub('"name":"(.+)"','"name":"'..string.format("%03d",aa%1000)..' - %1"')end;a8=a8:gsub('"distance":(%d+).-,','"distance":%1,')if not H then table.insert(a0,a8)elseif ab=="L"then table.insert(a0,a8)elseif ab=="M"then table.insert(a1,a8)elseif ab=="S"then table.insert(a2,a8)elseif ab=="XS"then table.insert(a3,a8)end;a7["displayed"]=a7["displayed"]+1::ai::end;if i.counter["enemies"]==0 and a7["enemies"]>0 then a.playSound("wthud/radarContact.mp3")elseif a7["enemies"]==0 and i.counter["enemies"]>0 then a.playSound("wthud/radarClear.mp3")end;if i.counter["enemies"]<a7["enemies"]then i.lastEnemyContact=a.getUtcTime()end;i.counter=a7;local aj={}for ak,al in pairs(G)do if al then table.insert(aj,ak:upper())end end;table.sort(aj)local am=(a7["displayed"]..'/'..a7["total"]..' ')..(a6 and'FOCUS 'or'')..(n and'Friends'or'Enemies')..(D and' - LOCKED'or'')..' ('..table.concat(aj,",")..')'local an=a4:match('"elementId":".+')local ao=e.getTargetId()if g~=nil then if e.isConstructIdentified(ao)then g.setIntValue('targetSpeed',math.floor(e.getConstructSpeed(ao)))else g.setIntValue('targetSpeed',-1)end end;an=an:gsub('"errorMessage":""','"errorMessage":"'..am..'"')local ap=''local aq=false;if#a0>0 then ap=ap..table.concat(a0,",")aq=true end;if#a1>0 then if aq then ap=ap..','end;ap=ap..table.concat(a1,",")aq=true end;if#a2>0 then if aq then ap=ap..','end;ap=ap..table.concat(a2,",")aq=true end;if#a3>0 then if aq then ap=ap..','end;ap=ap..table.concat(a3,",")end;a4='{"constructsList":['..ap.."],"..an;a.updateData(I,a4)J=_ end;local function ar()while true do Z()coroutine.yield()end end;local as=coroutine.create(ar)local function at(au)local av=au;while true do av,k=string.gsub(av,"^(-?%d+)(%d%d%d)",'%1,%2')if k==0 then break end end;return av end;local function aw(ax)if ax==nil then return''end;ax=ax*3.6;return at(math.floor(ax))..' km/h'end;local function ay(az)if e.isConstructIdentified(az)then return aw(vec3(e.getConstructWorldVelocity(az)):len())end;return aw(s[az])end;local function aA(az)local aB=e.getConstructOwnerEntity(az)if aB.isOrganization then return' '..a.getOrganization(aB.id).tag else return' '..a.getPlayerName(aB.id)end end;function i.onFlush()local a9=a.getUtcTime()for aC,aD in ipairs(J)do local O=vec3(e.getConstructWorldPos(aD))if u[aD]==nil then u[aD]={O,a9}end;if O~=u[aD][1]then v[aD]=u[aD]u[aD]={O,a9}if w[aD]==nil then w[aD]=u[aD]end;if a9-t>1 then t=a9;s[aD]=(u[aD][1]-w[aD][1]):len()/(u[aD][2]-w[aD][2])w[aD]=u[aD]end end end;local ao=e.getTargetId()if ao==x then local aE=e.getConstructDistance(ao)if y==nil then y={aE,a9}elseif aE~=y[1]and a9-y[2]>1 then A=(y[1]-aE)/(a9-y[2])y={aE,a9}end else y=nil;A=nil end;x=ao end;function i.getHUD()local aF=''if not showGunnerAR then return aF end;local a9=a.getUtcTime()for aC,aD in ipairs(J)do local O=vec3(e.getConstructWorldPos(aD))if v[aD]~=nil then O=u[aD][1]+(u[aD][1]-v[aD][1]):normalize()*(a9-u[aD][2])*(u[aD][1]-v[aD][1]):len()/(u[aD][2]-v[aD][2])end;if O then local P="#0cf27b"if e.getThreatRateFrom(aD)>2 then P="#FF5B72"end;aF=aF..W(O,P,aD%1000 ..aA(aD),ay(aD))end end;local aG=vec3(d.getWorldPosition())for aD,af in pairs(q)do local af=vec3(af)local aH=(vec3(af)-aG):len()if aH>400000 then aF=aF..W(af,"#ccc",aD%1000,string.format('%0.2f',aH/200000)..' su')end end;return aF end;function i.getTargClosingSpeed()return A end;function i.onTick()coroutine.resume(as)end;function i.clearIDFilter()F={}end;function i.addIDFilter(aI)F[aI]=true end;local function aJ()if g~=nil then g.setStringValue('friendlist',h.encode(p))a.print('saved friendlist to databank')end end;function i.onTextInput(aK)aK=string.lower(aK)if aK:match('^f%A*$')~=nil then i.clearIDFilter()for aI in aK:gmatch('%D(%d%d%d)')do i.addIDFilter(tonumber(aI))end elseif aK:match('^s[sh]?%s?x?[sml]?$')~=nil then local aL,ak=aK:match('^s([sh]?)%s?(x?[sml]?)$')local aM;if aL==nil or aL==''then G=m;return elseif aL=='s'then aM=true elseif aL=='h'then aM=false end;if ak==nil then return end;G[ak]=aM elseif aK:match('^addall')~=nil then for aC,aI in ipairs(e.getConstructIds())do p[aI]=true;a.print('Adding '..aI..' to friendlist')end;aJ()elseif aK:match('^addid')~=nil then for aI in aK:gmatch('%D(%d+)')do p[tonumber(aI)]=true end;aJ()elseif aK:match('^clearall$')~=nil then p={}aJ()elseif aK:match('^cleardead')~=nil then local aN=true;for aI in aK:gmatch('%D(%d%d%d)')do aN=false;for aO,aC in pairs(q)do if aO%1000==tonumber(aI)then q[aO]=nil end end;i.addIDFilter(tonumber(aI))end;if aN then q={}end;Y()end end;function i.toggleFriendlyMode()n=not n end;function i.toggleOnlyIdentified()D=not D end;function i.toggleGunnerMode()E=not E end;X()b.setTimer('wtRadarTick',l)return i end

                function damageReporterClass(a,b,c)local d={}if c==nil then c=10 end;if a==nil then a=1 end;if b==nil then b=60 end;local e=b+c+5;local f=50000;local g;local h=""local function i()g={peakDps=0,damageDealt=0,damageDealtById={},damageDealtHistory={},damageRecievedHistory={},shotsHit=0,shotsFired=0}for j=1,e do g.damageDealtHistory[#g.damageDealtHistory+1]=0;g.damageRecievedHistory[#g.damageRecievedHistory+1]=0 end end;i()local function k(l)table.remove(l,1)l[#l+1]=0 end;local function m(n,o,p)p=p or f;local function q(r,s,t)local u={}for j=0,t-1 do local v=0;for w=0,s-1 do v=v+r[#r-j-w]end;local x=v/s;u[t-j]=x;if x>p then p=x end end;return u end;local function y(r,t)local v=0;for j=#r,#r-t+1,-1 do v=v+r[j]end;return v/t end;local z=200;local A=100;local B=30;local C=30;p=p or 50000;local function D(E)local F={}for j,r in ipairs(E)do local G=(1-math.min(r/p,1))*A+C;local H=(j-1)/(#E-1)*z+B;table.insert(F,{x=H,y=G})end;return F end;local I=c;local J=b;local K=q(n,I,J)local L=K[#K]local M=q(o,I,J)local N=M[#M]local O=y(n,J)local P=y(o,J)local Q=(1-O/p)*A+C;local R=(1-P/p)*A+C;local S=D(K)local T=D(M)local function U(V,W)local X=''local Y;for Z,_ in ipairs(V)do X=X..'<circle class="'..W..'" cx="'.._.x..'" cy="'.._.y..'" r="1"/>'if Y~=nil then X=X..'<line class="'..W..'" x1="'.._.x..'" y1="'.._.y..'" x2="'..Y.x..'" y2="'..Y.y..'" />'end;Y=_ end;return X end;local function a0(a1)return string.format('%.1fk',a1/1000)end;local a2=[[
                    <svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                     width="260px" height="160px" viewBox="0 0 260 160" xml:space="preserve">
                <style type="text/css">
                    .outd{
                        stroke-width: 1;
                        stroke: #050;
                        stroke-opacity: 0.3;
                        fill-opacity: 0.75;
                        fill: #fff;
                    }
                    .ind{
                        stroke-width: 1;
                        stroke: #FF5B72;
                        stroke-opacity: 0.3;
                        fill-opacity: 0.75;
                        fill: #fff;
                    }
                    .text{
                        stroke-width: 1;
                        font-size: 8;
                    }
                </style>
                    <rect class="outd" x="29" y="129" width="202" height="2"/>
                    <rect class="outd"  x="29" y="29" width="2" height="102"/>
                ]]if O>0 then a2=a2 ..U(S,'ind')a2=a2 ..'<line class="ind" stroke-width="0.5" x1="28" y1="'..Q..'" x2="228" y2="'..Q..'" stroke-dasharray="5" stroke-dashoffset="7.5"/><text class="ind text" font-size="11" text-anchor="end" x="27" y="'..Q..'">'..a0(O)..'</text>'end;if P>0 then a2=a2 ..U(T,'outd')a2=a2 ..'<line class="" stroke="#cfc" stroke-opacity="0.5" stroke-width="1" x1="28" y1="'..R..'" x2="228" y2="'..R..'" stroke-dasharray="5" stroke-dashoffset="7.5"/><text class="outd text" font-size="11" text-anchor="end" x="27" y="'..R..'">'..a0(P)..'</text>'end;if N>0 then a2=a2 ..'<text class="outd text" font-size="11" x="233" y="'..T[#T].y..'">'..a0(N)..'</text>'end;if L>0 then a2=a2 ..'<text class="ind text" font-size="11" x="233" y="'..S[#S].y..'">'..a0(L)..'</text>'end;a2=a2 ..'</svg>'return a2 end;function d.weaponOnHit(a3,a4)g.damageDealt=g.damageDealt+a4;g.damageDealtById[a3]=(g.damageDealtById[a3]or 0)+a4;g.shotsHit=g.shotsHit+1;g.shotsFired=g.shotsFired+1;g.damageDealtHistory[#g.damageDealtHistory]=g.damageDealtHistory[#g.damageDealtHistory]+a4 end;function d.weaponOnMiss(a3)g.shotsFired=g.shotsFired+1 end;function d.shieldOnAbsorb(a5,a6)g.damageRecievedHistory[#g.damageRecievedHistory]=g.damageRecievedHistory[#g.damageRecievedHistory]+a5 end;function d.onPvPTimer(a7)if not a7 then i()end end;function d.onTimer()local a8=0;for j=e,e-c,-1 do a8=a8+g.damageDealtHistory[j]end;local a9=a8/c;if a9>g.peakDps then g.peakDps=a9 end;h=m(g.damageRecievedHistory,g.damageDealtHistory)k(g.damageDealtHistory)k(g.damageRecievedHistory)end;h=m(g.damageRecievedHistory,g.damageDealtHistory)unit.setTimer('weaponStats',a)function d.getDamageStats()return g end;function d.getDpsGraphHtml()return h end;return d end

                wtWeapons = weaponClass(system, weapon, weaponsPerPanel)
                wtRadar = radarClass(system, unit, library, construct, radar_1, {}, db_1)
                dpsReporter = damageReporterClass()

                local a=[[
                <style>
                .ui {
                    color: white;
                    font-family: monospace;
                    font-size: 0.75em;
                     font-weight: bold;
                     opacity: 0.75;
                    white-space: pre;
                     text-shadow: -1px -1px 0 #050, 1px -1px 0 #050, -1px 1px 0 #050, 1px 1px 0 #050;
                }
                .blue {
                    color: #5BD8FF;
                     text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
                }
                .red {
                    color: #FF5B72;
                     text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
                }
                .orange {
                    color: #fc934f;
                     text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
                }
                .yellow {
                    color: #fce94f;
                     text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
                }
                .green {
                    color: #72ff5b;
                     text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
                }
                </style>
                ]]local function b(c)return math.max(math.min(50000/3.6,50000/3.6-10713*(c-10000)/(853926+c-10000)),20000/3.6)end;local function d(e,f,g,h)local i='-'h=h or'█'local j=math.floor(math.min(math.abs(math.max(f-1,0)),1)*e+0.5)local l=math.floor(math.min(math.abs(f),1)*e+0.5)local m;if f>=0 then m='[</a><a class="'..(g or'')..'">'..string.rep(h,l-j)..'</a><a class="red">'..string.rep(h,j)..'</a><a>'..string.rep(i,e-l)..']'elseif f<0 then m='['..string.rep(i,e-l)..'</a><a class="red">'..string.rep(h,l).."</a><a>]"else m='[</a><a class="red">'..string.rep('X',e).."</a><a>]"end;return m end;local function n(o)if o<1000 then return math.ceil(o)..'m'elseif o<1000*10 then return string.format("%.2fkm",o/1000)elseif o<1000*100 then return string.format("%.1fkm",o/1000)elseif o<1000*200*10 then return string.format("%.2fsu",o/1000/200)elseif o<1000*200*100 then return string.format("%.1fsu",o/1000/200)else return math.ceil(o/1000/200)..'su'end end;local function p(q,r,s)if q>r+s*2 then return'red'elseif q>r+s then return'orange'elseif q>r then return'yellow'else return''end end;local function t(u)local v=u;while true do v,k=string.gsub(v,"^(-?%d+)(%d%d%d)",'%1,%2')if k==0 then break end end;return v end;local function w(x)if x==nil then return''end;x=x*3.6;return t(math.floor(x))..' km/h'end;local function y(x)x=x or 5;local z={'|','/','|','\\'}local A=math.floor(system.getUtcTime()*x%#z)+1;return z[A]end;local function B(C)if C<1000 then return math.floor(C)elseif C<1000*10 then return string.format("%.2fk",C/1000)elseif C<1000*100 then return string.format("%.1fk",C/1000)elseif C<1000*1000*10 then return string.format("%.2fm",C/1000000)elseif C<1000*200*100 then return string.format("%.1fm",C/1000000)else return math.ceil(C/1000000)..'m'end end;local function D(e,E)local F=(e-#E)/2;local G=math.floor(F)local H=math.ceil(F)local I=string.rep(' ',G)..E..string.rep(' ',H)return I end;local function J()return radar_1 end;local function K()activeRadar=J()if wtRadar==nil then return''end;local function L(M)if activeRadar.getThreatRateFrom(M)>2 then return'red'elseif activeRadar.hasMatchingTransponder(M)then return'green'else return''end end;local function N(M)return string.format('%2s',activeRadar.getConstructCoreSize(M))end;local function O(M)local P=activeRadar.getConstructOwnerEntity(M)if P==nil then return''end;local Q;if P.isOrganization then Q=system.getOrganization(P.id).tag or''else Q=system.getPlayerName(P.id)or''end;return Q:sub(1,4)end;local function R(M)if M==nil then return string.rep(' ',19)end;return'</a><a class="'..L(M)..'">'..N(M)..' '..string.format('%03d',M%1000)..' '..string.format('%-6s',n(activeRadar.getConstructDistance(M)))..'  '..string.format('%-4s',O(M))..'</a><a>'end;local function S(M)if M==nil then return string.rep(' ',11)end;return string.format('%-11s',w(activeRadar.getConstructSpeed(M)))end;local T=''if wtRadar.counter["attacked by"]>0 then T='red'end;return[[
                <style>
                .contacts-panel {
                    position: absolute;
                    top: 2vh;
                    left: 20vw;
                    font-size: 0.75em;
                }
                </style>
                <div class="ui contacts-panel"><a>
                 ___]]..D(71,'CONTACTS '..string.format('%-5d',wtRadar.counter["total"]))..[[___
                |     ENEMIES ]]..string.format('%-5d',wtRadar.counter["enemies"])..[[   |                                 |    </a><a class="]]..T..[[">ATTACKING  ]]..string.format('%-5d',wtRadar.counter["attacked by"])..[[</a><a> |
                |      ALLIES ]]..string.format('%-5d',wtRadar.counter["allies"])..[[   |          IDENTIFIED             |     THREATS   ]]..string.format('%-5d',wtRadar.counter["locked by"]+wtRadar.counter["attacked by"])..[[ | 
                |                     |                                 |                     |
                  ]]..R(wtRadar.counter.closest[1])..[[ | ]]..R(wtRadar.counter.idents[1])..[[ ]]..S(wtRadar.counter.idents[1])..[[ | ]]..R(wtRadar.counter.threats[1])..[[ 
                  ]]..R(wtRadar.counter.closest[2])..[[ | ]]..R(wtRadar.counter.idents[2])..[[ ]]..S(wtRadar.counter.idents[2])..[[ | ]]..R(wtRadar.counter.threats[2])..[[ 
                  ]]..R(wtRadar.counter.closest[3])..[[ | ]]..R(wtRadar.counter.idents[3])..[[ ]]..S(wtRadar.counter.idents[3])..[[ | ]]..R(wtRadar.counter.threats[3])..[[ 
                  ]]..R(wtRadar.counter.closest[4])..[[ | ]]..R(wtRadar.counter.idents[4])..[[ ]]..S(wtRadar.counter.idents[4])..[[ | ]]..R(wtRadar.counter.threats[4])..[[ 
                  ]]..R(wtRadar.counter.closest[5])..[[ | ]]..R(wtRadar.counter.idents[5])..[[ ]]..S(wtRadar.counter.idents[5])..[[ | ]]..R(wtRadar.counter.threats[5])..[[ 
                  ]]..R(wtRadar.counter.closest[6])..[[ | ]]..R(wtRadar.counter.idents[6])..[[ ]]..S(wtRadar.counter.idents[6])..[[ | ]]..R(wtRadar.counter.threats[6])..[[ 
                | ]]..R(wtRadar.counter.closest[7])..[[ | ]]..R(wtRadar.counter.idents[7])..[[ ]]..S(wtRadar.counter.idents[7])..[[ | ]]..R(wtRadar.counter.threats[7])..[[ |
                | ]]..R(wtRadar.counter.closest[8])..[[ | ]]..R(wtRadar.counter.idents[8])..[[ ]]..S(wtRadar.counter.idents[8])..[[ | ]]..R(wtRadar.counter.threats[8])..[[ |
                |___]]..string.rep(' ',71)..[[___|
                </a></div>
                ]]end;function getGunnerHudHtml()local U=a;local activeRadar=J()local V=0;local W=0;local X=0;local Y=0;local Z=ammoCont_1~=nil and ammoCont_1.getItemsVolume()/ammoCont_1.getMaxVolume()or 0;local _=d(14,Z)local a0=math.floor(Z*100+0.5)local a1=dpsReporter.getDamageStats()local a2=string.format('%-4s',a1.shotsFired>0 and math.floor(a1.shotsHit/a1.shotsFired*100+0.5)..'%'or'NO INFO')local a3={}for a4=1,6 do a3[a4]=string.rep(' ',34)end;if(weapon_size or 0)>0 then local a5=0;for a4,a6 in ipairs(weapon)do a5=a5+a6.getHitProbability()local a7=a6.getWidgetData()local a8=a6.getMaxAmmo()>0 and a6.getAmmoCount()/a6.getMaxAmmo()or 0;local a9=a6.getStatus()local aa=a6.getOperationalState()~=1;local ab=''local ac,h;if aa then ac='BROKEN'ab='red'elseif a9==4 then ac='RELOADING'ab='yellow'h=y()a8=1 elseif a9==5 then ac='UNLOADING'ab='yellow'h=y()a8=1 elseif a8==0 then ac='RELOAD'ab='red'elseif a9==6 then ac='BLOCKED'ab='red'elseif a8<=0.1 then ac='LOW AMMO'ab='yellow'elseif a9==2 then ac='FIRING'elseif a9==1 then ac='IDLE'else ac='ERROR'ab='red'end;local ad='</a><a class="'..ab..'">'..a6.getClass():match('Weapon(.)')..'</a><a>'local ac='</a><a class="'..ab..'">'..string.format('%-9s',ac)..'</a><a>'local ae=d(20,a8,ab,h)a3[a4]=ad..' '..ae..' '..ac end;V=a5/weapon_size;W=weapon[1].getOptimalTracking()X=weapon[1].getOptimalDistance()Y=(weapon[1].getMaxDistance()-weapon[1].getOptimalDistance())/2 end;local af=activeRadar.getTargetId()if af~=0 then local ag=activeRadar.getConstructAngularSpeed(af)*180/math.pi;local ah=wtRadar.getTargClosingSpeed()local ai=activeRadar.getConstructSpeed(af)local aj=activeRadar.getConstructName(af)local ak=activeRadar.getConstructMass(af)local al=activeRadar.getConstructCoreSize(af)local am=activeRadar.isConstructAbandoned(af)local an=activeRadar.getConstructDistance(af)local ao=b(ak)local ap=0;local aq=activeRadar.isConstructIdentified(af)local ar=aq and string.rep(' ',12)or'</a><a class="red">UNIDENTIFIED</a><a>'local as=string.format('%4s','['..al..']')local at=string.format('%03d',af%1000)local au=string.format('%-17s',aj:sub(1,17))local av=am and'</a><a class="red">DEAD</a><a>'or'    'local aw=string.format('%4s',math.floor(V*100+0.5)..'%')..' '..d(18,V)local ax=p(ag,W,W)local ay=aq and'</a><a class="'..ax..'">'..string.format('%3d',math.ceil(ag))..'</a><a> deg/s'or string.rep(' ',9)local az=p(an,X,Y)local aA='</a><a class="'..az..'">'..string.format('%6s',n(an))..'</a><a>'local aB=string.format('%12s',w(ah))local aC=aq and string.format('%11s',w(ai))or string.rep(' ',11)local aD=aq and string.format('%11s',w(ao))or string.rep(' ',11)U=U..[[
                <style>
                .target-panel {
                    position: absolute;
                    top: 69vh;
                    left: 29vw;
                    font-size: 0.75em;
                }
                </style>
                <div class="ui target-panel"><a>
                 ___ ]]..as..[[ ]]..at..[[ - ]]..au..[[ ___
                |               ]]..av..[[                 | 
                | hit prob ]]..aw..[[ |
                |            ]]..ar..[[            |
                             |  TARGET   |  OPTIMAL  
                  ---------------------------------- 
                    angular  | ]]..ay..[[ | ]]..string.format('%-9s',math.floor(W)..' deg/s')..[[ 
                  -----------|-----------|---------- 
                   distance  |   ]]..aA..[[  | ]]..string.format('%6s',n(X))..[[  
                  -----------|-----------|---------- 
                  closing at |    ]]..aB..[[   
                       speed |     ]]..aC..[[  
                   max speed |     ]]..aD..[[      
                |     damage |          ]]..string.format('%-7s',B(a1.damageDealtById[af]or 0))..[[      |
                | -----------|---------------------- |
                |___                              ___|
                </a></div>
                ]]end;U=U..[[
                <style>
                .weapon-panel {
                    position: absolute;
                    top: 2vh;
                    left: 50vw;
                    font-size: 0.9em;
                }
                </style>
                <div class="ui weapon-panel"><a>
                 ___                               ___ ___                   ___
                |            WEAPON STATUS            |                         |
                |  ]]..a3[1]..[[ |   SHOTS FIRED   ]]..string.format('%-7s',tostring(a1.shotsFired))..[[ |
                   ]]..a3[2]..[[     SHOTS HIT     ]]..string.format('%-7s',tostring(a1.shotsHit))..[[ 
                   ]]..a3[3]..[[     ACCURACY      ]]..string.format('%-7s',a2)..[[ 
                   ]]..a3[4]..[[     PEAK DPS      ]]..string.format('%-7s',B(a1.peakDps))..[[ 
                   ]]..a3[5]..[[     DAMAGE        ]]..string.format('%-7s',B(a1.damageDealt))..[[ 
                |  ]]..a3[6]..[[ |   AMMO ]].._..[[ |
                |___                               ___|___                   ___|
                </a></div>
                ]]U=U..[[
                <style>
                .dps-panel {
                    position: absolute;
                    top: 16vh;
                    left: 70vw;
                    font-size: 0.75em;
                }
                </style>
                <div class="dps-panel">
                ]]..dpsReporter.getDpsGraphHtml()..[[
                </div>
                ]]U=U..K()U=U..[[
                <style>
                body {
                    box-shadow: inset 0 0 800px 0px rgba(255,0,0,]]..1-system.getUtcTime()+wtRadar.lastEnemyContact..[[)
                }
                </style>
                ]]return U end

                system.showScreen(1)

                function updateHud()
                    system.setScreen(getHudHTML() .. getGunnerHudHtml() .. wtRadar.getHUD())
                end
    
        onTimer:
            args: ["wtShieldTick"]
            lua: |
                wtShield.onTick()
    construct:
        onPvPTimer(active):
            lua: |
                dpsReporter.onPvPTimer(active)
    system:
        onUpdate:
            lua: |
                Nav:update()
                wtWeapons.onUpdate()
                updateHud()
                wtMonitor.onUpdate()
        onFlush:
            lua: |
                wtRadar.onFlush()
                local a=0.8;local b=1;local c=1.5;local d=3;local e=1;local f=false;local g=2;local h=true;local i=2;local j=2;a=math.max(a,0.01)b=math.max(b,0.01)c=math.max(c,0.01)j=math.max(j,0.01)d=math.max(d,0.01)e=math.max(e,0.01)g=math.max(g,0.01)i=math.max(i,0.01)local k=pitchInput+system.getControlDeviceForwardInput()local l=rollInput+system.getControlDeviceYawInput()local m=yawInput-system.getControlDeviceLeftRightInput()local n=brakeInput;local o=vec3(core.getWorldVertical())local p=vec3(construct.getWorldOrientationUp())local q=vec3(construct.getWorldOrientationForward())local r=vec3(construct.getWorldOrientationRight())local s=vec3(construct.getWorldVelocity())local t=vec3(construct.getWorldVelocity()):normalize()local u=getRoll(o,q,r)local v=math.abs(u)local w=utils.sign(u)local x=1;local y=0;local z=1;local A=vec3(construct.getWorldAngularVelocity())local B;local C;if dampingOff==1 and k==0 and l==0 and m==0 then B=A else j=10;if maxAngularSpeed~=0 then C=math.min(construct.getMaxAngularSpeed(),maxAngularSpeed)else C=construct.getMaxAngularSpeed()end;B=(k*r+l*q+m*p):normalize()*C end;local D=j*(B-A)local E=vec3(construct.getWorldAirFrictionAngularAcceleration())D=D-E;Nav:setEngineTorqueCommand('torque',D,x,'airfoil, torque2, torque','','',z)local F=-n*(d*s+e*t)Nav:setEngineForceCommand('brake',F)local G=''local H=vec3()local I=false;local J='thrust analog longitudinal'local K=Nav.axisCommandManager:getAxisCommandType(axisCommandId.longitudinal)if K==axisCommandType.byThrottle then local L=Nav.axisCommandManager:composeAxisAccelerationFromThrottle(J,axisCommandId.longitudinal)Nav:setEngineForceCommand(J,L,x)elseif K==axisCommandType.byTargetSpeed then local L=Nav.axisCommandManager:composeAxisAccelerationFromTargetSpeed(axisCommandId.longitudinal)G=G..' , '..J;H=H+L;if Nav.axisCommandManager:getTargetSpeed(axisCommandId.longitudinal)==0 or Nav.axisCommandManager:getCurrentToTargetDeltaSpeed(axisCommandId.longitudinal)<-Nav.axisCommandManager:getTargetSpeedCurrentStep(axisCommandId.longitudinal)*0.5 then I=true end end;local M='thrust analog lateral'local N=Nav.axisCommandManager:getAxisCommandType(axisCommandId.lateral)if N==axisCommandType.byThrottle then local O=Nav.axisCommandManager:composeAxisAccelerationFromThrottle(M,axisCommandId.lateral)Nav:setEngineForceCommand(M,O,x)elseif N==axisCommandType.byTargetSpeed then local P=Nav.axisCommandManager:composeAxisAccelerationFromTargetSpeed(axisCommandId.lateral)G=G..' , '..M;H=H+P end;local Q='thrust analog vertical'local R=Nav.axisCommandManager:getAxisCommandType(axisCommandId.vertical)if R==axisCommandType.byThrottle then local S=Nav.axisCommandManager:composeAxisAccelerationFromThrottle(Q,axisCommandId.vertical)Nav:setEngineForceCommand(Q,S,x,'airfoil','ground','',z)elseif R==axisCommandType.byTargetSpeed then local T=Nav.axisCommandManager:composeAxisAccelerationFromTargetSpeed(axisCommandId.vertical)G=G..' , '..Q;H=H+T end;if H:len()>constants.epsilon then if brakeInput~=0 or I or math.abs(t:dot(q))<0.95 then G=G..', brake'end;Nav:setEngineForceCommand(G,H,y,'','','',z)end;Nav:setBoosterCommand('rocket_engine')
        actionStart:
            args: [forward]
            lua: pitchInput = pitchInput - 1
        actionStop:
            args: [forward]
            lua: pitchInput = pitchInput + 1
        actionStart:
            args: [backward]
            lua: pitchInput = pitchInput + 1
        actionStop:
            args: [backward]
            lua: pitchInput = pitchInput - 1
        actionStart:
            args: [left]
            lua: rollInput = rollInput - 1
        actionStop:
            args: [left]
            lua: rollInput = rollInput + 1
        actionStart:
            args: [right]
            lua: rollInput = rollInput + 1
        actionStop:
            args: [right]
            lua: rollInput = rollInput - 1
        actionStart:
            args: [yawright]
            lua: yawInput = yawInput - 1
        actionStop:
            args: [yawright]
            lua: yawInput = yawInput + 1
        actionStart:
            args: [yawleft]
            lua: yawInput = yawInput + 1
        actionStop:
            args: [yawleft]
            lua: yawInput = yawInput - 1
        actionStart:
            args: [brake]
            lua: brakeInput = 1
        actionStop:
            args: [brake]
            lua: brakeInput = brakeInput - 1
        actionStart:
            args: [booster]
            lua: Nav:toggleBoosters()
        actionStart:
            args: [stopengines]
            lua: |
                if unit.getThrottle() == 0 then
                    Nav.axisCommandManager:setThrottleCommand(axisCommandId.longitudinal, 100)
                else
                    Nav.axisCommandManager:setThrottleCommand(axisCommandId.longitudinal, 0)
                end
        actionLoop:
            args: [speedup]
            lua: Nav.axisCommandManager:updateThrottleCommand(axisCommandId.longitudinal, 0.05)
        actionLoop:
            args: [speeddown]
            lua: Nav.axisCommandManager:updateThrottleCommand(axisCommandId.longitudinal, -0.05)
        actionStart:
            args: [option1]
            lua: |
                wtShield.toogleAutoRes()
        actionStart:
            args: [option2]
            lua: |
                dampingOff = 1 - dampingOff
        actionStart:
            args: [option3]
            lua: |
                showARCompass = not showARCompass
        actionStart:
            args: [option8]
            lua: |
                if lshiftInput then 
                    shield.toggle()
                end
        actionStart:
            args: [option9]
            lua: |
                if shield.isVenting() == 1 then 
                    shield.stopVenting()
                else
                    shield.startVenting()
                end
        actionStart:
            args: [lshift]
            lua: |
                lshiftInput = true
        actionStop:
            args: [lshift]
            lua: |
                lshiftInput = false
                if manualResToApply then 
                    wtShield.manualOverride(manualResToApply)
                    manualResToApply = nil
                end
        actionStart:
            args: [strafeleft]
            lua: |
                if lshiftInput then
                    if not manualResToApply then manualResToApply = {0,0,0,0} end
                    manualResToApply[1] = manualResToApply[1] + 1
                else
                    Nav.axisCommandManager:updateCommandFromActionStart(axisCommandId.lateral, -1.0)
                end
        actionStop:
            args: [strafeleft]
            lua: |
                if unit.getAxisCommandValue(1) == -1 then
                    Nav.axisCommandManager:updateCommandFromActionStop(axisCommandId.lateral, 1.0)
                end
        actionStart:
            args: [up]
            lua: |
                if lshiftInput then
                    if not manualResToApply then manualResToApply = {0,0,0,0} end
                    manualResToApply[2] = manualResToApply[2] + 1
                elseif brakeInput == 1 then
                    brakeInput = 2
                else
                    Nav.axisCommandManager:updateCommandFromActionStart(axisCommandId.vertical, 1.0)
                end
        actionStop:
            args: [up]
            lua: |
                if unit.getAxisCommandValue(2) == 1 then
                    Nav.axisCommandManager:updateCommandFromActionStop(axisCommandId.vertical, -1.0)
                end
        actionStart:
            args: [straferight]
            lua: |
                if lshiftInput then
                    if not manualResToApply then manualResToApply = {0,0,0,0} end
                    manualResToApply[3] = manualResToApply[3] + 1
                else
                    Nav.axisCommandManager:updateCommandFromActionStart(axisCommandId.lateral, 1.0)
                end
        actionStop:
            args: [straferight]
            lua: |
                if unit.getAxisCommandValue(1) == 1 then
                    Nav.axisCommandManager:updateCommandFromActionStop(axisCommandId.lateral, -1.0)
                end
        actionStart:
            args: [down]
            lua: |
                if lshiftInput then
                    if not manualResToApply then manualResToApply = {0,0,0,0} end
                    manualResToApply[4] = manualResToApply[4] + 1
                else
                    Nav.axisCommandManager:updateCommandFromActionStart(axisCommandId.vertical, -1.0)
                end
        actionStop:
            args: [down]
            lua: |
                if unit.getAxisCommandValue(2) == -1 then
                    Nav.axisCommandManager:updateCommandFromActionStop(axisCommandId.vertical, 1.0)
                end
        inputText(text):
            lua: |
                onText(text)
                wtRadar.onTextInput(text)
        actionStart:
            args: [option4]
            lua: |
                showGunnerAR = not showGunnerAR
    unit:
        tick:
            args: ["wtRadarTick"]
            lua: |
                wtRadar.onTick()
        tick:
            args: ["weaponStats"]
            lua: |
                dpsReporter.onTimer()
    shield:
        down():
            lua: |
                wtShield.onDown()
        venting(active, restoredHitpoints):
            lua: |
                wtShield.onVentingEvent(active, restoredHitpoints)
        absorbed(hitpoints, hitpointsRaw):
            lua: |
                wtShield.onAbsorb(hitpoints, hitpointsRaw)
                dpsReporter.shieldOnAbsorb(hitpoints, hitpointsRaw)
    weapon_1:
        onHit(targetId,damage):
            lua: |
                dpsReporter.weaponOnHit(targetId, damage)
        onMissed(targetId):
            lua: |
                dpsReporter.weaponOnMiss(targetId)
        onElementDestroyed(targetId,elementId):
            lua: |
    weapon_2:
        onHit(targetId,damage):
            lua: |
                dpsReporter.weaponOnHit(targetId, damage)
        onMissed(targetId):
            lua: |
                dpsReporter.weaponOnMiss(targetId)
        onElementDestroyed(targetId,elementId):
            lua: |
    weapon_3:
        onHit(targetId,damage):
            lua: |
                dpsReporter.weaponOnHit(targetId, damage)
        onMissed(targetId):
            lua: |
                dpsReporter.weaponOnMiss(targetId)
        onElementDestroyed(targetId,elementId):
            lua: |
    weapon_4:
        onHit(targetId,damage):
            lua: |
                dpsReporter.weaponOnHit(targetId, damage)
        onMissed(targetId):
            lua: |
                dpsReporter.weaponOnMiss(targetId)
        onElementDestroyed(targetId,elementId):
            lua: |
    weapon_5:
        onHit(targetId,damage):
            lua: |
                dpsReporter.weaponOnHit(targetId, damage)
        onMissed(targetId):
            lua: |
                dpsReporter.weaponOnMiss(targetId)
        onElementDestroyed(targetId,elementId):
            lua: |
    weapon_6:
        onHit(targetId,damage):
            lua: |
                dpsReporter.weaponOnHit(targetId, damage)
        onMissed(targetId):
            lua: |
                dpsReporter.weaponOnMiss(targetId)
        onElementDestroyed(targetId,elementId):
            lua: |
