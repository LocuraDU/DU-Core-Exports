name: Albatross HUD 2.4.4
slots:
  core:
    class: CoreUnit
  antigrav:
    class: AntiGravityGeneratorUnit
  warpdrive:
    class: WarpDriveUnit
  shield:
    class: ShieldGeneratorUnit
  weapon:
    class: WeaponUnit
    select: manual
  radar:
    class: RadarPVPUnit
    select: manual
  databank:
    class: DatabankUnit
    select: manual
handlers:
  library:
    onStart:
      lua: "local utils,a=utils,string;local b,ipairs,pairs,setmetatable,c,d,e,f,g,h,i,j,k,m,n,o,p,q=system.print,ipairs,pairs,setmetatable,a.gmatch,a.gsub,a.sub,a.find,a.format,table.concat,table.sort,math.floor,math.max,math.min,math.abs,table.unpack,table.remove,utils.clamp;local r,s;status=coroutine.yield,coroutine.resume,coroutine.status;local u=require('atlas')local function v(w,x)if type(x)=='function'then w=x else w=function()end end end;local function y(z)local A={}for B,C in pairs(z)do A[#A+1]=B end;return A end;local function D(E)return E==math.huge or E==-math.huge end;function round(F,G)local H=10^(G or 0)return j(F*H+0.5)/H end;local function I(J)local K=-Flight.worldVertical;J=J-J:project_on(Flight.up)local L=vec3(0,0,1)L=L-L:project_on(Flight.up)local M=L:cross(Flight.up)local N=L:angle_between(J)*constants.rad2deg;if J:dot(M)<0 then N=360-N end;return N end;local function O(P,Q)return vec3(P):dist(vec3(Q))end;function formatDist(R)if type(R)~=\"number\"then return\"--\"end;local S=j(R/200000)local T=j(R)/1000;local U=j(T)/200;local V=''if U<0.49 then V=g(\"%.2f\",T)..'km'elseif U<10 then V=g(\"%.2f\",U)..'su'else V=g(\"%.1f\",U)..'su'end;return V end;function formatTime(t)if t~=t or t<1 or t==nil or type(t)~=\"number\"then return\"00:00:00\"end;local W=j(t/3600)t=t-3600*W;local m=j(t/60)t=t-60*m;local X=round(t,0)local Y=g(\"%02d:%02d:%02d\",W,m,X)return Y end;function timeToDist(R,Z)if type(R)~=\"number\"then return 0 end;return n(j(R)/1000/Z)*3600 end;function calcBrakeDist(_)local a0=50000*1000/3600;if not Flight.velocity then return 0,\"00m:00s\"end;if _==true and Flight.burnSpeed then a0=(Flight.maxSpeed-Flight.burnSpeed)*1000/3600 else a0=(Flight.maxSpeed+200)*1000/3600 end;local a1=a0*a0;local a2=Flight.maxBrake;local a3=Flight.velocity:len()if a3>0 then local a4=a2*-1/Flight.mass;local a5=0;local a6=0;local a7=a0*math.asin(a3/a0)local a8=a1*math.cos(a7/a0)/a4;local t=(a0*math.asin(0/a0)-a7)/a4;local R=a8-a1*math.cos((a4*t+a7)/a0)/a4;a5=a5+R;a6=a6+t;local m=j(a6/60)t=t-60*m;local X=round(t,0)local Y=g(\"%02dm:%02ds\",m,X)return a5,Y else return 0.0,\"00m:00s\"end end;function calcBrakeDist2(a9)local aa=Flight.velocity:len()if aa>1 then local ab=math.floor(aa*3.6)local C=ab*0.277777777778;local ac=a9*0.277777777778;local ad=Flight.mass*1000;local ae=Flight.maxBrake;local af=ae*1000/ad;local a5=0;local a6=0;if ab>ac then local t=C/af;local R=C*C/(2*af)a5=a5+R;a6=a6+t end;local m=j(a6/60)t=a6-60*m;local X=round(t,0)local Y=g(\"%02dm:%02ds\",m,X)return a5,Y else return 0.0,\"00m:00s\"end end;local function ag(ah,ai,aj)ai=ai:project_on_plane(ah)aj=aj:project_on_plane(ah)return atan(ai:cross(aj):dot(ah),ai:dot(aj))end;function h2rgb(ak,al,am)if am<0 then am=am+1 end;if am>1 then am=am-1 end;if am*6<1 then return ak+(al-ak)*am*6 elseif am*2<1 then return al elseif am*3<2 then return ak+(al-ak)*(2/3-am)*6 else return ak end end;function hsl_to_rgb(am,an,ao)am=am/360;an=an/100;ao=ao/100;local al=ao<=.5 and ao*(an+1)or ao+an-ao*an;local ak=ao*2-al;return h2rgb(ak,al,am+1/3)*255,h2rgb(ak,al,am)*255,h2rgb(ak,al,am-1/3)*255 end;local ap=function(aq)local ar,as,at,au,av,R,am,sa,l;if string.len(aq)==7 then ar=\"0x\"..e(aq,2,3)as=\"0x\"..e(aq,4,5)at=\"0x\"..e(aq,6,7)else return end;ar=ar/255;as=as/255;at=at/255;au=m(ar,as,at)av=k(ar,as,at)R=av-au;if R==0 then am=0 elseif av==ar then am=(as-at)/R%6 elseif av==as then am=(at-ar)/R+2 else am=(ar-as)/R+4 end;am=round(am*60)if am<0 then am=am+360 end;l=(av+au)/2;if R==0 then sa=0 else sa=R/(1-n(2*l-1))end;sa=round(sa*100)l=round(l*100)return{am,sa,l}end;local aw=function(t,ax,ay)sa=k(0,m(100,t[2]+ax))l=k(0,m(100,t[3]+ay))return g(\"hsl(%s,%s%%,%s%%)\",t[1],sa,l)end;Sound=(function()local az={base='albatross_hud\\\\',fs={init='v-hud-init.mp3',land='v-landing.mp3',confirm='v-confirmed.mp3',APapproach='v-autopilot-finishing.mp3'},q={}}function az:init()KeyActions:register('tick','SoundCheck','SoundCheck',self,'check')unit.setTimer('SoundCheck',0.25)return az end;function az.check(an)if system.isPlayingSound()==1 or#an.q<1 then return end;local aA=table.remove(an.q,1)if playSounds then system.playSound(an.base..an.fs[aA])end end;function az.play(an,aB,aC,aD)if aC then if system.isPlayingSound()==1 then return end end;if aD then system.stopSound()an.q={}end;an.q[#an.q+1]=aB end;return az end)()Kinematic={}local aE=30000000/3600;local aF=aE*aE;local aG=100;function lorentz(C)return 1/math.sqrt(1-C*C/aF)end;function Kinematic.computeAccelerationTime(aH,aI,aJ)local a7=aE*math.asin(aH/aE)return(aE*math.asin(aJ/aE)-a7)/aI end;function Kinematic.computeDistanceAndTime(aH,aJ,ad,aK,aL,aM)local aE=(Flight.maxSpeed+200)*1000/3600;local aF=aE*aE;aL=aL or 0;aM=aM or 0;local aN=lorentz(aH)local aO=aH<=aJ;local aP=aK*(aO and 1 or-1)/ad;local aQ=-aM/ad;local af=aP+aQ;if aO and af<=0 or not aO and af>=0 then return-1,-1 end;local aR,aS=0,0;if aP~=0 and aL>0 then local a7=math.asin(aH/aE)local aT=math.pi*(aP/2+aQ)local a1=aP*aL;local aU=aE*math.pi;local C=function(t)local aV=(aT*t-a1*math.sin(math.pi*t/2/aL)+aU*a7)/aU;local aW=math.tan(aV)return aE*aW/math.sqrt(aW*aW+1)end;local aX=aO and function(an)return an>=aJ end or function(an)return an<=aJ end;aS=2*aL;if aX(C(aS))then local aY=0;while math.abs(aS-aY)>0.5 do local t=(aS+aY)/2;if aX(C(t))then aS=t else aY=t end end end;local aZ=aH;local a_=aS/aG;for b0=1,aG do local b1=C(b0*a_)aR=aR+(b1+aZ)*a_/2;aZ=b1 end;if aS<2*aL then return aR,aS end;aH=aZ end;local a7=aE*math.asin(aH/aE)local a6=(aE*math.asin(aJ/aE)-a7)/af;local a8=aF*math.cos(a7/aE)/af;local a5=a8-aF*math.cos((af*a6+a7)/aE)/af;return a5+aR,a6+aS end;function Kinematic.computeTravelTime(aH,aI,a5)if a5==0 then return 0 end;if aI>0 then local a7=aE*math.asin(aH/aE)local a8=aF*math.cos(a7/aE)/aI;return(aE*math.acos(aI*(a8-a5)/aF)-a7)/aI end;assert(aH>0,'Acceleration and initial speed are both zero.')return a5/aH end;function Kinematic.lorentz(C)return lorentz(C)end;function computeDistanceAndTime2(aH,aJ,ad,aK,aL,aM)aL=aL or 0;aM=aM or 0;local aO=aH<=aJ;local aP=aK*(aO and 1 or-1)/ad;local aQ=-aM/ad;local af=aP+aQ;if aO and af<=0 or not aO and af>=0 then return-1,-1 end;local aR,aS=0,0;if aP~=0 and aL>0 then local a7=math.asin(aH/aE)local aT=math.pi*(aP/2+aQ)local a1=aP*aL;local aU=aE*math.pi;local C=function(t)local aV=(aT*t-a1*math.sin(math.pi*t/2/aL)+aU*a7)/aU;local aW=math.tan(aV)return aE*aW/msqrt(aW*aW+1)end;local aX=aO and function(an)return an>=aJ end or function(an)return an<=aJ end;aS=2*aL;if aX(C(aS))then local aY=0;while mabs(aS-aY)>0.5 do local t=(aS+aY)/2;if aX(C(t))then aS=t else aY=t end end end;local aZ=aH;local a_=aS/aG;for b0=1,aG do local b1=C(b0*a_)aR=aR+(b1+aZ)*a_/2;aZ=b1 end;if aS<2*aL then return aR,aS end;aH=aZ end;local a7=aE*math.asin(aH/aE)local a6=(aE*math.asin(aJ/aE)-a7)/af;local a8=aF*math.cos(a7/aE)/af;local a5=a8-aF*math.cos((af*a6+a7)/aE)/af;return a5+aR,a6+aS end;Controller=(function()local az={}az.new=function(b2)local b3=b2 or{}b3.active=b2.active=='on'and'on'or'off'b3.constructor='Controller'b3.condition=b2.condition or function(self)return self.active=='on'end;setmetatable(b3,{__index=az})return b3 end;function az:toggle(aD)if aD==self.active then return false end;if self.active=='on'or aD=='off'then self.active='off'elseif self.active=='off'or aD=='on'then self.active='on'end end;return az end)()Executor=(function()local az={}az.new=function()local b3={store={},events={}}setmetatable(b3,{__index=az})return b3 end;function az:register(b4,b5,b6,x)local b7={}b7.index=b4;b7.parent=b6;b7.exec=x;self.store[b5]=b7;self:orderize()end;function az:unregister(b5)self.store[b5]=nil;self:orderize()end;function az:orderize()while#self.events~=0 do rawset(self.events,#self.events,nil)end;for B,C in pairs(self.store)do self.events[#self.events+1]=C end;i(self.events,function(b8,at)return b8.index<at.index end)end;function az:exec()for b9,b7 in ipairs(self.events)do b7.parent[b7.exec](b7.parent)end end;return az end)()KeyActions=(function()local az={}az.store={}az.events={}function az:register(type,ba,b5,b6,x)local b7={}b7.type=type;b7.action=ba;b7.parent=b6;b7.exec=x;self.store[b5]=b7;self:orderize()end;function az:unregister(b5)self.store[b5]=nil;self:orderize()end;function az.orderize(an)while#an.events~=0 do rawset(an.events,#an.events,nil)end;an.events={}for B,C in pairs(an.store)do if not an.events[C.type]then an.events[C.type]={}end;if not an.events[C.type][C.action]then an.events[C.type][C.action]={}end;local bb=#an.events[C.type][C.action]an.events[C.type][C.action][bb+1]=C end end;function az.exec(an,type,ba)if not an.events[type]or not an.events[type][ba]then return end;for b9,b7 in ipairs(an.events[type][ba])do b7.parent[b7.exec](b7.parent)end end;return az end)()Template=(function()local az={}az.new=function(bc)bc=bc or\"\"local b3={parsed={},data={},index={},fns={},pos=1,eos=0,vals={},needs=1,event=function()end}setmetatable(b3,{__index=az})b3:compile(bc)return b3 end;az.minify=function(bc)return bc:gsub(\"%s%s+\",\"\"):gsub(\"[\\t\\r\\n]+\",\"\")end;function az.parseNext(an)local b9,bd=f(an.tmpl,\"{{[%w_\\\\-]+}}\",an.pos)if b9~=nil then an.parsed[#an.parsed+1]=e(an.tmpl,an.pos,b9-1)an.parsed[#an.parsed+1]=\"\"an.index[e(an.tmpl,b9,bd):gsub(\"[{}]\",\"\")]=#an.parsed;an.pos=bd+1 else an.parsed[#an.parsed+1]=e(an.tmpl,an.pos,-1)an.eos=1 end end;function az.compile(an,bc)an.tmpl=an.minify(bc)an.parsed={}an.index={}an.fns={}an.eos=0;while an.eos==0 do an:parseNext()end;return an end;function az.bind(an,be)an.data=be;for B,C in pairs(be)do if an.index[B]~=nil and type(C)~='function'then an.parsed[an.index[B]]=C elseif type(C)=='function'then an.fns[B]=C end end;an.needs=1;return an end;function az.update(an)for B,C in pairs(an.fns)do if an.index[B]~=nil and type(C)=='function'then an.parsed[an.index[B]]=C()end end;return an end;function az.render(an)if an.needs==1 then an:update()an.vals.html=h(an.parsed)an.needs=0 end;an:dispatch()end;function az.listen(an,bf)an.event=bf;return an end;function az.dispatch(an)an.event(an.vals)end;return az end)()Commands=(function()local az={active=false,label='Listen to Voice',timed=0,lastCMD='',list={xyzwp={desc=' [Get waypoint from json] {\"x\":...}',fn=function(an,bg,bh)local bi=table.remove(bg,1)local C=table.concat(bg,' ')local bj=vec3(json.deocde(C))local bk=\"::pos{0,0,\"..g('%.4f',bj.x)..\",\"..g('%.4f',bj.y)..\",\"..g('%.4f',bj.z)..\"}\"b(bk)end},time={desc=' [Travel time to distance(su) from speed] time 100 30000',fn=function(an,bg)local t=bg[2]/1*200000;local bl=bg[3]~=nil and bg[3]/1 or nil;local Z=bl~=nil and bl or Flight.speed*3.6;if Z<300 then Z=Flight.maxSpeed end;local bm=timeToDist(t,Z)b(\"Time to target: \"..formatTime(bm))end},fps={desc=' [Change HUD rendering FPS] fps 20',fn=function(an,bg)local t=bg[2]/1;HUD.full:fps(t)end},color={desc=' [Change the HUD hex color] color #555555',fn=function(an,bg,bh)local t=bg[2]HUD:colorize(t)if bh=='y'then Sound:play('confirm')end end},opacity={desc=' [Set the opacity percentage] opacity 95',fn=function(an,bg,bh)local t=bg[2]HUD:opacitize(t)end},scale={desc=' [Scale UI by percentage] scale 100',fn=function(an,bg,bh)local t=bg[2]HUD:scalize(t)end},altitude={desc=' [Change altitude to X meters] altitude 2000',fn=function(an,bg,bh)local C=bg[2]:gsub(\"[\\\\,\\\\.]+\",\"\")/1;AltLock:set(C)an:stopAction()if bh=='y'then Sound:play('confirm')end end},landing={fn=function(an,bg,bh)Gear:keyAction()an:stopAction()end},warp={fn=function(an,bg,bh)warpdrive.initiate()an:stopAction()end},agg={desc=' [Set AGG target altitude] 4100',fn=function(an,bg,bh)local C=bg[2]:gsub(\"[\\\\,\\\\.]+\",\"\")/1;AGG:set(C)an:stopAction()if bh=='y'then Sound:play('confirm')end end},hover={fn=function(an,bg,bh)local C=bg[2]/1;unit.activateGroundEngineAltitudeStabilization(C)Hovers:change(C)end},align={desc=' [Align to a body or ::pos] align alioth moon 4',fn=function(an,bg,bh)local bi=table.remove(bg,1)local C=table.concat(bg,' ')system.print(C)Autopilot:align(C)end},go={desc=' [Autopilot to a body or ::pos] go alioth moon 4',fn=function(an,bg,bh)local bi=table.remove(bg,1)local C=table.concat(bg,' ')system.print(C)Autopilot:go(C)end},cancel={fn=function(an,bg)Autopilot:stop()end},stop={desc=' [Stop the current auto-alignment]',fn=function(an,bg)Autopilot:stop()end}}}function az.init(an)an.helps={}for bg,bn in pairs(an.list)do if bn.desc then bn.name=bg;an.helps[#an.helps+1]=bg end end;i(an.helps)end;function az.check(an)an.timed=an.timed+1;local bo=math.ceil((50-an.timed)/5)an.button1:toggle({label=\"Listening: \"..bo})if an.timed>50 then an:stopAction()return end;if screen_voice then screen_voice.toggle()end end;function az.help(an)b('-- HUD COMMANDS --')for b9,aB in ipairs(an.helps)do b(aB..an.list[aB].desc)end;b('---------------------')end;function az.call(an,bp,bh)local bg={}for b2 in bp:gmatch(\"%S+\")do table.insert(bg,b2)end;local t=string.lower(bg[1])if t=='help'then an:help()else an.list[t].fn(an,bg,bh)end end;function az.keyAction(an)if Flight.keyLShift==1 then return end;if an.active then an:stopAction()else an:startAction()end end;function az.startAction(an)an.active=true;an.timed=0;an.button1:toggle({active=\"on\",label=\"Listening: 10\"})unit.setTimer('CheckVoice',0.2)end;function az.stopAction(an)an.active=false;an.button1:toggle({active=\"off\",label=an.label})unit.stopTimer('CheckVoice')end;return az end)()Throttle=(function()local az={previous=0,hoverState=0,stickDetected=false}az.template=[[\n    <g id=\"WIDGET_THROTTLE\">\n      <polygon class=\"{{fwd1}}\" points=\"601 771.6 625.4 771.6 631.5 765.5 607.1 765.5\"/>\n      <polygon class=\"{{fwd2}}\" points=\"608.6 764 632.9 764 639 758 614.6 758\"/>\n      <polygon class=\"{{fwd3}}\" points=\"616.1 756.7 640.5 756.7 646.5 750.4 622.1 750.4\"/>\n      <polygon class=\"{{fwd4}}\" points=\"623.4 749.1 647.8 749.1 654.1 742.9 629.7 742.9\"/>\n      <polygon class=\"{{fwd5}}\" points=\"631 741.6 655.4 741.6 661.4 735.6 637.2 735.6\" />\n      <polygon class=\"{{fwd6}}\" points=\"638.5 734.1 662.9 734.1 669 728 644.6 728\"/>\n      <polygon class=\"{{fwd7}}\" points=\"646 726.6 670.4 726.6 676.5 720.5 652.1 720.5\"/>\n      <polygon class=\"{{fwd8}}\" points=\"653.6 719.2 678 719.2 684 713 659.6 713\"/>\n      <polygon class=\"{{fwd9}}\" points=\"660.9 711.7 685.3 711.7 691.5 705.4 667.1 705.4\"/>\n      <polygon class=\"{{fwd10}}\" points=\"668.5 704.1 692.8 704.1 699.1 698.1 674.7 698.1\"/>\n    </g>\n    <g>\n      <polygon class=\"{{fwd-10}}\" points=\"587.3 771.6 596.6 771.6 602.7 765.5 593.3 765.5\"/>\n      <polygon class=\"{{fwd-9}}\" points=\"594.8 764 604.1 764 610.2 758 600.9 758\"/>\n      <polygon class=\"{{fwd-8}}\" points=\"602.2 756.7 611.7 756.7 617.7 750.4 608.4 750.4\"/>\n      <polygon class=\"{{fwd-7}}\" points=\"609.7 749.1 619.2 749.1 625.2 742.9 615.8 742.9\"/>\n      <polygon class=\"{{fwd-6}}\" points=\"617.2 741.6 626.6 741.6 632.8 735.6 623.3 735.6\"/>\n      <polygon class=\"{{fwd-5}}\" points=\"624.8 734.1 634.1 734.1 640.1 728 630.8 728\"/>\n      <polygon class=\"{{fwd-4}}\" points=\"632.3 726.6 641.6 726.6 647.7 720.5 638.3 720.5\"/>\n      <polygon class=\"{{fwd-3}}\" points=\"639.7 719.2 649.1 719.2 655.2 713 645.9 713\"/>\n      <polygon class=\"{{fwd-2}}\" points=\"647.2 711.7 656.7 711.7 662.7 705.4 653.2 705.4\"/>\n      <polygon class=\"{{fwd-1}}\" points=\"654.7 704.1 664 704.1 670.3 698.1 660.8 698.1\"/>\n    </g>\n  ]]az.init=function(an)KeyActions:register('start','option1','HOTAS',Throttle,'keyAction')if showHOTAS then an.button=HUD.buttons:createButton('HOTAS',\"Enable HOTAS\",'A:1',enableHOTAS and\"on\"or\"off\")end;an.percent=0;an.tmpl=Template.new(an.template)an.tmpl:listen(function(be)an.html=be.html end)local bq={}for b9=-10,10 do bq['fwd'..b9]='op03'end;an.tmpl:bind(bq)end;az.keyAction=function(an)enableHOTAS=not enableHOTAS;if showHOTAS then an.button:toggle({active=enableHOTAS and\"on\"or\"off\"})end end;az.update=function(an)local br=Flight;if enableHOTAS then local bs=-system.getAxisValue(3)if not an.stickDetected and bs~=0 then an.stickDetected=true end;if an.stickDetected then if br.hotasThrottle=='half'then elseif br.hotasThrottle=='full'then bs=(bs+1)/2 end;NACM:setThrottleCommand(axisCommandId.longitudinal,bs)unit.setAxisCommandValue(axisCommandId.longitudinal,bs)end end;local bt=round(unit.getThrottle())local bq={}local E=''local bu,bv,bw=0,0,0;if br.mode==0 then bu=j(bt/10)bv=bt%10*10 elseif br.mode==1 then local bx=NACM:getTargetSpeedCurrentStep(axisCommandId.longitudinal)local by=bx*10;bw=j(bt/100)bu=j(bw/by)bv=bw%by/by*100 end;for b9=-10,10 do E='op03 c-co'if bu>0 and b9>0 and b9<=bu then E='fil1'end;if bu<0 and b9<0 and b9>=bu then E='fil4'end;if bu>=0 and bu+1==b9 and bv>0 then E='lastTick'end;bq['fwd'..b9]=E end;an.hoverState=bt>0;HUD.widgets.primary.tmpl:bind({RealThrottle=bt,LastTickP=1-bv/100,LastTickP1=1-(bv+1)/100})an.previous=bu;an.real=bt;an.tmpl:bind(bq)an.tmpl:render()end;return az end)()Flight=Controller.new({init=function(an)an.pitchInput=0;an.rollInput=0;an.yawInput=0;an.brakeInput=0;an.brakeLock=0;an.brakeTick=0;an.keyLShift=0;an.keyLAlt=0;an.currentBrake=0;an.maxBrake=0;an.spitch=0;an.sroll=0;an.maxSpeed=30000;an.mode=0;an.groundMode=false;an.mass=0;an.addedMass=0;an.tmpDMass=0;an.hotasThrottle=hotasThrottle:lower()an.pitchInvert=not pitchInvert and 1 or-1;an.rollInvert=not rollInvert and 1 or-1;an.yawInvert=not yawInvert and 1 or-1;an.brakeAxisDetected=false;an.strafeAxisDetected=false;an.climbAxisDetected=false;an.hoverAxisDetected=false;an.strafeAxis=false;an.climbAxis=false;an.hoverAxis=false;an.keepCollinearity=1;an.dontKeepCollinearity=0;an.tolerancePercentToSkipOtherPriorities=1;an.pitchSpeedFactor=0.9;an.yawSpeedFactor=1;an.rollSpeedFactor=1.5;an.brakeSpeedFactor=3;an.brakeFlatFactor=2;an.autoRoll=false;an.autoRollFactor=2;an.turnAssist=true;an.turnAssistFactor=4;an.torqueFactor=1;an.inLowSpace=false;an.atmoDist=0;an.spcBrake=false;an.apBrake=false;an.spcAngToBody=90;an.forceThrottle=-1;KeyActions:register('start','lshift','keyLShiftStart',an,'keyLShiftStart')KeyActions:register('stop','lshift','keyLShiftStop',an,'keyLShiftStop')KeyActions:register('start','lalt','keyLAltStart',an,'keyLAltStart')KeyActions:register('stop','lalt','keyLAltStop',an,'keyLAltStop')KeyActions:register('start','forward','keyPitchForwardStart',an,'keyPitchForwardStart')KeyActions:register('stop','forward','keyPitchForwardStop',an,'keyPitchForwardStop')KeyActions:register('start','backward','keyPitchBackwardStart',an,'keyPitchBackwardStart')KeyActions:register('stop','backward','keyPitchBackwardStop',an,'keyPitchBackwardStop')KeyActions:register('start','left','keyRollLeftStart',an,'keyRollLeftStart')KeyActions:register('loop','left','keyRollLeftLoop',an,'keyRollLeftStart')KeyActions:register('stop','left','keyRollLeftStop',an,'keyRollLeftStop')KeyActions:register('start','right','keyRollRightStart',an,'keyRollRightStart')KeyActions:register('loop','right','keyRollRightLoop',an,'keyRollRightStart')KeyActions:register('stop','right','keyRollRightStop',an,'keyRollRightStop')KeyActions:register('start','yawright','keyYawRightStart',an,'keyYawRightStart')KeyActions:register('loop','yawright','keyYawRightLoop',an,'keyYawRightStart')KeyActions:register('stop','yawright','keyYawRightStop',an,'keyYawRightStop')KeyActions:register('start','yawleft','keyYawLeftStart',an,'keyYawLeftStart')KeyActions:register('loop','yawleft','keyYawLeftLoop',an,'keyYawLeftStart')KeyActions:register('stop','yawleft','keyYawLeftStop',an,'keyYawLeftStop')KeyActions:register('start','strafeleft','keyStrafeLeftStart',an,'keyStrafeLeftStart')KeyActions:register('stop','strafeleft','keyStrafeLeftStop',an,'keyStrafeLeftStop')KeyActions:register('start','straferight','keyStrafeRightStart',an,'keyStrafeRightStart')KeyActions:register('stop','straferight','keyStrafeRightStop',an,'keyStrafeRightStop')KeyActions:register('start','stopengines','keyStopEngines',an,'keyStopEngines')KeyActions:register('start','booster','keyBoostersToggle',an,'keyBoostersToggle')KeyActions:register('stop','booster','keyBoostersToggle',an,'keyBoostersToggle')KeyActions:register('start','speedup','keySpeedUpLoop',an,'keySpeedUpLoop')KeyActions:register('loop','speedup','keySpeedUpLoop',an,'keySpeedUpLoop')KeyActions:register('start','speeddown','keySpeedDownLoop',an,'keySpeedDownLoop')KeyActions:register('loop','speeddown','keySpeedDownLoop',an,'keySpeedDownLoop')KeyActions:register('start','up','keyManualLiftUpStart',an,'keyManualLiftUpStart')KeyActions:register('stop','up','keyManualLiftUpStop',an,'keyManualLiftUpStop')KeyActions:register('start','down','keyManualLiftDownStart',an,'keyManualLiftDownStart')KeyActions:register('stop','down','keyManualLiftDownStop',an,'keyManualLiftDownStop')KeyActions:register('system','update','SystemUpdate',an,'update')KeyActions:register('tick','SlowUpdate','SlowUpdate',an,'slowUpdate')unit.setTimer('SlowUpdate',0.5)an.DockProcessor=coroutine.create(an.updateDock)KeyActions:register('tick','DockUpdate','DockUpdate',an,'coUpdateDock')unit.setTimer('DockUpdate',0.15)an:validate(true)end,coUpdateDock=function(an)local bz=coroutine.status(an.DockProcessor)if bz~=\"dead\"then local bA,bB=coroutine.resume(an.DockProcessor)if bB then b(\"ERROR UPDATE FUEL: \"..bB)end elseif bz==\"dead\"then an.DockProcessor=coroutine.create(an.updateDock)local bA,bB=coroutine.resume(an.DockProcessor)end end,updateDock=function()local an=Flight;local bC=construct.getPlayersOnBoard()local bD=construct.getDockedConstructs()an.tmpDMass=0;for B,bE in ipairs(bC)do an.tmpDMass=an.tmpDMass+construct.getBoardedPlayerMass(bE)coroutine.yield()end;for B,bE in ipairs(bD)do an.tmpDMass=an.tmpDMass+construct.getDockedConstructMass(bE)coroutine.yield()end;an.addedMass=an.tmpDMass end,keyLShiftStart=function(an)an.keyLShift=1 end,keyLShiftStop=function(an)an.keyLShift=0 end,keyLAltStart=function(an)an.keyLAlt=1 end,keyLAltStop=function(an)an.keyLAlt=0 end,keyPitchForwardStart=function(an)an.pitchInput=-1 end,keyPitchForwardStop=function(an)an.pitchInput=0 end,keyPitchBackwardStart=function(an)an.pitchInput=1 end,keyPitchBackwardStop=function(an)an.pitchInput=0 end,keyRollLeftStart=function(an)an.rollInput=-1 end,keyRollLeftStop=function(an)an.rollInput=0 end,keyRollRightStart=function(an)an.rollInput=1 end,keyRollRightStop=function(an)an.rollInput=0 end,keyYawRightStart=function(an)an.yawInput=-1 end,keyYawRightStop=function(an)an.yawInput=0 end,keyYawLeftStart=function(an)an.yawInput=1 end,keyYawLeftStop=function(an)an.yawInput=0 end,keyStrafeLeftStart=function(an)NACM:updateCommandFromActionStart(axisCommandId.lateral,-1.0)end,keyStrafeLeftStop=function(an)NACM:updateCommandFromActionStop(axisCommandId.lateral,1.0)end,keyStrafeRightStart=function(an)NACM:updateCommandFromActionStart(axisCommandId.lateral,1.0)end,keyStrafeRightStop=function(an)NACM:updateCommandFromActionStop(axisCommandId.lateral,-1.0)end,keyBrakeStart=function(an)an.brakeInput=1;Brakes:keyAction('start')end,keyBrakeStop=function(an)an.brakeInput=0;Brakes:keyAction('stop')end,keyBrakeLoop=function(an)an.brakeInput=1;Brakes:keyAction('loop')end,keyStopEngines=function(an,bF)if an.mode==0 and an.keyLAlt==1 and bF~=1 then NACM:setThrottleCommand(axisCommandId.longitudinal,1)unit.setAxisCommandValue(axisCommandId.longitudinal,1)elseif Throttle.real~=0 then NACM:resetCommand(axisCommandId.longitudinal)end end,keyBoostersToggle=function(an)Nav:toggleBoosters()end,keySpeedUpLoop=function(an)NACM:updateCommandFromActionLoop(axisCommandId.longitudinal,1.0)end,keySpeedDownLoop=function(an)NACM:updateCommandFromActionLoop(axisCommandId.longitudinal,-1.0)end,keyManualLiftUpStart=function(an)if an.keyLAlt==1 then return end;NACM:deactivateGroundEngineAltitudeStabilization()NACM:updateCommandFromActionStart(axisCommandId.vertical,1.0)end,keyManualLiftUpStop=function(an)if an.keyLAlt==1 then return end;NACM:updateCommandFromActionStop(axisCommandId.vertical,-1.0)NACM:activateGroundEngineAltitudeStabilization(currentGroundAltitudeStabilization)end,keyManualLiftDownStart=function(an)if an.keyLAlt==1 then return end;NACM:deactivateGroundEngineAltitudeStabilization()NACM:updateCommandFromActionStart(axisCommandId.vertical,-1.0)end,keyManualLiftDownStop=function(an)if an.keyLAlt==1 then return end;NACM:updateCommandFromActionStop(axisCommandId.vertical,1.0)NACM:activateGroundEngineAltitudeStabilization(currentGroundAltitudeStabilization)end,reticleFwd=function(an)local bG=an.position+an.forward*4*an.velocity:len()local bn={bG.x,bG.y,bG.z}local bH=library.getPointOnScreen(bn)if bH[1]<.01 and bH[2]<.01 then return\"\"end;return[[\n<g class=\"rcon\" style=\"transform:translate(]]..bH[1]*100-1.18 ..[[vw,]]..bH[2]*100-0.9 ..[[vh); fill:#fff;\">      \n<svg x=\"0px\" y=\"0px\" viewBox=\"0 0 177 150\" height=\"2.4%\" width=\"2.4%\" style=\"fill:#fff;\">\n<path d=\"M50.7,60l26.5-46c1-1.7,0.4-3.8-1.3-4.8c-1.7-1-3.8-0.4-4.8,1.3l-55.9,96.9c-1,1.7-0.4,3.8,1.3,4.8\n c0.6,0.3,1.2,0.5,1.7,0.5c1.2,0,2.4-0.6,3-1.8l25.9-44.8L50.7,60z\"/>\n<path d=\"M164.7,107.4l-55.9-96.9c-1-1.7-3.1-2.2-4.8-1.3c-1.7,1-2.2,3.1-1.3,4.8l26.5,45.8l3.5,6.1l26,45c0.6,1.1,1.8,1.8,3,1.8\n c0.6,0,1.2-0.2,1.7-0.5C165.1,111.3,165.7,109.1,164.7,107.4z\"/>\n<path d=\"M145.9,133H93h-7H34.1c-1.9,0-3.5,1.6-3.5,3.5s1.6,3.5,3.5,3.5h111.9c1.9,0,3.5-1.6,3.5-3.5S147.9,133,145.9,133z\"/>\n</svg>\n</g>\n    ]]end,reticlePro=function(an)local bG=an.position+an.velocity*5;local bn={bG.x,bG.y,bG.z}local bH=library.getPointOnScreen(bn)if bH[1]<.01 and bH[2]<.01 then return\"\"end;return[[\n<g class=\"rcon\" style=\"transform:translate(]]..bH[1]*100-1.18 ..[[vw,]]..bH[2]*100-1.1 ..[[vh); fill:#fff;\">      \n<svg x=\"0px\" y=\"0px\" viewBox=\"0 0 177 150\" height=\"2.4%\" width=\"2.4%\" style=\"fill:#fff;\">\n<path d=\"M116.1,67.5C110.3,59.3,100.8,54,90,54c-10.8,0-20.4,5.4-26.1,13.6L50.7,60l-3.5,6.1l13.2,7.6c-1.6,3.8-2.5,8-2.5,12.3\n\tc0,16.3,12.2,29.8,28,31.7V133h7v-15.1c16.3-1.5,29-15.2,29-31.9c0-4.4-0.9-8.6-2.5-12.4l13.2-7.6l-3.5-6.1L116.1,67.5z M90,111\n\tc-13.8,0-25-11.2-25-25s11.2-25,25-25s25,11.2,25,25S103.8,111,90,111z\"/>\n</svg>\n</g>\n    ]]end,reticleRtr=function(an)local bG=an.position+-an.velocity*5;local bn={bG.x,bG.y,bG.z}local bH=library.getPointOnScreen(bn)if bH[1]<.01 and bH[2]<.01 then return\"\"end;return[[\n<g class=\"rcon\" style=\"transform:translate(]]..bH[1]*100-1.18 ..[[vw,]]..bH[2]*100-1.1 ..[[vh); fill:#ff0000;\">      \n<svg x=\"0px\" y=\"0px\" viewBox=\"0 0 177 150\" height=\"2.4%\" width=\"2.4%\" style=\"fill:#ff0000;\">\n<path d=\"M116.1,67.5C110.3,59.3,100.8,54,90,54c-10.8,0-20.4,5.4-26.1,13.6L50.7,60l-3.5,6.1l13.2,7.6c-1.6,3.8-2.5,8-2.5,12.3\n\tc0,16.3,12.2,29.8,28,31.7V133h7v-15.1c16.3-1.5,29-15.2,29-31.9c0-4.4-0.9-8.6-2.5-12.4l13.2-7.6l-3.5-6.1L116.1,67.5z M90,111\n\tc-13.8,0-25-11.2-25-25s11.2-25,25-25s25,11.2,25,25S103.8,111,90,111z\"/>\n</svg>\n</g>\n    ]]end,reticleBody=function(an)local bG=Autopilot.alignTarget;local bI=an.position:dist(bG)local bn={bG.x,bG.y,bG.z}local bH=library.getPointOnScreen(bn)if bH[1]<.01 and bH[2]<.01 then return\"\"end;return[[\n<g class=\"rcon\" style=\"transform:translate(]]..bH[1]*100-1.68 ..[[vw,]]..bH[2]*100-1.6 ..[[vh); fill:#7cc47c;\">\n<svg viewBox=\"0 0 300 203\" style=\"fill:#7cc47c;\" height=\"3.4%\" width=\"3.4%\"><path d=\"m214.6 101.5 11-11.1v-10l-21.1 21.1 21.1 21.1v-10.1zM85.4 101.5l-11-11.1v-10l21.1 21.1-21.1 21.1v-10.1zM150 166.1l11 11h10.1L150 156l-21.1 21.1H139zM150 36.9l11-11h10.1l-21.1 21-21.1-21H139z\"/><path d=\"M124 203H41.7L0 101.5 41.7 0H124v12.8H50.3l-36.4 88.7 36.4 88.6H124zM258.3 203H176v-12.9h73.7l36.4-88.6-36.4-88.7H176V0h82.3L300 101.5z\"/></svg>\n</g>\n]]end,update=function(an)an.position=vec3(construct.getWorldPosition())an.mass=construct.getMass()+an.addedMass;an.gravity=core.getGravityIntensity()an.altitude=core.getAltitude()an.inSpace=an.altitude==0.0 or an.altitude>90000;if RadarSwitch and RadarSwitch.active>1 then if RadarSwitch.activet=='space'and not an.inSpace then RadarSwitch:force('atmo')end;if RadarSwitch.activet=='atmo'and an.inSpace then RadarSwitch:force('space')end end;local bJ=''local bK=''local bL=''local bM=''if an.velocity then an.speed=an.velocity:len()an.speedForward=an.forward:dot(an.velocity)an.speedUp=-an.worldVertical:dot(an.velocity)an.accel=an.acceleration:len()if an.speed>5 and showReticles then bK=an:reticlePro()bL=an:reticleRtr()bJ=an:reticleFwd()if Autopilot.apState=='on'then end end;if an.forceThrottle==0 then unit.setAxisCommandValue(0,0.0)NACM:resetCommand(axisCommandId.longitudinal)elseif an.forceThrottle>0 then NACM:setThrottleCommand(axisCommandId.longitudinal,an.forceThrottle)unit.setAxisCommandValue(axisCommandId.longitudinal,an.forceThrottle)end;an.forceThrottle=-1;if an.maxSpeed and an.speed*3.6+50>=an.maxSpeed and Throttle.real>=1 and an.facingdiff<0.25 then NACM:resetCommand(axisCommandId.longitudinal)end;if burnSpeedLimiter and an.atmoDist and an.inLowSpace and an.speedUp<-100 and an.speed*3.6>an.burnSpeed*0.92 then local bN,bO=calcBrakeDist2(an.burnSpeed*0.95)an.spcBrake=bN>=n(an.atmoDist)if Throttle.real>10 and an.spcBrake and an.inSpace then unit.setAxisCommandValue(0,0.0)NACM:resetCommand(axisCommandId.longitudinal)end else an.spcBrake=false end end;local bP=0;if an.altitude>1000 then bP=g(\"%.2f\",an.altitude/1000)..\"km\"else bP=g(\"%.0f\",an.altitude or 0)..\"m\"end;HUD.widgets.primary.tmpl:bind({VelocitySpeed=g(\"%.0f\",(an.speed or 0)*3.6),VelocityUp=g(\"%.0f\",an.speedUp and(an.speedUp<-1 or an.speedUp>0)and an.speedUp or 0),Acceleration=g(\"%.0f\",(an.accel or 0)*3.6),Altitude=bP,ReticleFwd=bJ,ReticlePro=bK,ReticleRtr=bL,ReticleBody=bM,SpcBrake=an.spcBrake and\"on\"or\"off\"})end,slowUpdate=function(an)local aE=construct;an.atmoDensity=unit.getAtmosphereDensity()an.closestInfluence=unit.getClosestPlanetInfluence()an.maxSpeed=j(construct.getMaxSpeed()*3.6)an.burnSpeed=j(construct.getFrictionBurnSpeed()*3.6)if burnSpeedMax>1000 then an.burnSpeed=burnSpeedMax end;an.zoneDist=construct.getDistanceToSafeZone()local bC=construct.getPlayersOnBoard()local bD=construct.getDockedConstructs()an.boarded=#bC;an.docked=#bD;an.facingdiff=2;if an.forward then an.facingdiff=an.forward:angle_between(an.velocityDirection)end;gravity=30;if AISatlas and AISatlas.body then gravity=AISatlas.body.gravity/1 or gravity end;local bQ=vec3(construct.getOrientationForward())local bR=aE.getMaxThrustAlongAxis('thrust analog longitudinal ',{bQ:unpack()})local bQ=vec3(aE.getOrientationUp())local bR=aE.getMaxThrustAlongAxis('hover_engine, booster_engine',{bQ:unpack()})an.safeLocalMass=0.45*bR[1]/gravity;an.safeLocalMass=g(\"%.0f\",an.safeLocalMass/1000)an.safeAtmoMass=0.45*bR[1]/10;an.safeAtmoMass=g(\"%.0f\",an.safeAtmoMass/1000)an.safeSpaceMass=0.45*bR[3]/gravity;an.safeSpaceMass=g(\"%.0f\",an.safeSpaceMass/1000)an.safeHoverMass=0.45*bR[1]/gravity;HUD.widgets.primary.tmpl:bind({AtmoDensity=g(\"%.3f\",an.atmoDensity),MaxSpeed=an.maxSpeed,BurnSpeed=an.burnSpeed,BoardedCt=an.boarded,DockedCt=an.docked,SafeLocalMass=an.safeLocalMass,SafeAtmoMass=an.safeAtmoMass,SafeSpaceMass=an.safeSpaceMass,ZoneDistLabel=an.zoneDist<0 and\"PVP SPACE IN\"or\"SAFE ZONE IN\",ZoneDist=formatDist(n(an.zoneDist))})end,validate=function(an,bS)an.pitchSpeedFactor=math.max(an.pitchSpeedFactor,0.01)an.yawSpeedFactor=math.max(an.yawSpeedFactor,0.01)an.rollSpeedFactor=math.max(an.rollSpeedFactor,0.01)an.torqueFactor=math.max(an.torqueFactor,0.01)an.brakeSpeedFactor=math.max(an.brakeSpeedFactor,0.01)an.brakeFlatFactor=math.max(an.brakeFlatFactor,0.01)an.autoRollFactor=math.max(an.autoRollFactor,0.01)an.turnAssistFactor=math.max(an.turnAssistFactor,0.01)local bT,bU,bV,bW,bX,bY,bZ,b_,c0,c1=0,0,0,0,-1,0,0,0,0,0;if enableHOTAS then bT=system.getAxisValue(0)bU=-system.getAxisValue(1)bV=-system.getAxisValue(2)bX=system.getAxisValue(4)bY=system.getAxisValue(5)bZ=system.getAxisValue(6)b_=system.getAxisValue(7)if bX~=0 then an.brakeAxisDetected=true end;if bY~=0 then an.strafeAxisDetected=true end;if bZ~=0 then an.climbAxisDetected=true end;if b_~=0 then an.hoverAxisDetected=true end end;an.finalRollInput=an.rollInput+an.rollInvert*bT+system.getControlDeviceYawInput()an.finalPitchInput=an.pitchInput+an.pitchInvert*bU+system.getControlDeviceForwardInput()an.finalYawInput=an.yawInput+an.yawInvert*bV-system.getControlDeviceLeftRightInput()local c2=an.brakeAxisDetected and(bX+1)/2 or 0;local c3=Brakes.locked and 1 or an.brakeInput;an.finalBrakeInput=c3==1 and 1 or c2;if enableHOTAS then an.strafeAxis=bY;an.climbAxis=bZ;an.hoverAxis=(b_+1)/2;if an.strafeAxisDetected then NACM:setThrottleCommand(axisCommandId.lateral,an.strafeAxis)unit.setAxisCommandValue(axisCommandId.lateral,an.strafeAxis)end;if an.climbAxisDetected then NACM:setThrottleCommand(axisCommandId.vertical,an.climbAxis)unit.setAxisCommandValue(axisCommandId.vertical,an.climbAxis)end;if not bS and an.hoverAxisDetected then Hovers:manual(an.hoverAxis)end end;an.autoNavigationEngineTags=''an.autoNavigationAcceleration=vec3()an.autoNavigationUseBrake=false end,flush=function(an)an.up=vec3(construct.getWorldOrientationUp())an.down=-an.up;an.forward=vec3(construct.getWorldOrientationForward())an.back=-an.forward;an.right=vec3(construct.getWorldOrientationRight())an.left=-an.right;an.gravityDirection=vec3(core.getWorldGravity())an.worldVertical=vec3(core.getWorldVertical())an.velocity=vec3(construct.getWorldVelocity())an.velocityDirection=an.velocity:normalize()an.acceleration=vec3(construct.getWorldAcceleration())Flight:getSelfRoll()Flight:getSelfPitch()end,getPitch=function(c4,J,c5)local c6=c4:cross(c5):normalize_inplace()local c7=math.acos(q(c6:dot(-J),-1,1))*constants.rad2deg;if c6:cross(-J):dot(c5)<0 then c7=-c7 end;return c7 end,getSelfPitch=function(an)local c8=an.radr;local c9=math.cos(c8)local ca=math.sin(c8)local cb=an.getPitch(an.worldVertical,an.forward,an.right*c9+an.up*ca)an.spitch=q(cb,-90,90)end,getSelfRoll=function(an)an.sroll=an.currentRollDeg or 0;an.radr=an.sroll/180*math.pi end,rotation=function(an)an.currentRollDeg=getRoll(an.worldVertical,an.forward,an.right)an.currentRollDegAbs=math.abs(an.currentRollDeg)an.currentRollDegSign=utils.sign(an.currentRollDeg)an.constructAngularVelocity=vec3(construct.getWorldAngularVelocity())an.targetAngularVelocity=an.finalPitchInput*an.pitchSpeedFactor*an.right+an.finalRollInput*an.rollSpeedFactor*an.forward+an.finalYawInput*an.yawSpeedFactor*an.up;if an.worldVertical:len()>0.01 and an.atmoDensity>0.0 then an.autoRollRollThreshold=1.0;if an.autoRoll==true and an.currentRollDegAbs>an.autoRollRollThreshold and an.finalRollInput==0 then an.targetRollDeg=utils.clamp(0,an.currentRollDegAbs-30,an.currentRollDegAbs+30)if an.rollPID==nil then an.rollPID=pid.new(an.autoRollFactor*0.01,0,an.autoRollFactor*0.1)end;an.rollPID:inject(an.targetRollDeg-an.currentRollDeg)an.autoRollInput=an.rollPID:get()an.targetAngularVelocity=an.targetAngularVelocity+an.autoRollInput*an.forward end;an.turnAssistRollThreshold=20.0;if an.turnAssist==true and an.currentRollDegAbs>an.turnAssistRollThreshold and an.finalPitchInput==0 and an.finalYawInput==0 then an.rollToPitchFactor=an.turnAssistFactor*0.1;an.rollToYawFactor=an.turnAssistFactor*0.025;an.rescaleRollDegAbs=(an.currentRollDegAbs-an.turnAssistRollThreshold)/(180-an.turnAssistRollThreshold)*180;an.rollVerticalRatio=0;if an.rescaleRollDegAbs<90 then an.rollVerticalRatio=an.rescaleRollDegAbs/90 elseif an.rescaleRollDegAbs<180 then an.rollVerticalRatio=(180-an.rescaleRollDegAbs)/90 end;an.rollVerticalRatio=an.rollVerticalRatio*an.rollVerticalRatio;an.turnAssistYawInput=-an.currentRollDegSign*an.rollToYawFactor*(1.0-an.rollVerticalRatio)an.turnAssistPitchInput=an.rollToPitchFactor*an.rollVerticalRatio;an.targetAngularVelocity=an.targetAngularVelocity+an.turnAssistPitchInput*an.right+an.turnAssistYawInput*an.up end end end,torque=function(an)an.angularAcceleration=an.torqueFactor*(an.targetAngularVelocity-an.constructAngularVelocity)an.airAcceleration=vec3(construct.getWorldAirFrictionAngularAcceleration())an.angularAcceleration=an.angularAcceleration-an.airAcceleration;local cc='torque'Nav:setEngineTorqueCommand(cc,an.angularAcceleration,an.keepCollinearity,'airfoil','','',an.tolerancePercentToSkipOtherPriorities)end,brakes=function(an)if an.burnSpeed and an.speed and burnSpeedLimiter then if not an.inLowSpace and an.speed*3.6>=k(1200,an.burnSpeed-50)then if an.speedUp>=-30 and an.atmoDensity<=0.03 then else an.finalBrakeInput=1 end end;if an.spcBrake==true or an.apBrake==true then an.finalBrakeInput=1 end end;an.brakeAcceleration=-an.finalBrakeInput*(an.brakeSpeedFactor*an.velocity+an.brakeFlatFactor*an.velocityDirection)Nav:setEngineForceCommand('brake',an.brakeAcceleration)end,longitudinal=function(an)an.longitudinalEngineTags='thrust analog longitudinal'..(an.groundMode and' fueled'or'')an.longitudinalCommandType=NACM:getAxisCommandType(axisCommandId.longitudinal)if an.longitudinalCommandType==axisCommandType.byThrottle then an.longitudinalAcceleration=NACM:composeAxisAccelerationFromThrottle(an.longitudinalEngineTags,axisCommandId.longitudinal)Nav:setEngineForceCommand(an.longitudinalEngineTags,an.longitudinalAcceleration,an.keepCollinearity)elseif an.longitudinalCommandType==axisCommandType.byTargetSpeed then an.longitudinalAcceleration=NACM:composeAxisAccelerationFromTargetSpeed(axisCommandId.longitudinal)an.autoNavigationEngineTags=an.autoNavigationEngineTags..' , '..an.longitudinalEngineTags;an.autoNavigationAcceleration=an.autoNavigationAcceleration+an.longitudinalAcceleration;if NACM:getTargetSpeed(axisCommandId.longitudinal)==0 or NACM:getCurrentToTargetDeltaSpeed(axisCommandId.longitudinal)<-NACM:getTargetSpeedCurrentStep(axisCommandId.longitudinal)*0.5 then an.autoNavigationUseBrake=true end end end,lateral=function(an)an.lateralStrafeEngineTags='thrust analog lateral'an.lateralCommandType=NACM:getAxisCommandType(axisCommandId.lateral)if an.lateralCommandType==axisCommandType.byThrottle then an.lateralStrafeAcceleration=NACM:composeAxisAccelerationFromThrottle(an.lateralStrafeEngineTags,axisCommandId.lateral)Nav:setEngineForceCommand(an.lateralStrafeEngineTags,an.lateralStrafeAcceleration,an.keepCollinearity)elseif an.lateralCommandType==axisCommandType.byTargetSpeed then an.lateralAcceleration=NACM:composeAxisAccelerationFromTargetSpeed(axisCommandId.lateral)an.autoNavigationEngineTags=an.autoNavigationEngineTags..' , '..an.lateralStrafeEngineTags;an.autoNavigationAcceleration=an.autoNavigationAcceleration+an.lateralAcceleration end end,vertical=function(an)if not an.groundMode then an.verticalStrafeEngineTags='thrust analog vertical'an.verticalCommandType=NACM:getAxisCommandType(axisCommandId.vertical)if an.verticalCommandType==axisCommandType.byThrottle then an.verticalStrafeAcceleration=NACM:composeAxisAccelerationFromThrottle(an.verticalStrafeEngineTags,axisCommandId.vertical)Nav:setEngineForceCommand(an.verticalStrafeEngineTags,an.verticalStrafeAcceleration,an.keepCollinearity,'airfoil','ground','',an.tolerancePercentToSkipOtherPriorities)elseif an.verticalCommandType==axisCommandType.byTargetSpeed then an.verticalAcceleration=NACM:composeAxisAccelerationFromTargetSpeed(axisCommandId.vertical)an.autoNavigationEngineTags=an.autoNavigationEngineTags..' , '..an.verticalStrafeEngineTags;an.autoNavigationAcceleration=an.autoNavigationAcceleration+an.verticalAcceleration end end end,cruise=function(an)if an.autoNavigationAcceleration:len()>constants.epsilon then if an.brakeInput~=0 or an.autoNavigationUseBrake or math.abs(an.velocityDirection:dot(an.forward))<0.95 then an.autoNavigationEngineTags=an.autoNavigationEngineTags..', brake'end;Nav:setEngineForceCommand(an.autoNavigationEngineTags,an.autoNavigationAcceleration,an.dontKeepCollinearity,'','','',an.tolerancePercentToSkipOtherPriorities)end end,boosters=function(an)Nav:setBoosterCommand('rocket_engine')end})Brakes=(function()local br=Flight;local az={locked=false,ap='off',labelOn=brakeToggleMode and'Brake Toggle'or'Brakes [Lock with ALT key]',labelOff=brakeToggleMode and'Brake Toggle'or'Brakes [Tap to Release]'}function az.init(an)KeyActions:register('start','brake','keyBrakeStart',br,'keyBrakeStart')KeyActions:register('stop','brake','keyBrakeStop',br,'keyBrakeStop')KeyActions:register('loop','brake','keyBrakeLoop',br,'keyBrakeLoop')if not br.inSpace then an.locked=true end;az.button1=HUD.buttons:createButton('Brakes',an.locked and an.labelOn or an.labelOff,KeyMaps['brake'],an.locked and'lock'or'off')end;function az.keyAction(an,aD,cd)color='off'if cd~=1 then an.ap='off'end;if aD=='start'then if brakeToggleMode then an.locked=not an.locked elseif br.keyLAlt==1 then an.locked=true else an.locked=false;color='temp'end elseif aD=='stop'then if cd==1 then an.ap='off'an.locked=false end elseif aD=='loop'and not brakeToggleMode then if br.keyLAlt==1 then an.locked=true else color='temp'end elseif aD=='lock'then if cd==1 then an.ap='on'end;an.locked=true end;local ce=NACM:getAxisCommandType(axisCommandId.longitudinal)if ce==axisCommandType.byTargetSpeed then local cf=NACM:getTargetSpeed(axisCommandId.longitudinal)if math.abs(cf)>constants.epsilon then if aD=='loop'then NACM:updateCommandFromActionLoop(axisCommandId.longitudinal,-utils.sign(cf))elseif aD=='start'then NACM:updateCommandFromActionStart(axisCommandId.longitudinal,-utils.sign(cf))end end end;if an.locked then color='lock'end;an.button1:toggle({active=color,label=an.locked==true and an.labelOff or an.labelOn})end;return az end)()Hovers=(function()local br=Flight;local az={cmd=0,max=30}function az.init(an)KeyActions:register('start','groundaltitudeup','keyLiftUpStart',an,'keyLiftUpStart')KeyActions:register('loop','groundaltitudeup','keyLiftUpLoop',an,'keyLiftUpLoop')KeyActions:register('start','groundaltitudedown','keyLiftDownStart',an,'keyLiftDownStart')KeyActions:register('loop','groundaltitudedown','keyLiftDownLoop',an,'keyLiftDownLoop')local cg=unit.computeGroundEngineAltitudeStabilizationCapabilities()an.max=cg[1]/1;an.cmd=q(startingHoverHeight,0,an.max)unit.activateGroundEngineAltitudeStabilization(0)an:update(true)end;function az.keyLiftUpStart(an)an:start(1.0)an:update()end;function az.keyLiftUpLoop(an)an:loop(1.0)an:update()end;function az.keyLiftDownStart(an)an:start(-1.0)an:update()end;function az.keyLiftDownLoop(an)an:loop(-1.0)an:update()end;function az.start(an,bg)NACM:updateTargetGroundAltitudeFromActionStart(bg)end;function az.loop(an,bg)NACM:updateTargetGroundAltitudeFromActionLoop(bg)end;function az.full(an)unit.activateGroundEngineAltitudeStabilization(an.cmd)NACM:setTargetGroundAltitude(an.cmd)an:update()end;function az.manual(an,ch)if Gear.landing then return end;local bg=an.max*ch;an.cmd=bg;unit.activateGroundEngineAltitudeStabilization(bg)NACM:setTargetGroundAltitude(bg)an:update()end;function az.land(an)unit.activateGroundEngineAltitudeStabilization(0)NACM:setTargetGroundAltitude(0)an:update()end;function az.update(an,ci)local C=unit.getSurfaceEngineAltitudeStabilization()if C>1 then an.cmd=C end;if C<0 then C=0 end;if C>1 then Gear:enableBtn()end;HUD.widgets.primary.tmpl:bind({HoverHeight=g(\"%.0f\",C)})end;return az end)()GroundMode=(function()local br=Flight;local az={active=false}function az.init(an)KeyActions:register('start','option9','keyAction',an,'keyAction')SystemFlush:register(90,'groundmode',GroundMode,'flush')an.button=HUD.buttons:createButton('GroundMode','Ground Mode','A:9','off')end;function az.flush(an)if not an.active then return end;local cj=vec3()end;function az.keyAction(an)if br.keyLShift==1 then return end;an.active=not an.active;br.groundMode=an.active;if an.active then Stabilize:keyAction(1)currentGroundAltitudeStabilization=120;NACM:updateTargetGroundAltitudeFromActionStart(120)Hovers:update()if br.mode==0 then unit.cancelCurrentControlMasterMode()end end;an.button:toggle({active=an.active and\"on\"or\"off\"})end;return az end)()AGG=(function()local br=Flight;local az={active=true}function az.init(an)an.active=antigrav.isActive()==true;if not an.active then antigrav.activate()end;an.baseTarget=j(antigrav.getBaseAltitude())an.altTarget=antigrav.getTargetAltitude()KeyActions:register('start','antigravity','keyAntigrav',an,'keyAntigrav')KeyActions:register('tick','AGGupdate','AGGupdate',an,'update')KeyActions:register('start','groundaltitudeup','keyLiftAGGUpStart',an,'keyAntigravUp')KeyActions:register('loop','groundaltitudeup','keyLiftAGGUpLoop',an,'keyAntigravUp')KeyActions:register('start','groundaltitudedown','keyLiftAGGDownStart',an,'keyAntigravDown')KeyActions:register('loop','groundaltitudedown','keyLiftAGGDownLoop',an,'keyAntigravDown')unit.setTimer('AGGupdate',0.15)end;function az.update(an)an.baseTarget=antigrav.getBaseAltitude()an.altTarget=antigrav.getTargetAltitude()an.fieldStr=antigrav.getFieldPower()an.pulsors=antigrav.getPulsorCount()an.active=antigrav.isActive()==true;local bc=an:render()HUD.widgets.primary.tmpl:bind({AGGView=bc})end;function az.set(an,C)an.altTarget=C;antigrav.setTargetAltitude(C)end;function az.keyAntigravUp(an)an.altTarget=an.altTarget+(br.keyLShift==1 and 50 or 5)an:set(an.altTarget)end;function az.keyAntigravDown(an)an.altTarget=an.altTarget-(br.keyLShift==1 and 50 or 5)an:set(an.altTarget)end;function az.keyAntigrav(an)antigrav.toggle()end;function az.render(an)local w=g(\"%.0f\",an.altTarget)local ck=g(\"%.0f\",an.baseTarget)local color=an.active and'on'or'lock'local cl=an.active and'ON'or'OFF'local bc=[[\n      <g transform=\"translate(2,0)\">\n        <path d=\"M 250 778.1 L 250 730.6 L 312.5 730.4 L 312.5 772.6 L 307.3 777.9 L 250 778.1 Z M 129 728 L 129 794.6 L 135.6 799.4 L 149.9 799.4 L 152 798.1 L 245.2 798.1 L 247.3 799.4 L 312.1 799.4 L 315.3 796.5 L 315.2 728 L 129 728 Z M 131.7 730.6 L 247.1 730.6 L 247.2 786.1 L 241 792.4 L 131.8 792.4 L 131.7 730.6 Z\" class=\"c-co\" style=\"\"/>\n        <g transform=\"matrix(1, 0, 0, 1, -820.5, -67.22807)\">\n          <path class=\"c-co\" d=\"M 963.9 776.9 L 1004.7 776.9 L 988.9 792.6 L 963.9 792.6 L 963.9 776.9 Z\"/>\n          <path class=\"btn-]]..color..[[\" d=\"M 1007.9 776.9 L 1011.3 776.9 L 995.5 792.6 L 992.1 792.6 L 1007.9 776.9 Z\"/>\n          <path class=\"c-bg\" d=\"M 967.3 776.8 L 1104.5 776.9 L 1088.7 792.6 L 967.3 792.6 L 967.3 776.8 Z\" transform=\"matrix(-1, 0, 0, -1, 2103, 1569.39996)\"/>\n          <text class=\"ffrd fs14 c-tm\" style=\" white-space: pre; font-size: 14px;\" x=\"1015.6\" y=\"789.6\">ANTIGRAV ]]..cl..[[</text>\n          <path class=\"btn-]]..color..[[\" d=\"M 949.5 776.9 L 961.4 776.9 L 961.4 787.5 L 956.3 792.6 L 949.5 792.6 L 949.5 776.9 Z\" transform=\"matrix(-1, 0, 0, -1, 1910.90002, 1569.5)\"/>\n          <text class=\"ffrd fs14 c-th\" style=\"text-anchor: middle; white-space: pre; font-size: 14px;\" x=\"977.6\" y=\"789.3\">A:G</text>\n        </g>\n        <polygon class=\"c-bg\" points=\"236.9 737.4 236.9 794.9 126.5 794.9 126.5 742.7 131.7 737.4\" transform=\"matrix(-1, 0, 0, -1, 371.09999, 1527.70001)\"/>\n        <path d=\"M 290.4 794.1 L 297.8 789.4 L 305.1 794.1 L 305.1 787.4 L 297.8 782.7 L 290.4 787.4 L 290.4 794.1 Z M 273.9 794.1 L 281.2 789.4 L 288.6 794.1 L 288.6 787.4 L 281.2 782.7 L 273.9 787.4 L 273.9 794.1 Z M 257.3 794.1 L 264.6 789.4 L 271.9 794.1 L 271.9 787.4 L 264.6 782.7 L 257.3 787.4 L 257.3 794.1 Z\" style=\"fill: rgb(255, 255, 255); fill-opacity: 0.23;\">\n        </path>\n        <g transform=\"matrix(1, 0, 0, 1, -5.45956, 0.70261)\">\n          <rect x=\"285.4\" y=\"737.5\" width=\"29.3\" height=\"11.3\" class=\"c-bg\" />\n          <path class=\"c-co\" d=\"M 258.6 735.3 L 285.4 735.3 L 285.4 745.9 L 280.3 751 L 258.6 751 L 258.6 735.3 Z\" transform=\"matrix(-1, 0, 0, -1, 544, 1486.29999)\"/>\n          <text class=\"c-bg ffrd fs14\" style=\" font-size: 12px; text-anchor: middle;\" x=\"272.3\" y=\"747.3\">A:SPC</text>\n          <text class=\"c-co ffrd fs14\" style=\" font-size: 12px;\" x=\"287.4\" y=\"747.3\">UP</text>\n        </g>\n        <g transform=\"matrix(1, 0, 0, 1, -5.46111, 20.72485)\">\n          <rect x=\"285.4\" y=\"737.5\" width=\"29.3\" height=\"11.3\" class=\"c-bg\" />\n          <path class=\"c-co\" d=\"M 258.6 735.3 L 285.4 735.3 L 285.4 745.9 L 280.3 751 L 258.6 751 L 258.6 735.3 Z\" transform=\"matrix(-1, 0, 0, -1, 544, 1486.29999)\"/>\n          <text class=\"c-bg ffrd fs14\" style=\"font-size: 12px; text-anchor: middle;\" x=\"272.3\" y=\"747.3\">A:C</text>\n          <text class=\"c-co ffrd fs14\" style=\"font-size: 12px;\" x=\"287.4\" y=\"747.3\">DOWN</text>\n        </g>\n        <text class=\"c-co ffrd \" style=\"white-space: pre; font-size: 12px;\" x=\"139.3\" y=\"747.1\">SINGULARITY</text>\n        <text class=\"c-tm ffrd  \" style=\" white-space: pre; font-size: 12px; text-anchor: end;\" x=\"238.5\" y=\"747.1\">]]..ck..[[m</text>\n        <text class=\"c-co ffrd \" style=\"white-space: pre; font-size: 12px;\" x=\"139.6\" y=\"759.2\">TARGET</text>\n        <text class=\"c-tm ffrd  \" style=\" white-space: pre; font-size: 12px; text-anchor: end;\" x=\"238.8\" y=\"759.2\">]]..w..[[m</text>\n        <text class=\"c-co ffrd \" style=\"white-space: pre; font-size: 12px;\" x=\"139.5\" y=\"771\">PULSORS</text>\n        <text class=\"c-tm ffrd  \" style=\" white-space: pre; font-size: 12px; text-anchor: end;\" x=\"238.7\" y=\"771\">]]..an.pulsors..[[</text>\n        <text class=\"c-co ffrd \" style=\"white-space: pre; font-size: 12px;\" x=\"139.5\" y=\"783\">FIELD PWR</text>\n        <text class=\"c-tm ffrd  \" style=\" white-space: pre; font-size: 12px; text-anchor: end;\" x=\"238.7\" y=\"783\">]]..g(\"%.3f\",an.fieldStr)..[[</text>\n    </g>\n    ]]return bc end;return az end)()Fuel=(function()local az={tankSizes={atmo={xs={35.03,100,45},s={182.67,400,155},m={988.67,1600,1300},l={5480,12800,10450}},space={xs={35.03,100,45},s={182.67,400,175},m={988.67,1600,1480},l={5480,12800,15900}},rocket={xs={173.42,400,350},s={886.72,800,725},m={4720,6400,6200},l={25740,50000,68700}}},fuelWeights={atmo=4,space=6,rocket=0.8},mainTemplates={},template=\"\",html=\"\",initBinds={}}function az.compile(an,b6,b5,cm)an.template=\"\"for cn,am in pairs(an.mainTemplates)do an.template=an.template..am end;an.initBinds[b5]={b6,cm}end;function az.ready(an)an.tmpl:compile(an.template)for b5,co in pairs(an.initBinds)do co[1]:fill(co[2])end end;function az:makeFuelTicks(bu)local cp,cq='fil1','fil3 op04'local cr,cs={},round(bu/10,0)for b9=1,10,1 do local ct=cs>=b9 and cp or cq;cr[#cr+1]=h({[[<use xlink:href=\"#fuel_arr\" transform=\"translate(]],(b9-1)*8+1,[[ 0)\" class=\"]],ct,[[\"></use>]]})end;return h(cr)end;function az.makeWidget(an,b9,type)local bn={tickTemplate={}}local cu=-29+b9*27;local cv=20;if b9>3 then local cw=b9%3==0 and 3 or b9%3;cv=20-j((b9-1)/3)*188;cu=-29+cw*27 end;bn.template=[[\n      <g transform=\"translate(]]..cv..[[ ]]..cu..[[)\">\n        <polygon class=\"c-co\" points=\"359.9 815.4 362.1 813 414.5 813 416.9 815.4\" />\n        <path class=\"c-co\" d=\"M 347.3 833.2 L 441 833.2 L 441 815.5 L 347.3 815.7 L 347.3 833.2 Z M 347.3 814.8 L 441.7 814.8 L 441.7 833.9 L 347.3 833.9 L 347.3 814.8 Z\" />\n        {{ticks}}\n        <polygon class=\"c-bg\" points=\"439.8 832.2 439.8 816.6 433.6 816.6 438.4 824.4 433.6 832.2\" />\n        <path class=\"c-bg\" d=\"M 342.6 832.2 L 348.8 827 L 348.8 816.6 L 312.2 816.6 L 312.2 832.2 L 342.6 832.2 Z\" transform=\"matrix(-1, 0, 0, -1, 661.8, 1648.8)\"/>\n        <polygon class=\"c-bg\" points=\"350.7 816.6 349.4 816.6 349.4 832.2 350.7 832.2 355.6 824.4\"/>\n        <text class=\"ffrd c-tm\" style=\"text-anchor:end;text-transform:uppercase;\" x=\"349.2\" y=\"828.4\">]]..type..[[</text>\n        <path d=\"M 431.2 815.4 L 433.6 812.6 L 445.4 812.6 L 454.4 814.9 L 489.8 814.9 L 489.8 828 L 483.9 833.9 L 443.9 833.9 L 444 813.8 L 434.3 813.8 L 432.9 815.4 L 431.2 815.4 Z\" class=\"c-co\" />\n        <text class=\"c-th ffrd\" x=\"448.3\" y=\"828.4\" bx:origin=\"0.5 0.5\">{{time}}</text>\n      </g>\n    ]]bn.tmpl=Template.new(bn.template)bn.tmpl:listen(function(be)an.tmpl:bind({[type]=be.html})an.tmpl:render()end)bn.fill=function(self,be)bn.tmpl:bind(be)bn.tmpl:render()end;an.mainTemplates[type]=\"{{\"..type..\"}}\"an:compile(bn,type,{})return bn end;function az.init(an)an.fuelWeightMod=(100-5*fuelWeightTier-5*containerWeightTier)/100;an.fuelWeights.atmo=an.fuelWeights.atmo*an.fuelWeightMod;an.fuelWeights.space=an.fuelWeights.space*an.fuelWeightMod;an.fuelWeights.rocket=an.fuelWeights.rocket*an.fuelWeightMod;_G['rocketTankSizeTier']=_G['rocketTankSizeTier']/2;an.curTime=system.getArkTime()local cx={[\"Atmospheric Fuel Tank\"]='atmo',[\"Space Fuel Tank\"]='space',[\"Rocket Fuel Tank\"]='rocket'}local cy=core.getElementIdList()local cz={}local cA={}local bc=''an.fuelComps={}for b9=1,#cy,1 do elem={uid=cy[b9],name=core.getElementNameById(cy[b9]),kind=core.getElementDisplayNameById(cy[b9]),mass=core.getElementMassById(cy[b9])}kind=cx[elem.kind]if cx[elem.kind]~=nil then elem.kind=kind;elem.size='xs'for B,bn in pairs(an.tankSizes[kind])do local cB=core.getElementMaxHitPointsById(elem.uid)if cB>=bn[3]and cB<bn[3]*2 then elem.size=B end end;elem.subtype=string.match(elem.name,\"%(([%a%d_]+)%)\")or kind;elem.lastTime=an.curTime;elem.percent=1;elem.lastMass=4;elem.mass=2;elem.timeLeft=1;elem.lastTimeLeft=1;elem.maxMass=an.tankSizes[kind][elem.size][2]*(1+0.2*_G[kind..'TankSizeTier'])*an.fuelWeights[kind]if not cA[elem.subtype]then cA[elem.subtype]={}end;cA[elem.subtype][#cA[elem.subtype]+1]=elem;if not an.fuelComps[elem.subtype]then an.fuelComps[elem.subtype]={}end else end end;an.fuels=cA;an.Processor=coroutine.create(an.update)KeyActions:register('tick','FuelUpdate','FuelUpdate',an,'coUpdate')unit.setTimer('FuelUpdate',0.05)an.tmpl=nil;an.tmpl=Template.new(an.template)an.tmpl:listen(function(be)HUD.widgets.primary.tmpl:bind({MainFuel=be.html})end)HUD.widgets.primary.tmpl:bind({MainFuel=\"\"})local cC=y(an.fuelComps)table.sort(cC)for b9,cn in ipairs(cC)do an.fuelComps[cn].o=an:makeWidget(b9,cn)end;an:ready()end;function az.coUpdate(an)local bz=coroutine.status(an.Processor)if bz~=\"dead\"then local bA,bB=coroutine.resume(an.Processor)if bB then b(\"ERROR UPDATE FUEL: \"..bB)end elseif bz==\"dead\"then an.Processor=coroutine.create(an.update)local bA,bB=coroutine.resume(an.Processor)end end;function az.update()local an=Fuel;for cn,cD in pairs(an.fuelComps)do an.curTime=system.getArkTime()local cE=an.fuels[cn]local cF=false;cD.totalperc=0;cD.totaltime=0;for b9,cG in ipairs(cE)do coroutine.yield()an.curTime=system.getArkTime()cG.lastMass=cG.mass;cG.mass=core.getElementMassById(cG.uid)-an.tankSizes[cG.kind][cG.size][1]if cG.mass~=cG.lastMass then cG.percent=(cG.mass/cG.maxMass or 0)*100;cG.lastTimeLeft=cG.timeLeft;cG.timeLeft=j(cG.mass/((cG.lastMass-cG.mass)/(an.curTime-cG.lastTime)))cG.lastTime=an.curTime elseif an.curTime-cG.lastTime>6 or cF then cF=true end;cD.totalperc=cD.totalperc+(cG.percent or 0)cD.totaltime=cD.totaltime+(cG.timeLeft>0 and cG.timeLeft or 0)end;cD.avgperc=cD.totalperc/#an.fuels[cn]cD.avgtime=cD.totaltime/#an.fuels[cn]local cH={}cH.ticks=an:makeFuelTicks(cD.avgperc)if cD.avgtime>2*24*60*60 or cD.avgtime<=1 or D(cD.avgtime)or cF then cH.time=g(\"%.0f\",cD.avgperc)..'%'else cH.time=formatTime(cD.avgtime)end;cD.o:fill(cH)end end;return az end)()Gear=(function()local br=Flight;local az={disabled=false,landing=true,prevCmd=0}function az.init(an)if not br.inSpace then an.landing=true;Nav.control.deployLandingGears()else an.landing=false;Nav.control.retractLandingGears()end;KeyActions:register('start','gear','Gear',Gear,'keyAction')an.button=HUD.buttons:createButton('Gear',\"Landing Mode\",KeyMaps['gear'],an.landing and\"lock\"or\"off\")end;function az.enableBtn(an)an.landing=false;an.button:toggle({active=an.landing and\"lock\"or\"off\"})end;function az.keyAction(an)an.landing=not an.landing;an.button:toggle({active=an.landing and\"lock\"or\"off\"})if an.landing then if(br.speed or 0)*3.6<landingSpeedConfig then Hovers:land()br:keyStopEngines(1)Nav.control.deployLandingGears()Brakes:keyAction('lock')Sound:play('land')else an.landing=false end else Hovers:full()Nav.control.retractLandingGears()end end;return az end)()Stabilize=(function()local az={disabled=false,active=false,tempsw=false}function az:init()KeyActions:register('start','option2','StabRotation',Stabilize,'keyAction')KeyActions:register('tick','StabTick','StabTick',Stabilize,'tsw')unit.setTimer('StabTick',0.25)SystemFlush:register(12,'stabilize',Stabilize,'flush')az.button1=HUD.buttons:createButton('Stabilize',\"Auto-Level\",'A:2','off')end;function az.flush(an)if not an.disabled and Flight.inSpace then an.disabled=true;an.button1:toggle({active='dis'})elseif not Flight.inSpace then an.disabled=false;an.button1:toggle({active=an.active and an.tempsw and\"on\"or\"off\"})end;if Flight.speed==nil or Throttle.previous==nil or an.disabled then return end;if an.active and an.tempsw or Flight.speed<28 and Flight.atmoDensity>0.1 and Throttle.previous<3 then Flight.targetAngularVelocity=Flight.targetAngularVelocity+Flight.worldVertical:cross(Flight.up)end end;function az.keyAction(an,aD)if an.disabled or Flight.keyLShift==1 then return end;if aD==1 or aD==0 then an.active=aD else an.active=not an.active end;an.tempsw=an.active;an.button1:toggle({active=an.active and an.tempsw and\"on\"or\"off\"})end;function az.tsw(an)if Flight.pitchInput>0 or Flight.rollInput>0 or Flight.yawInput>0 then an.tempsw=false else an.tempsw=an.active end end;return az end)()AltLock=(function()local az={state=false,disabled=false,labelOn='Holding at: ',labelOff='Hold Altitude',autoPitch=0}function az.init(an)KeyActions:register('start','option3','AltLockToggle',an,'keyAction')KeyActions:register('stop','forward','AltLockPitchStop',an,'AltLockPitchStop')KeyActions:register('stop','backward','AltLockPitchStop',an,'AltLockPitchStop')SystemFlush:register(13,'altlock',an,'flush')an.button1=HUD.buttons:createButton('AltLock',an.labelOff,'A:3','off')an.PID=pid.new(0.015,0,0.4)end;function az.flush(an)if not an.disabled and Flight.inSpace then an.disabled=true;an.button1:toggle({active='dis',label=an.labelOff})elseif an.disabled and not Flight.inSpace then an.disabled=false;an.state=false;an.button1:toggle({active=false and an.tempsw and\"on\"or\"off\"})end;if not an.state or an.disabled then return end;local cI=Flight.altitude;local cJ=Flight.velocity:len()local cK=an.state-cI;local cL=300+cJ;local cM=25;local cb=Flight.spitch;local cN=(utils.smoothstep(cK,-cL,cL)-0.5)*2*cM;local cO=0.05;if math.abs(cN-cb)>cO then an.PID:inject(cN-cb)an.autoPitch=an.PID:get()end;Flight.targetAngularVelocity=Flight.targetAngularVelocity+an.autoPitch*Flight.pitchSpeedFactor*Flight.right end;function az.keyAction(an)if Flight.keyLShift==1 then return end;if an.state==false then an.state=Flight.altitude;Stabilize:keyAction(1)else an.state=false;Stabilize:keyAction(0)end;an.button1:toggle({active=an.state and\"on\"or\"off\",label=an.state and an.labelOn..g(\"%.0f\",an.state or 0)..\" m\"or an.labelOff})end;function az.set(an,cI)an.state=cI;Stabilize:keyAction(true)an.button1:toggle({active=an.state and\"on\"or\"off\",label=an.state and an.labelOn..g(\"%.0f\",an.state or 0)..\" m\"or an.labelOff})end;function az.AltLockPitchStop(an)if an.state then an.state=Flight.altitude;an.button1:toggle({label=an.labelOn..g(\"%.0f\",an.state or 0)..\"m\"})end end;return az end)()HUD=Controller.new({styles=\"\",widgets={},activated={},deactivated={},hsls={},color='#4992CF',opacity='0.95',scale=1})function HUD:opacitize(cP)self.opacity=cP/100;self:colorize()end;function HUD:scalize(cP)self.scale=cP/100;self:colorize()end;function HUD:colorize(cP)if not cP then cP=self.color end;self.color=cP;local cQ=ap(cP)local cR={core=aw(cQ,0,0),bg=aw(cQ,-23,-24),headbg=aw(cQ,-26,-20)}cR.gyro=cR.core;if cQ[3]>60 then cR.txthi='hsl(0,0%,15%)'cR.txtmd='hsl(0,0%,15%)'else cR.txthi='hsl(0,0%,100%)'cR.txtmd='hsl(0,0%,77%)'cR.gyro='hsl(0,0%,80%)'end;if hudTextColor~=''and hudTextColor~=nil then cR.txtmd=hudTextColor end;HUD.widgets.primary.tmpl:bind({HSLScore=self.color})local cS=-(-4.15*self.scale)cS=cS..\"vh\"self.styles=[[\n    <style>\n    .olay{position:absolute;top:0vh;left:0vw;width:100vw;height:100vh;z-index:5;font-size:0.5vh;color:#fff;opacity:]]..self.opacity..[[;}\n    .hud-fill{position:absolute;top:0vh;left:0vw;width:100vw;height:100vh; /*background:rgba(255,255,255,0.25);*/ backdrop-filter:blur(50px);}\n    .hud-scope{position:absolute;bottom:52vh;right:1vh;height:18vh;width:22vh;border:2px solid #bbb;}\n    .hud-shields{position:absolute;/*bottom:35vh;*/top:0.75vh;left:1vh;height:9.25vh;text-align:center; opacity:0.85; display:none;}\n    .hud-body{position:absolute;bottom:0.6vh;left:0;right:0;height:calc(17.75vh * ]]..self.scale..[[); transform:translateX(]]..cS..[[);}\n    .hud-warning{position:absolute;top:14vh;height:7vh;width:100vw;margin-left:50%;left:-50%;display:none;}\n    .olay svg{display:inline-block; position:absolute; top:0;left:0; height:100%; margin-left:50%; transform:translateX(-50%);\n      filter: drop-shadow(0.11rem 0.15rem 0.4rem rgba(0, 0, 0, 0.4));\n      font-family:Refrigerator; font-weight:900; z-index:10;\n    }\n    .hud-body-txt{\n      display:inline-block; height:100%; margin-left:50%; transform:translateX(-50%); \n      position:relative; width:707px;\n      font-family:Refrigerator; font-weight:900;\n      z-index:15;\n    }\n    </style>\n    <style type=\"text/css\">\n      .dt{postion:absolute; font-size:12px; white-space:pre;}\n      text{font-size:12px; white-space:pre;}\n      .st0{fill:none;stroke:]]..cR.core..[[;stroke-miterlimit:10;}          /* outline and focus color */\n      .ffrd{font-family:Refrigerator; font-weight:900;}\n      .ffro{font-family:Roboto;}\n      .fs7{font-size:7px;}\n      .fs8{font-size:8px;}\n      .fs11{font-size:11px;}\n      .fs12{font-size:12.4px;}\n      .fs13{font-size:13px;}\n      .fs14{font-size:14px;}\n      .fs15{font-size:15px;}\n      .fs17{font-size:17px;}\n      .fs20{font-size:20px;}\n      .fs22{font-size:22px;}\n      .ftam{text-anchor:middle;}\n      .fttu{text-transform:uppercase;}\n      .fls1{letter-spacing:-0.1px;}\n      .st15{font-size:10px;glyph-orientation-vertical:0;writing-mode:tb;}\n      .fil3{fill: #2b4355;}  /* dark blue bg */\n      .fil1{fill: rgb(88,185,71);}   /* green success fill */\n      .fil2{fill: rgb(73,146,207);}  /* bright blue accent */\n      .fil4{fill: rgb(249,159,55);} /* orange accent */\n      .c-bg{fill:]]..cR.bg..[[;}\n      .c-co{fill:]]..cR.core..[[;}\n      .c-hb{fill:]]..cR.headbg..[[;}\n      .c-th{fill:]]..cR.txthi..[[;}\n      .c-tm{fill:]]..cR.txtmd..[[;}\n      .c-wh{fill:#ffffff;}\n      .c-ow{fill:#bbbbbb;}\n      .c-gyr{fill:]]..cR.gyro..[[;}\n      .c-wh{fill:#fff;}\n      .op03{opacity:0.3;}\n      .op04{opacity:0.4;}\n      .op06{opacity:0.6;}\n      .btn-dis{opacity:0.25; fill: rgb(90,90,90);}\n      .btn-on{fill: rgb(88,185,71);}\n      .btn-lock{fill: rgb(197,103,103);}\n      .btn-temp{fill: #bcc21d;}\n      .btn-off{opacity:0.8; fill: rgb(120,120,120);}\n      .logo1{display:none;}\n      #gyrolines text{alignment-baseline:middle;}\n      .lastTick{fill:url(#lastTick); overflow:hidden;}\n    </style>\n  ]]end;HUD.n=h({'A','l','b','a','t','r','o','s','s'})Menu=(function()local az={LSkey=0,LSloops=0,show=0}function az.menuLShiftStart(an)an.LSkey=1 end;function az.menuLShiftStop(an)an.LSkey=0;an.LSloops=0;an.show=0;system.lockView(false)end;function az.menuLShiftLoop(an)if an.LSloops<100 then an.LSloops=an.LSloops+1 elseif an.show==0 then an.show=1;system.lockView(true)end end;return az end)()HUD.full={init=function(an)KeyActions:register('tick','HUDrender','HUDrender',an,'render')KeyActions:register('tick','HUDupdate','HUDupdate',an,'update')unit.setTimer('HUDupdate',0.3)KeyActions:register('start','lshift','menuLShiftStart',Menu,'menuLShiftStart')KeyActions:register('stop','lshift','menuLShiftStop',Menu,'menuLShiftStop')KeyActions:register('loop','lshift','menuLShiftLoop',Menu,'menuLShiftLoop')end,fps=function(an,cT)local cU=1/cT;unit.stopTimer('HUDrender')unit.setTimer('HUDrender',cU)end,update=function(an)Throttle:update()brakeData=unit.getWidgetData()local cV,cW=construct.getCurrentBrake(),construct.getMaxBrake()Flight.currentBrake=cV;Flight.maxBrake=cW;local cX=construct.getMaxThrustAlongAxis('fueled',construct.getOrientationForward()[4])local a5,Y=calcBrakeDist2(0)local V=formatDist(a5)Flight.mode=unit.getControlMode()Flight.brakeDistance=a5;local cY,cZ='',''local c_=Flight.mode==0 and\"THROTTLE\"or\"CRUISE SPD\"if Flight.mode==0 then cY='THROTTLE'cZ=g(\"%.0f\",Throttle.real)..\"%\"else cY='SPD'cZ=g(\"%.0f\",Throttle.real/100)..\" kmph\"end;HUD.widgets.primary.tmpl:bind({BrakesMax=g(\"%.0f\",(cW or 0)/1000),BrakesUsed=g(\"%.0f\",(cV or 0)/1000),ShipMass=g(\"%.0f\",(Flight.mass or 0)/1000),ModeLabel=c_,ThrottleLabel=cY,ThrottleValue=cZ,WidgetThrottle=Throttle.html,BrakingDistance=V,BrakingTime=Y})end,reset=function(an)an.widgets={}end,html=\"\",htmlobj={},widgets={},render=function(an)an.htmlobj={[[<div class=\"olay\">]],HUD.styles}for cn,C in pairs(an.widgets)do HUD.widgets[cn].tmpl:render()an.htmlobj[#an.htmlobj+1]=HUD.widgets[cn].html end;an.htmlobj[#an.htmlobj+1]=[[</div>]]an.html=h(an.htmlobj)system.setScreen(an.html)end}HUD.widgets.shiphp={init=function(an)an.tmpl=Template.new(an.template)an.tmpl:listen(function(be)an.html=be.html end)end,html=\"\",template=[[]]}local function d0()local d1={}for b9=-9,9,1 do local d2=309.8+b9*16;local d3=-b9*10;if b9~=0 then d1[#d1+1]=[[\n        <text class=\"c-gyr ftam fs7\" x=\"341.2\" y=\"]]..d2 ..[[\">]]..d3 ..[[</text>\n        <text class=\"c-gyr ftam fs7\" x=\"443.6\" y=\"]]..d2 ..[[\">]]..d3 ..[[</text>\n        <line class=\"st0\" x1=\"428\" y1=\"]]..d2 ..[[\" x2=\"437\" y2=\"]]..d2 ..[[\"/>\n        <line class=\"st0\" x1=\"347\" y1=\"]]..d2 ..[[\" x2=\"356\" y2=\"]]..d2 ..[[\"/>\n      ]]end end;return h(d1)end;HUD.widgets.primary={centerControlMode='warp',init=function(an)an.tmpl=Template.new(an.template())an.tmpl:listen(function(be)an.html=be.html end)HUD.full.widgets['primary']='primary'end,TertiaryFields=(function()local bc=\"\"local d4=786.3;local d5={{'{{ZoneDistLabel}}','{{ZoneDist}}'},{'SAFE LOCAL LOAD','{{SafeLocalMass}} t'},{'SAFE ALIOTH LOAD','{{SafeAtmoMass}} t'},{'BURN SPEED','{{BurnSpeed}} kmph'},{'MAX SPACE KMPH','{{MaxSpeed}}'},{'ATMO DENSITY','{{AtmoDensity}}'},{'ONBOARD COUNT','{{BoardedCt}} players'},{'DOCKED COUNT','{{DockedCt}} ships'}}for B,bn in ipairs(d5)do local d6=(B-1)*14.8+d4;bc=bc..[[\n<text class=\"c-tm\" x=\"1039\" y=\"]]..d6 ..[[\">]]..bn[2]..[[</text>\n<text class=\"c-co\" x=\"959.6\" y=\"]]..d6 ..[[\">]]..bn[1]..[[</text>\n      ]]end;return bc end)(),gyroLines=d0(),CenterNav=function()if Flight.inSpace then return[[<g transform=\"matrix(1.63676, 0, 0, 1.63676, 158.69531, 298.66381)\" id=\"Navball\" style=\"clip-path: url(#clip-gyrowrap);\"></g>]]end;if not Flight.spitch or not Flight.sroll then Flight.spitch=0;Flight.sroll=0 end;local d7=g(\"%.2f\",(Flight.spitch or 0)*1.6,1)local d8=g(\"%.2f\",-Flight.sroll or 0,1)local bc=h({[[<g transform=\"matrix(1.63676, 0, 0, 1.63676, 158.69531, 298.66381)\" id=\"Navball\" style=\"clip-path: url(#clip-gyrowrap);\">\n      <g id=\"NavballCenter\">\n        <polyline class=\"st0\" points=\"419,300.8 410,305.3 410,314.3 419,318.8 &#9;&#9;\" style=\"stroke: rgb(249, 159, 55);\"/>\n        <polyline class=\"st0\" points=\"365,300.8 374,305.3 374,314.3 365,318.8 &#9;&#9;\" style=\"stroke: rgb(249, 159, 55);\"/>\n        <line class=\"st0\" x1=\"392\" y1=\"305.3\" x2=\"392\" y2=\"314.3\" style=\"stroke: rgb(249, 159, 55);\"/>\n        <line class=\"st0\" x1=\"404.1\" y1=\"309.8\" x2=\"379.9\" y2=\"309.8\" style=\"stroke: rgb(249, 159, 55);\"/>\n      </g>\n      <g id=\"gyrolines\" transform-box=\"view-box\" transform=\"rotate(]],d8,[[, 392, 310) translate(0 ]],d7,[[)\">\n        <line class=\"st0\" x1=\"422.8\" y1=\"309.8\" x2=\"447.2\" y2=\"309.8\" style=\"stroke: rgb(249, 159, 55);\"/>\n        <line class=\"st0\" x1=\"338\" y1=\"309.8\" x2=\"361.4\" y2=\"309.8\" style=\"stroke: rgb(249, 159, 55);\"/>\n        ]],HUD.widgets.primary.gyroLines,[[\n      </g>\n    </g>]]})return bc end,html=\"\",template=function()return[[\n  <div class=\"hud-fill\">\n    <svg style=\"width:100%;height:100%;\">\n      {{ReticleFwd}}\n      {{ReticlePro}}\n      {{ReticleRtr}}\n      {{ReticleBody}}\n    </svg>\n  </div>\n\n  <div class=\"hud-body\">\n    <div class=\"hud-body-txt\">\n    \n    </div>\n    <svg viewBox=\"329.2 697.2 1036.2 201\" style=\"overflow:visible;\">\n      <defs>\n        <linearGradient id=\"gradient-1-1\" gradientUnits=\"userSpaceOnUse\" x1=\"297.8\" y1=\"266.9\" x2=\"297.8\" y2=\"270.6\" gradientTransform=\"matrix(1.63676, 0, 0, 1.63676, 158.69531, 298.66382)\" xlink:href=\"#gradient-1\"/>\n        <linearGradient id=\"lastTick\" gradientTransform=\"rotate(90)\">\n          <stop offset=\"{{LastTickP}}\" style=\"stop-color: {{HSLScore}}; stop-opacity:0.3;\"/>\n          <stop offset=\"{{LastTickP1}}\" style=\"stop-color: #58B947; stop-opacity:1;\"/>\n        </linearGradient>\n        <g id=\"BUTTON_SINGLE\">\n          <path class=\"c-co\" d=\"M 953.8 722.4 L 994.6 722.4 L 978.8 738.1 L 953.8 738.1 L 953.8 722.4 Z\" />\n          <path d=\"M 997.8 722.4 L 1001.2 722.4 L 985.4 738.1 L 982 738.1 L 997.8 722.4 Z\" />\n          <path class=\"c-bg\" d=\"M 1004.3 722.3 L 1182.6 722.4 L 1166.8 738.1 L 988.4 738.1 L 1004.3 722.3 Z\" style=\"fill-opacity: 1;\" transform=\"matrix(-1, 0, 0, -1, 2171, 1460.39996)\"/>\n          <path d=\"M 939.4 722.4 L 951.3 722.4 L 951.3 733 L 946.2 738.1 L 939.4 738.1 L 939.4 722.4 Z\" transform=\"matrix(-1, 0, 0, -1, 1890.70001, 1460.5)\"/>\n        </g>\n        <g id=\"fuel_arr\">\n          <polygon points=\"351.8 816.6 356.8 824.4 351.8 832.2 358.9 832.2 363.9 824.4 358.9 816.6\" />\n        </g>\n        <clipPath id=\"clip-gyrowrap\">\n          <path d=\"M 303.7 282.3 L 335.1 250.5 L 364.4 250.5 L 369 254.9 L 415.7 255 L 420.3 250.2 L 449.5 250.3 L 468 268.8 L 479.7 268.8 L 479.9 283.6 L 466.6 297 L 466.7 340.1 L 479.9 353.2 L 479.9 366.2 L 304.8 366.3 L 304.8 353.3 L 318.4 339.7 L 318.3 297 L 303.7 282.3 Z\" style=\"fill: rgb(212, 141, 141); fill-opacity: 1;\" id=\"NavballMask\"/>\n        </clipPath>\n      </defs>\n\n      {{AGGView}}\n\n      <g id=\"WIDGET_CLOSEST\">\n        <path class=\"c-bg\" fill-opacity=\".88\" d=\"m605.8 738.3-38.2 38.2h-48.3l-12.1 12.1-177.9.1v-50.6l276.5.2Z\" paint-order=\"fill\"/>\n        <text x=\"519.1\" y=\"767.1\" class=\"c-co fs13\"></text>\n        <text x=\"335.1\" y=\"750.4\" class=\"c-co\" style=\"font-size:11.5px; font-style:italic;\">Closest Body</text>\n      \n        <g transform=\"translate(-12 0)\">\n          <circle cx=\"461.3\" cy=\"765.8\" r=\"14.7\" class=\"st0\"/>\n          <path d=\"M453.9 743.7h14.7l14.8 14.7v22.1\" class=\"st0\"/>\n          <path d=\"M451.77 754.35c.16.66.65 1.15 1.3 1.31.33.17.66 0 .99 0 .16 0 .49 0 .65.17.17.16.17.32.33.49.33.65.82.81 1.47.49.5-.17.82-.33 1.31-.5.5-.16.99 0 1.48.17.65.16 1.47.5 2.12.16.5-.32.82-.81.5-1.3-.17-.33-.33-.5-.66-.66-.33-.16-.49-.5-.16-.82.16 0 .16-.16.32-.16.17-.17.17-.66.33-.98.17-.5.33-.99.66-1.31.16-.17-.17-.5-.33-.17l-.5.98c-.16.33-.16.66-.32.99-.16.32-.49.32-.65.49a.5.5 0 0 0 0 .65c.16.5 1.3.98.81 1.64-.65.65-1.63.16-2.45 0a2.74 2.74 0 0 0-1.96.16c-.33.17-.66.33-1.15.5-.66.16-.66-.33-.82-.82-.16-.5-.65-.5-1.14-.5-.82 0-1.64-.16-1.97-.98.16-.33-.16-.33-.16 0zm-1.31 7.2c-.5.33-.33.99.16 1.15.17 0 .33 0 .5.16.48 0 .48.17.65.66.16.33.16.49.49.65.82.33 2.13-.65 2.62.5.32.65-.17 1.14-.82 1.3-.33 0-.66-.32-.98-.32-.66.16-.33 1.14 0 1.3.32.33.82.33.98.82.16.5.16.99.33 1.48.32.65.81 1.3 1.63 1.14.33 0 .66-.16.99-.49.49-.33.81-.65 1.47-.33.49.33 1.3.66 1.8.17.49-.5.49-1.31.33-2.13-.17-.66-.17-1.31.32-1.8.33-.33.66-.66.82-.98.17-.5.33-1.64-.33-1.64s-1.14.82-1.47 1.15c-.16.16-.33.49-.49.16-.16-.16 0-.65.16-.65.17-.17.66-.17.66-.5.16-.65-.98-.65-1.31-.65-.82.16-1.8.82-2.46.16-.49-.49-.49-1.3-1.14-1.63-.33-.17-.66-.17-.82 0-.65.16-.98.65-1.47 0-.33-.33-.5-.66-.82-.66-.5-.16-.98-.16-1.31 0-.33 0-.66.17-.66.66-.16 0 0 .32.17.32s.33-.32 0-.49c0 0 0-.16.16-.16 0-.16.17-.33.33-.16h.98c.5.16.5.49.82.81.5.33.98.33 1.47 0 .33-.16.82-.49 1.15-.16.16.16.33.5.49.82.16.49.5.82.98 1.14.5.17 1.15 0 1.64-.16.33-.16.65-.33.98-.16 0 0 .33 0 .33.16h-.17c-.16 0-.16 0-.32.16-.33.33-.5.99-.17 1.48.33.49.82 0 1.15-.17.16-.16.33-.49.65-.65.17-.16.17-.33.33-.33.5-.16.5.33.33.66-.17.81-1.15 1.14-1.31 1.96-.16.82.33 1.64.16 2.46 0 .49-.32.98-.98.81l-.98-.49c-.66-.16-.98 0-1.47.33-.5.33-.82.65-1.48.33-.49-.33-.65-.82-.82-1.31-.16-.66-.16-1.31-.81-1.64-.17-.16-.33-.16-.5-.33-.16-.16-.32-.32-.16-.49.16-.16 0 0 .16 0 .33 0 .5.17.82.17 1.31-.17 1.64-1.97.33-2.46-.33-.16-.65 0-.98 0-.33 0-.5.17-.82.17-.5 0-.5-.33-.66-.66 0-.33-.16-.5-.32-.5-.17-.15-.33-.15-.5-.15h-.16s-1.14-.17-.65-.5c.49-.16.33-.65 0-.49zm23.9-2.45c-.66-.33-1.8-.82-2.62-.66-.33.17-.33.33-.5.5-.32.16-.49.32-.81.49-.33-.17-.5-.33-.82-.5-.17-.16-.33-.32-.5-.32-.48-.33-1.63-.5-1.96.16-.16.16-.16.5-.16.66 0 .32.82.65.65.81-.16.17 0 .33 0 .33.5.33 1.64 1.31.99 2.13-.33.33-.66.33-1.15.33-.33 0-.5-.17-.82-.17-.33-.16-.49-.49-.49-.98 0-.16 0-.33-.16-.33-.5-.49-1.15.17-1.48.5-.32.49-.16.65-.16 1.14 0 .5-.33 1.15 0 1.8.16.33.33.5.66.66.49.32.81.32.98.81.16.17.16.5.16.66.16.33.33.49.66.65 1.63.66.81 1.64-.17 2.3-.82.49-1.47 1.14-1.63 2.12 0 .82.49 1.8 1.3 1.97.33 0 .66 0 .99-.17.16 0 .16-.16.32-.32s.17-.17.17-.33c.16-.17.16 0 .16.49v.33c.82.49.33.98.66 1.47l.32.33c.5.32.66.49.66.98 0 .33.49.16.33-.16-.17-.82-.82-.99-1.15-1.8-.16-.66-.16-.99-.82-1.31v.32c.33-.49 0-1.3-.65-1.3-.17 0-.17 0-.17.16-.16.82-.98.98-1.63.65-.5-.33-.66-.98-.5-1.63.17-.82.82-1.15 1.48-1.64.65-.5 1.47-.98 1.3-1.97 0-.32-.16-.49-.32-.65-.16-.16-.33-.16-.5-.16a2.2 2.2 0 0 1-1.14-.99c-.16-.32-.16-.65-.49-.81-.16-.17-.32-.17-.32-.33-.5-.33-.5-.17-.66-.82-.16-.5 0-.5 0-.98 0-.17-.16-.33-.16-.66s.16-1.63.82-.98c0-.16.16.5.16.5.33.65 1.14.81 1.64.81 2.12-.16 1.47-2.3.16-3.1v.32c.33-.33.33-.66 0-.98 0 0-.16 0-.16-.17-.33 0-.33-.16-.17-.33 0-.32 0-.32.33-.32.65-.33 1.3.49 1.8.82.33.32.82.49 1.3.16.5-.33.5-.98 1.16-.98.65 0 1.3.32 1.8.49 1.47.49 1.63.16 1.3 0zm-18.34 12.11a.9.9 0 0 0-.82.5c-.16.32 0 .65.17.81.16.16.33.16.49.16h.33v.17s0 .16.16.16c.16.16.16.16.33.16h.49c.16.17.33 0 .33-.16 0-.33-.17-.49-.33-.65l-.16-.17v-.32c0-.33-.5-.5-.99-.66 0 0-.16 0 0 0-.16.16-.16.33 0 .33.33.16.66.16.66.49 0 .16 0 .33.16.49l.17.16s.16 0 .16.17c.16 0 .16 0 .33-.17-.17-.16-.5-.16-.66-.16h-.33v-.16c0-.17-.16-.33-.16-.33-.16-.16-.33-.16-.33-.16-.16 0-.49 0-.49-.17s.17-.33.5-.33c.32.33.32-.16 0-.16z\" class=\"c-co\"/>\n        </g>\n        <!--<image href=\"{{ClosestIcon}}\" x=\"461.3\" y=\"765.8\" width=\"29.4\" height=\"29.4\" />-->\n        <text class=\"c-co fs13\" transform=\"translate(478 752.4)\">{{ClosestBodyDistance}}</text>\n        <text class=\"c-co fs13 fttu\" transform=\"translate(519.1 752.4)\">TO {{ClosestBodyChange}}</text>\n        <text class=\"c-co fs13\" transform=\"translate(478 767.12)\">{{ClosestBodyTime}}</text>\n        <text class=\"c-co fs13\" transform=\"translate(478 781.84)\">{{Gravity}}g</text>\n        <text class=\"fttu c-co\" x=\"335.2\" y=\"766.7\" style='font-size:16.1px;'>{{ClosestBodyName}}</text>\n        <text class=\"fs13 c-co\" x=\"335.2\" y=\"781.7\">{{AtmoAlt}} Atmo Altitude</text>\n      </g>\n\n      <g id=\"ui-framing-lines\">\n        <g class=\"logo1\">\n          <path d=\"M644.49 790.48c.4-.27.81-.6 1.22-.88 1.9-1.36 3.67-2.92 5.5-4.41.81-.68 1.63-1.36 2.51-1.83a7.63 7.63 0 0 1 4.55-1.02 7.16 7.16 0 0 1 5.36 3.12 7.05 7.05 0 0 1 1.36 3.4 7.46 7.46 0 0 1-2.17 6.37 6.98 6.98 0 0 1-4.08 2.1 7.5 7.5 0 0 1-7.33-2.91c-.6-.75-.47-1.7.2-2.3.41-.35.75-.69 1.16-.96.75-.54 1.77-.4 2.3.34a2.9 2.9 0 0 0 2.38 1.15 2.8 2.8 0 0 0 .89-5.43c-.48-.2-1.02-.2-1.56-.13-1.9.13-3.74.74-5.57 1.36-1.7.54-3.4 1.15-5.02 1.7-.55.2-1.09.26-1.7.33 0 .07 0 0 0 0z\" class=\"c-co\"/>\n          <path d=\"M654.2 789.26c-.61.48-1.23.88-1.84 1.36-1.7 1.36-3.32 2.71-4.95 4.07a11.6 11.6 0 0 1-3.06 2.04 7.5 7.5 0 0 1-6.38 0 7.13 7.13 0 0 1-4.2-5.57 7.38 7.38 0 0 1 2.64-7.13 7.23 7.23 0 0 1 4.75-1.76 7.46 7.46 0 0 1 6.11 2.99c.61.74.48 1.76-.34 2.37l-1.01.82c-.75.6-1.9.47-2.45-.28a2.96 2.96 0 0 0-1.83-1.15 2.8 2.8 0 0 0-3.2 2.17c-.26 1.56.62 2.99 2.11 3.33.61.13 1.22.07 1.77 0 2.03-.27 4-.95 5.9-1.63a52.3 52.3 0 0 1 4.62-1.5c.47 0 .95-.06 1.36-.13z\" class=\"c-co\"/>\n        </g>\n        <g transform=\"scale(0.48) translate(932,1435)\">\n          <path class=\"c-co\" d=\"M459.2,234.2c0,0-4.4-8-7.7-13.2c-0.7,1.5-1.5,2.9-2.4,4.2C453.4,228.8,459.2,234.2,459.2,234.2z\"/>\n          <path class=\"c-co\" d=\"M409.2,188.8c-6.6-1.9-14.7-4-14.7-4s6.8,3.7,11.9,6.7C407.3,190.6,408.2,189.7,409.2,188.8z\"/>\n          <path class=\"c-co\" d=\"M445,222.1c-2.3-1.2-15.1-6.7-17-6.5c-1.9,0.2-7.7,3.3-8.7,4.3s-1.5,2.9-1.5,2.9l-4.4,1.2l-1.2-0.7l1.4-4.2\n            c0,0,2.6-1.2,3.5-2.1c0.9-0.9,4.7-5.8,4.7-7.4s-7.9-12.3-10-14.4c-0.7-0.7-2.8-2-5.3-3.5c-4.2,4.8-6.8,11.1-6.8,18\n            c0,15,12.2,27.2,27.2,27.2c9.2,0,17.3-4.6,22.2-11.5C447.3,223.7,445.7,222.4,445,222.1z\"/>\n          <path class=\"c-co\" d=\"M426.3,203.6c1.3,1.3,2.8,0,2.8,0s1.9-2.6,4.7-2.6c2.8,0,2.8,1.9,2.8,1.9s3.1,0.1,3.4,2.2\n            c-1.6-0.7-3-0.7-3.8-0.3c-0.8,0.3-3.7,3-2.4,5c1.3,2,12.6,5.1,15,7.3c0.7,0.6,1.7,2.1,2.9,3.9c1.6-3.5,2.5-7.4,2.5-11.5\n            c0-15-12.2-27.2-27.2-27.2c-6.7,0-12.9,2.5-17.7,6.5c3.9,1.1,7.3,2.2,8.2,2.9C420.1,193.5,425,202.3,426.3,203.6z\"/>\n        </g>\n        <path d=\"m510.73 700.05 3.77 3.77-3.77 3.6m-4.91-7.37 3.77 3.77-3.77 3.6m-4.91-7.37 3.77 3.77-3.77 3.6M653.5 764.8l21.9 22.1v66.3l-21.9 22.1v22.1m294.6 0v-22.1L926 853.2v-66.3l22.1-22.1v-22.1h417.3\" class=\"st0\"/>\n        <path fill-opacity=\".88\" d=\"M515.4 710.7h118.1l12.7-12.7H528.5z\" class=\"c-bg\"/>\n        <path d=\"M329.4 794.3h287.3l95.7-95.8h176.8l36.8 36.9h439.4\" class=\"st0\"/>\n        <path d=\"M329.4 735.4h279.9l22.1-22.1H476.7L462 728H329.4zm302 44.1H520.9l-12.3 12.4H329.4v7.5h283.5zm73.6-73.6h51.6l7.4 7.4h73.6l7.4-7.4h51.5l-7.3-7.4H712.4z\" class=\"c-co\"/>\n        <text x=\"392.08\" y=\"251.26\" class=\"c-th ftam\" style=\"font-size:7px;\" transform=\"translate(158.7 298.66) scale(1.63676)\">]]..HUD['n']..[[ v{{HUDver}}</text>\n        <path d=\"M903.9 713.3h110.5l14.7 14.7h336.3v7.4H926l-22.1-22.1Zm36.8 58.9v95.7L926 853.2v-66.3z\" class=\"c-co\"/>\n        <!--<path fill=\"#4992cf\" d=\"M1033.1 724.2h3l1.5-2.6-1.5-2.6h-3l-1.5 2.6 1.5 2.6Zm3.4.7h-3.8l-2-3.3 2-3.3h3.8l1.9 3.3-1.9 3.3Z\"/>\n        <path fill=\"#4992cf\" d=\"M1035.7 719.7h-2.2l-1.1 1.9 1.1 1.9h2.2l1-1.9z\"/>\n        <path fill=\"#4992cf\" d=\"M1145.8 722h-110.7v-.7h110.4l20-19.2h182.8l7 6.9-.5.4-6.9-6.6h-182.1l-20 19.2Z\" />\n        <path fill=\"#4992cf\" d=\"M1357.8 709.1c0 1.7-1.3 3-3 3s-3.1-1.3-3.1-3 1.4-3.1 3.1-3.1c1.7 0 3 1.4 3 3.1Z\" />-->\n      </g>\n    \n      <path d=\"M 655.8 760.7 L 707.2 708.7 L 755.1 708.7 L 762.7 715.9 L 839.1 716 L 846.6 708.2 L 894.4 708.3 L 924.7 738.6 L 943.8 738.6 L 944.2 762.8 L 922.4 784.8 L 922.6 855.3 L 944.2 876.8 L 944.2 898 L 657.6 898.2 L 657.6 876.9 L 679.8 854.7 L 679.7 784.8 L 655.8 760.7 Z\" style=\"fill: rgb(25, 25, 25); fill-opacity: 0.55;\"/>\n      {{CenterNav}}\n      {{CenterAP}}\n      {{CenterWarp}}\n\n      {{WidgetThrottle}}\n\n      <g transform=\"matrix(1.63676, 0, 0, 1.63676, 158.69531, 298.66381)\">\n        <text class=\"c-th\" style=\"font-size: 9.8px;\" x=\"222.642\" y=\"303.209\">{{ThrottleLabel}}: {{ThrottleValue}}</text>\n      </g>\n      <text class=\"c-th fs15\" x=\"927.8\" y=\"730.6\">ALT: {{Altitude}}</text>\n      <text class=\"fs22 c-th\" y=\"38\" x=\"0\"><tspan x=\"477.1\" y=\"731.7\" style=\"font-size: 22px; word-spacing: 0px;\">SPEED: {{VelocitySpeed}}</tspan></text>\n      <text class=\"c-th\" style=\"font-size: 11.5px;\" x=\"584.8\" y=\"726.1\">km:h</text>\n      <g transform=\"matrix(1.63676, 0, 0, 1.63676, 144.10788, 299.01016)\">\n        <text class=\"fs7 c-tm\" x=\"235\" y=\"250.3\">VERT SPEED: {{VelocityUp}} m:s</text>\n      </g>\n\n      {{MainButtons}}\n\n      <g transform=\"matrix(1, 0, 0, 1, -610.19897, -12.72636)\" id=\"button_flight\">\n        <path class=\"c-co\" d=\"M 953.8 722.4 L 994.6 722.4 L 978.8 738.1 L 953.8 738.1 L 953.8 722.4 Z\" />\n        <text class=\"c-th fs14 ftam\" x=\"967.4\" y=\"735.1\">A: R</text>\n        <path class=\"fil1\" d=\"M 997.8 722.4 L 1001.2 722.4 L 985.4 738.1 L 982 738.1 L 997.8 722.4 Z\"/>\n        <path class=\"c-bg\" d=\"M 1099.9 722.3 L 1182.6 722.4 L 1166.8 738.1 L 1084 738.1 L 1099.9 722.3 Z\" style=\"fill-opacity: 0.9;\" transform=\"matrix(-1, 0, 0, -1, 2171, 1460.39996)\"/>\n        <text class=\"c-tm fs14\" x=\"1004.5\" y=\"735.1\">{{ModeLabel}}</text>\n        <path class=\"fil1\" d=\"M 939.4 722.4 L 951.3 722.4 L 951.3 733 L 946.2 738.1 L 939.4 738.1 L 939.4 722.4 Z\" transform=\"matrix(-1, 0, 0, -1, 1890.70001, 1460.5)\"/>\n      </g>\n      <g id=\"WIDGET_AUX\">\n        <path class=\"c-bg\" d=\"M 670.8 851.2 L 648.7 873.3 L 648.6 895.5 L 522.6 894.2 L 523.1 811 L 526.8 807 L 659.4 807 L 670.8 816.6 L 670.8 851.2 Z\" style=\"fill-rule: nonzero; paint-order: fill; fill-opacity: 0.88;\"/>\n        <text class=\"c-tm\" x=\"585.7\" y=\"842.4\">{{BrakesUsed}}/{{BrakesMax}} kn</text>\n        <text class=\"c-co\" x=\"529.5\" y=\"857.2\">BRAKE DIST</text>\n        <text class=\"c-tm\" x=\"585.7\" y=\"857.2\">{{BrakingDistance}}</text>\n        <text class=\"c-co\" x=\"529.5\" y=\"872\">BRAKE TIME</text>\n        <text class=\"c-tm\" x=\"585.7\" y=\"872\">{{BrakingTime}}</text>\n        <path d=\"M 589.7 809.2 L 587.8 811 L 556.4 811 L 558.2 809.1 Z\" class=\"c-co\" />\n        <path d=\"M 554.5 809.1 L 552.7 810.9 L 526.7 811 L 528.6 809.1 L 554.5 809.1 Z\" class=\"c-co\" />\n        <path d=\"M 624.9 809.2 L 623 811 L 591.6 811 L 593.4 809.1 Z\" class=\"c-co\" />\n        <path d=\"M 658.1 809.1 L 660.4 811 L 626.8 811 L 628.6 809.1 L 658.1 809.1 Z\" class=\"c-co\" />\n        <text class=\"c-co\" x=\"529.5\" y=\"842.4\">BRAKE PWR</text>\n        <path d=\"M 662.2 812.7 L 668.4 817.9 L 668.4 827.4 L 526.7 827.4 L 526.7 812.7 L 662.2 812.7 Z\" class=\"c-hb\"/>\n        <text class=\"c-co fs14\" x=\"529.5\" y=\"824.7\">AUX FLIGHT DATA</text>\n        <text class=\"c-co\" x=\"529.5\" y=\"886.8\">SHIP MASS</text>\n        <text class=\"c-tm\" x=\"585.7\" y=\"886.8\">{{ShipMass}} ton</text>\n      </g>\n      <g id=\"WIDGET_DOCK\">\n        <path class=\"c-bg\" d=\"M 1107.6 763.7 L 1107.6 895.6 L 952.6 895.6 L 952.7 871.6 L 945.3 864.6 L 945.2 774.9 L 953.1 767.1 L 953.1 756.4 L 959.3 750.6 L 1091.8 750.4 L 1107.6 763.7 Z\" style=\"fill-rule: nonzero; paint-order: fill; fill-opacity: 0.88;\"/>\n        <path d=\"M 1022.3 752.8 L 1020.4 754.6 L 989 754.6 L 990.8 752.7 Z\" class=\"c-co\" />\n        <path d=\"M 987.1 752.7 L 985.3 754.5 L 959.3 754.6 L 961.2 752.7 L 987.1 752.7 Z\" class=\"c-co\" />\n        <path d=\"M 1057.5 752.8 L 1055.6 754.6 L 1024.2 754.6 L 1026 752.7 Z\" class=\"c-co\" />\n        <path d=\"M 1090.7 752.7 L 1093 754.6 L 1059.4 754.6 L 1061.2 752.7 L 1090.7 752.7 Z\" class=\"c-co\" />\n        <path d=\"M 1096 757.2 L 1104.7 764.7 L 1104.6 771.9 L 952.9 771.9 L 956.5 768.2 L 956.5 757.2 L 1096 757.2 Z\" class=\"c-hb\"/>\n        <text class=\"c-co fs14\" x=\"959.3\" y=\"769.4\">TERTIARY FLIGHT DATA</text>\n        ]]..HUD.widgets.primary.TertiaryFields..[[\n      </g>\n      <g id=\"WIDGET_HOVER\">\n        <path class=\"c-bg\" d=\"M 1194 724.6 L 1317.9 724.6 L 1301.8 708.4 L 1210.7 708.4 L 1194 724.6 Z\" style=\"fill-opacity: 0.88;\"/>\n        <text class=\"fs13 c-th fil2 ftam\" x=\"1256.8\" y=\"721.4\">HOVER POWER :: {{HoverHeight}}m</text>\n        <path d=\"M 1191.6 724.5 L 1152.2 724.5 L 1168.4 708.5 L 1207.8 708.4 L 1191.6 724.5 Z\" style=\"fill: rgb(128, 107, 107);\"/>\n        <text class=\"fs13 c-th ftam\" x=\"1179\" y=\"721.4\">{{KeyGroundDown}}</text>\n        <path d=\"M 1320.6 724.5 L 1360 724.5 L 1343.9 708.5 L 1304.4 708.4 L 1320.6 724.5 Z\" style=\"fill: rgb(121, 135, 117);\"/>\n        <text class=\"fs13 c-th ftam\" x=\"1332.2\" y=\"721.4\">{{KeyGroundUp}}</text>\n      </g>\n      {{MainFuel}}\n    </svg>\n  </div>\n  ]]end}HUD.buttons={template=\"\",mainTemplates={},btnKeys={},initBinds={},html=\"\",compile=function(an,b6,b5,cm)an.template=\"\"for cn,am in pairs(an.mainTemplates)do an.template=an.template..am end;an.initBinds[b5]={b6,cm}end,init=function(an)an.tmpl=nil;an.tmpl=Template.new(an.template)an.tmpl:listen(function(be)HUD.widgets.primary.tmpl:bind({MainButtons=be.html})end)end,ready=function(an)an.tmpl:compile(an.template)for b5,co in pairs(an.initBinds)do co[1]:toggle(co[2])end end,createButton=function(an,b5,d9,cn,cm)local da=an;local az={name=b5}da.btnKeys[#da.btnKeys+1]=b5;local cu=9.4+#da.btnKeys*20;az.template=[[<g class=\"btn-{{active}}\" transform=\"translate(180,]]..cu..[[)\">\n      <use class=\"btn-{{active}}\" xlink:href=\"#BUTTON_SINGLE\" />\n      <text class=\"fs13 c-th ftam\" x=\"967.4\" y=\"734.9\">]]..cn..[[</text>\n      <text class=\"fs12 fttu c-tm\" x=\"1005.5\" y=\"734.4\">{{label}}</text>\n    </g>]]az.tmpl=Template.new(az.template)az.tmpl:listen(function(be)da.tmpl:bind({[az.name]=be.html})da.tmpl:render()end)az.toggle=function(an,bn)az.tmpl:bind(bn)az.tmpl:render()end;az.tmpl:bind({label=d9})da.mainTemplates[b5]=\"{{\"..b5 ..\"}}\"da:compile(az,b5,{active=cm})return az end}AISatlas=(function()local Flight=Flight;local az={state=true,sys=0,closeBodyId=2,dist=0,bodyIDs={},bodyNames={},safeRadius=18000000,sfradius=500000,distsz=math.huge,distp=math.huge,closeBodyId=1,safeZonePos=vec3({13771471,7435803,-128971})}function az.init(an)for db,dc in pairs(u[an.sys])do an.bodyIDs[#an.bodyIDs+1]=db;an.bodyNames[dc.name[1]:lower()]=db end;an.body=u[an.sys][an.closeBodyId]an.Processor=coroutine.create(an.coCheck)KeyActions:register('tick','AtlasCheck','AtlasCheck',an,'coCheck')unit.setTimer('AtlasCheck',0.05)KeyActions:register('tick','AtlasUpdate','AtlasUpdate',an,'update')unit.setTimer('AtlasUpdate',0.3)end;function az.nearestPlanetToPos(an,bk,dd)for db,dc in pairs(u[an.sys])do local bI=math.abs(vec3(bk):dist(vec3(dc.center)))if bI<dc.radius+dd then return dc.id end end;return 0 end;function az.anyPlanetToPos(an,bk)local de=99999999999;local df=0;for db,dc in pairs(u[an.sys])do local bI=math.abs(vec3(bk):dist(vec3(dc.center)))if bI<de then de=bI;df=dc.id end end;return df end;function az.coCheck(an)local bz=coroutine.status(an.Processor)if bz~=\"dead\"then local bA,bB=coroutine.resume(an.Processor)elseif bz==\"dead\"then an.Processor=coroutine.create(an.check)local bA,bB=coroutine.resume(an.Processor)end end;function az.check()local an=AISatlas;if not Flight.position then return end;local dg=math.huge;local dh=2;for b9,db in ipairs(an.bodyIDs)do local dc=u[an.sys][db]local bI=Flight.position:dist(vec3(dc.center))if bI<dg then dg=bI;dh=db end;coroutine.yield()end;an.closeBodyId=dh;an.body=u[an.sys][dh]HUD.widgets.primary.tmpl:bind({ClosestBodyName=an.body.name[1],ClosestIcon=an.body.iconPath,AtmoAlt=g(\"%.1f\",(an.body.atmosphereThickness or 0)/1000)..'km',Gravity=g(\"%.1f\",an.body.gravity/10 or 0)})end;function az.update(an)local bI=Flight.position:dist(vec3(an.body.center))local di=bI-(an.body.radius+an.body.atmosphereThickness)local dj=Flight.speed<50 and\"--:--\"or formatTime(timeToDist(di,Flight.speed*3.6))Flight.inLowSpace=di>0;Flight.atmoDist=di;HUD.widgets.primary.tmpl:bind({ClosestBodyDistance=formatDist(n(di)),ClosestBodyTime=dj,ClosestBodyChange=di>0 and\"atmo\"or\"space\"})end;function az.parsePOS(an,C)local F=' *([+-]?%d+%.?%d*e?[+-]?%d*)'local dk,dl,dm,dn,dp=string.match(C,'::pos{'..F..','..F..','..F..','..F..','..F..'}')dk=tonumber(dk)dl=tonumber(dl)dm=tonumber(dm)dn=tonumber(dn)dp=tonumber(dp)if dl==0 or dl==nil then return{latitude=dm,longitude=dn,altitude=dp,bodyId=dl,systemId=dk}end;return{latitude=constants.deg2rad*utils.clamp(dm,-90,90),longitude=constants.deg2rad*(dn%360),altitude=dp,bodyId=dl,systemId=dk}end;function az.convertPOS(an,C)local dq=an:parsePOS(C)if dq.altitude==nil then return nil end;if dq.bodyId==0 then return vec3(dq.latitude,dq.longitude,dq.altitude)end;local dr=math.cos(dq.latitude)local planet=u[dq.systemId][dq.bodyId]return vec3(planet.center)+(planet.radius+dq.altitude)*vec3(dr*math.cos(dq.longitude),dr*math.sin(dq.longitude),math.sin(dq.latitude))end;function az:getVecToSZ()local ds=Flight.position end;function az:keyAction1()if Flight.keyLShift==1 then return end;if Flight.position~=nil then local dg=math.huge;local dh=2;for b9,db in ipairs(self.bodyIDs)do local dc=u[self.sys][db]local bI=Flight.position:dist(vec3(dc.center))if bI<dg then dg=bI;dh=db end end;local dc=u[self.sys][dh]local dt=dc.surfaceMaxAltitude+dc.atmosphereThickness;local di=n(dg-(dc.radius+dc.atmosphereThickness))HUD.widgets.primary.tmpl:bind({ClosestBodyName='Lacobus Moon 4',ClosestBodyDistance=formatDist(O(self.cpdata.center,self.position))})end end;function az:safeZoneDist(du)local dv=false;distsz=vec3(du):dist(self.safeZonePos)if distsz<safeRadius then return true,mabs(distsz-safeRadius),\"Safe Zone\",0 end;distp=vec3(du):dist(vec3(planet.center))if distp<sfradius then dv=true end;if mabs(distp-sfradius)<mabs(distsz-safeRadius)then return dv,mabs(distp-sfradius),planet.name,planet.bodyId else return dv,mabs(distsz-safeRadius),\"Safe Zone\",0 end end;function az:closestSafeArea()local dv=false;local du=Flight.position;distsz=vec3(du):dist(self.safeZonePos)if distsz<safeRadius then return true,mabs(distsz-safeRadius),\"Safe Zone\",0 end;distp=vec3(du):dist(vec3(planet.center))if distp<sfradius then dv=true end;if mabs(distp-sfradius)<mabs(distsz-safeRadius)then return dv,mabs(distp-sfradius),planet.name,planet.bodyId else return dv,mabs(distsz-safeRadius),\"Safe Zone\",0 end end;return az end)()Autopilot=(function()local br=Flight;local az={stageState=0,apState='off',alignState='off',alignTicks=0,tempsw=false,alignTarget=vec3(),targetName='None',targetType='body',targetPID=0,targetBody={},targetDist=0,targetBodyName='Unknown',apBuffer=0}br.targetAngularVelocity=vec3()function az.init(an)KeyActions:register('start','option4','APAlign',Autopilot,'stop')if showAutopilot then an.button=HUD.buttons:createButton('APAlign',\"Autopilot\",'A:4',an.alignState=='off'and\"dis\"or\"on\")end;SystemFlush:register(13,'autopilot',Autopilot,'alignFlush')KeyActions:register('tick','APUpdate','APUpdate',an,'update')unit.setTimer('APUpdate',0.25)end;function az.stop(an)if an.alignState=='off'and an.apState=='off'then system.print('For autopilot, use ALIGN or GO in Lua chat.')end;an.alignState='off'an.apState='off'an.stageState=0;an.targetBodyName='Unknown'an.targetName='None'an.targetDist=0;br.apBrake=false;if showAutopilot then an.button:toggle({active=\"dis\",label='Autopilot'})end;Settings:clearAP()end;function az.go(an,C)local dw='AP/ 'local cd=an:setTarget(C)if cd==0 then return end;an.alignState='on'an.apState='on'dw=dw..an.targetName;if showAutopilot then an.button:toggle({active=\"on\",label=\"Autopilot: \"..dw})end;Settings:saveAP(C)end;function az.align(an,C)local dw='Align/ 'an.alignTicks=0;an.stageState=0;local bB=0;if type(C)=='string'then if C:lower()=='forward'then dw='Align/ Forward'an:forward()bB=1 elseif C:lower()=='retro'then dw='Align/ Retro'an:retro()bB=1 end end;if bB==0 then an:setTarget(C)an.alignState='on'an.apState='off'dw=dw..an.targetName end;if showAutopilot then an.button:toggle({active=\"on\",label=\"Autopilot: \"..dw})end end;function az.forward(an)an:setTarget(br.velocity)an.alignState='forward'end;function az.retro(an)an:setTarget(-br.velocity)an.alignState='retro'end;function az.setTarget(an,C)if not br.inSpace and not needleAutopilot then b(\"Your set alignment will enable once in deep space. A:1 to disable.\")end;an.stageState=0;an.alignTicks=0;an.targetType='body'an.targetPID=0;an.targetBody={}an.alignTarget=vec3()an.targetBodyName='Unknown'local bk=C;local dx=200000;if type(C)=='string'then if C:lower()=='forward'then an:forward()return 0 elseif C:lower()=='retro'then an:retro()return 0 elseif string.sub(C,1,2)~='::'then local dl=AISatlas.bodyNames[C:lower()]if not dl then b('Body name not found:'..C)return 0 end;local dc=u[AISatlas.sys][dl]bk=vec3(dc.center)an.targetName=dc.name[1]an.targetPID=dc.id;an.targetBody=dc;an.targetBodyName=dc.name[1]else system.setWaypoint(C)bk=AISatlas:convertPOS(C)if not bk then return 0 end;an.targetName='Custom'local db=AISatlas:nearestPlanetToPos(bk,dx)if db~=0 and not needleAutopilot then local dc=u[AISatlas.sys][db]bk=dc.center;an.targetName=dc.name[1]an.targetPID=dc.id;an.targetBody=dc;an.targetBodyName=dc.name[1]else local dy=AISatlas:anyPlanetToPos(bk)an.targetType='space'an.targetBodyName=u[AISatlas.sys][dy].name[1]end end end;an.alignTarget=bk;return 1 end;function az.alignFlush(an)if br.speed==nil or br.speed<0.1 then end;if an.alignState=='off'and an.apState=='off'then return end;local dz=br.maxSpeed*0.125;local dA=br.maxSpeed*0.125;local dB=178;local dC=br.position-vec3(an.alignTarget)local N=0;an.angle=0;local dD=n(vec3(an.alignTarget):dist(br.position))an.targetDist=dD;if not br.inSpace and not needleAutopilot then elseif an.alignState=='pro'then N=math.deg(br.forward:angle_between(an.alignTarget:normalize()))local dE=br.velocity:rotate(math.pi,an.alignTarget)br.targetAngularVelocity=br.targetAngularVelocity+(dE:normalize()/2):cross(-br.forward)if N<0.09 then an.alignTicks=an.alignTicks+1 end;if an.alignTicks>200 then an.alignState='off'end elseif an.alignState=='retro'then N=math.deg(br.forward:angle_between(an.alignTarget:normalize()))local dE=br.velocity:rotate(math.pi,an.alignTarget)br.targetAngularVelocity=br.targetAngularVelocity+(dE:normalize()/2):cross(br.forward)if N<0.09 then an.alignTicks=an.alignTicks+1 end;if an.alignTicks>200 then an.alignState='off'end else N=math.deg(br.velocity:angle_between(dC))if not N then N=0 end;an.angle=N;if an.alignState=='on'then if(N==nil or N<120 or br.speed*3.6>dz and N<dB)and an.stageState<2 then if not Brakes.locked then Brakes:keyAction('lock',1)end else if Brakes.locked and Brakes.ap=='on'then Brakes:keyAction('stop',1)end end;if N==nil or N<120 then br.targetAngularVelocity=(dC:normalize()/2):cross(br.forward)else local dF=vec3(br.velocity):normalize()local dG=vec3(dC):normalize()local dH=dG:rotate(math.pi,dF)local dE=dH:normalize():rotate(math.pi,dG)br.targetAngularVelocity=dE:normalize():cross(br.forward)if N>=179.8 then an.alignTicks=an.alignTicks+1 end;if an.alignTicks>1000 and not needleAutopilot and an.apState~='on'then an.alignState='off'end end end;if an.apState=='on'then if an.stageState==0 then an.stageState=1;if br.mode~=0 then unit.cancelCurrentControlMasterMode()end;br.forceThrottle=0.5 elseif an.stageState==1 then if an.angle==nil or an.angle>165 and an.angle<179.74 then if needleAutopilot then br.forceThrottle=1 else br.forceThrottle=0.5 end elseif an.angle>=179.74 and an.alignTicks>700 then br.forceThrottle=1;an.stageState=2 end elseif an.stageState==2 then local dI=an.targetType=='body'and apAtmoPark+an.targetBody.radius+an.targetBody.atmosphereThickness or apSpacePark;if dD<=dI+br.brakeDistance then an.stageState=3 end elseif an.stageState==3 then an.stageState=4;Sound:play('APapproach')br.forceThrottle=0 elseif an.stageState==4 then local dI=an.targetType=='body'and apAtmoPark+an.targetBody.radius+an.targetBody.atmosphereThickness or apSpacePark;if dD<=dI+br.brakeDistance then br.apBrake=true else br.apBrake=false end;if dD<=dI then an.stageState=5;br.apBrake=false;Brakes:keyAction('lock')end end end end end;function az.update(an)local bc=\"\"local dJ=true;if warpdrive~=nil and(an.apState~='on'and an.alignState~='on')then dJ=false end;if needleAutopilot then if an.alignState~='on'and not br.inSpace then dJ=false end else if not br.inSpace then dJ=false end end;if not dJ then else local Z=br.maxSpeed;local bm=timeToDist(an.targetDist,Z)local dK=formatTime(bm)local dL=timeToDist(an.targetDist,br.speed*3.6)local dM=formatTime(dL)local dN=g(\"%.1f\",180-(an.angle or 1))local status='OFF'if an.alignState=='on'and an.apState=='off'then status='ALIGN ONLY'end;if an.apState=='on'then if an.stageState==1 then status='ALIGNING '..dN elseif an.stageState==2 then status='ACCELERATING'if br.speed*3.6+120>=br.maxSpeed then status='CRUISING'end elseif an.stageState==3 or an.stageState==4 then status='ON APPROACH'elseif an.stageState==5 then status='ARRIVED'end end;local dO=1;if status=='OFF'then dO=0.4 end;bc=bc..[[\n        <g style=\"opacity:]]..dO..[[;\">\n          <path class=\"c-bg\" d=\"M 670.8 701.5 L 869.2 701.5 L 880 712.1 L 861.5 730.2 L 815.1 730.2 L 808.2 723.1 L 729.1 723.1 L 722 730.2 L 675.9 730.2 L 658 712.1 L 670.8 701.5 Z\" style=\"opacity:0.8;\" transform=\"matrix(-1, 0, 0, -1, 1569.5, 1439.59998)\"/>\n          <text class=\"ffrd ftam fs20 c-co\" x=\"801.2\" y=\"734.0\">SPACE AUTOPILOT</text>\n          <text class=\"ffrd fs15 c-wh fttu\" x=\"689\" y=\"764.4\">TO: ]]..an.targetName..[[</text>\n          <g transform=\"matrix(1, 0, 0, 1, -15, -13)\">\n            <path class=\"c-bg op06\" d=\"M 703.2 789.2 L 790.6 789.2 L 770.5 809.2 L 703.2 809.2 L 703.2 789.2 Z\" />\n            <path class=\"c-bg\" d=\"M 818.1 788.9 L 965.5 788.4 L 945.4 808.4 L 818.2 809 L 818.1 788.9 Z\" transform=\"matrix(-1, 0, 0, -1, 1738.60004, 1597.40002)\"/>\n            <text class=\"ffrd fs15 c-tm fttu\" x=\"794.5\" y=\"804.4\">]]..status..[[</text>\n            <text class=\"ffrd fs15 c-th\" style=\" text-anchor: middle;\" x=\"737\" y=\"804.4\">AP STATUS</text>\n          </g>\n          <g>\n            <text class=\"ffrd fs12 c-ow\" x=\"689\" y=\"816.3\">DISTANCE TO DESTINATION:</text>\n            <text class=\"ffrd fs12 c-ow\" x=\"804\" y=\"816.3\">]]..formatDist(an.targetDist)..[[</text>\n            <text class=\"ffrd fs12 c-wh\" x=\"689\" y=\"832.3\">ESTIMATED TRAVEL TIME:</text>\n            <text class=\"ffrd fs12 c-wh\" x=\"804\" y=\"832.3\">]]..dK..[[</text>\n            <text class=\"ffrd fs12 c-ow\" x=\"689\" y=\"848.3\">TRAVEL TIME BY SPEED:</text>\n            <text class=\"ffrd fs12 c-ow\" x=\"804\" y=\"848.3\">]]..dM..[[</text>\n            <text class=\"ffrd fs12 c-ow\" x=\"689\" y=\"864.3\">CLOSEST BODY TO TARGET:</text>\n            <text class=\"ffrd fs12 c-ow\" x=\"804\" y=\"864.3\">]]..an.targetBodyName..[[</text>\n          </g>\n        </g>\n      ]]end;HUD.widgets.primary.tmpl:bind({CenterAP=bc})end;return az end)()Warp=(function()local az={hasBox=true,statusMap={'No Warp Drive','Warp Drive Broken','In Warp','In Warp','Not Piloting','Warp Cooldown','In PVP','Moving','No Container Link','Gravity Too Close','No Destination','Destination Too Close','Destination Too Far','Need Warp Cells','Ready'},stateMap={'Drive Idle','Measuring','Aligning Ship','Drive Spooling','En Route','En Route','Making Approach','Drive Braking','Trip Complete'}}function az.init(an)an.wd=warpdrive;KeyActions:register('tick','WarpUpdate','WarpUpdate',an,'update')unit.setTimer('WarpUpdate',0.25)KeyActions:register('tick','WarpSlowUpdate','WarpSlowUpdate',an,'slowUpdate')unit.setTimer('WarpSlowUpdate',1)end;function az.slowUpdate(an)local dP=Flight.maxSpeed*84;local bI=an.wd.getDistance()local t=timeToDist(bI,dP)+6;local dQ=formatTime(t)end;function az.update(an)local aV={cstat=construct.getWarpState(),status=an.wd.getStatus(),name=an.wd.getDestinationName(),cellsInv=an.wd.getAvailableWarpCells(),cellsReq=an.wd.getRequiredWarpCells(),dist=an.wd.getDistance()}local dR='lock'if aV.status==15 then dR='temp'end;if aV.status==3 or aV.status==4 then dR='on'end;if aV.cstat==2 and Throttle.real>0 then Flight:keyStopEngines()end;if aV.cstat==8 then Brakes.locked=true;Brakes:keyAction('loop')end;local dP=2520000;local t=timeToDist(aV.dist,dP)+6;local dS=formatTime(t)local dT='NO LINK'local dU=aV.name==''and'No Destination'or aV.name;if aV.status==9 then an.hasBox=false else an.hasBox=true;dT=\"CELLS: \"..aV.cellsInv..\"  [\"..aV.cellsReq..\": \"..dU..\"]\"end;local dV=an.statusMap[aV.status]local dW=an.stateMap[aV.cstat]local bc=''if aV.status==6 or aV.status==7 then local dX=warpdrive.getWidgetData()local dY=json.decode(dX)dV=dY.statusText end;if not Flight.inSpace or(Autopilot.alignState~='off'or Autopilot.apState~='off')then bc=bc..[[<g transform=\"translate(0,2)\"><path class=\"c-bg\" d=\"M 658.2 878.6 L 943.2 878.6 L 943.2 895.5 L 658.2 895.5 L 658.2 878.6 Z\"/>\n        <text class=\"c-co fttu fs12\" x=\"661.7\" y=\"891.8\">WARP: ]]..dV..[[</text>\n        <text class=\"c-co fttu fs12\" x=\"940\" y=\"891.8\" text-anchor=\"end\">]]..dT..[[</text>\n      ]]else bc=bc..[[\n        <g>\n          <path class=\"c-bg\" d=\"M 670.8 701.5 L 869.2 701.5 L 880 712.1 L 861.5 730.2 L 815.1 730.2 L 808.2 723.1 L 729.1 723.1 L 722 730.2 L 675.9 730.2 L 658 712.1 L 670.8 701.5 Z\" style=\"opacity:0.8;\" transform=\"matrix(-1, 0, 0, -1, 1569.5, 1439.59998)\"/>\n          <text class=\"ffrd ftam fs20 c-co\" x=\"801.2\" y=\"734.0\">WARP DRIVE SYSTEM</text>\n        \n          <text class=\"ffrd fs15 c-wh fttu\" x=\"680.6\" y=\"764.4\">TO: ]]..dU..[[</text>\n          <text class=\"ffrd fs15 c-wh\" style=\"text-anchor: end;\" x=\"920.1\" y=\"764.4\">COST: ]]..aV.cellsReq..[[</text>\n          <g transform=\"matrix(1.27269, 0, 0, 1.27269, -525.2196, -212.85268)\">\n            <path class=\"c-co\" d=\"M 963.1 776.9 L 998.9 776.9 L 983.1 792.6 L 963.1 792.6 L 963.1 776.9 Z\"/>\n            <path class=\"btn-]]..dR..[[\" d=\"M 1000.7 776.9 L 1004.1 776.9 L 988.3 792.6 L 984.9 792.6 L 1000.7 776.9 Z\"/>\n            <path class=\"c-bg\" d=\"M 984.9 776.7 L 1128.2 776.3 L 1112.4 792 L 978 792.5 L 984.9 786.2 L 984.9 776.7 Z\" transform=\"matrix(-1, 0, 0, -1, 2118.69995, 1568.79999)\"/>\n            <text class=\"ffrd fs14 c-th fttu\" x=\"1007.4\" y=\"789.3\">]]..dV..[[</text>\n            <path class=\"btn-]]..dR..[[\" d=\"M 949.5 776.9 L 961.7 776.9 L 961.7 785.8 L 968.2 792.6 L 949.5 792.6 L 949.5 776.9 Z\" transform=\"matrix(-1, 0, 0, -1, 1910.90002, 1569.5)\"/>\n            <text class=\"ffrd fs14 c-th ftam\" x=\"974.1\" y=\"789.3\">A:J</text>\n          </g>\n          <g transform=\"matrix(1, 0, 0, 1, -2.73686, 9.579)\">\n            <path class=\"c-bg op06\" d=\"M 703.2 789.2 L 790.6 789.2 L 770.5 809.2 L 703.2 809.2 L 703.2 789.2 Z\" />\n            <path class=\"c-bg\" d=\"M 818.1 788.9 L 965.5 788.4 L 945.4 808.4 L 818.2 809 L 818.1 788.9 Z\" transform=\"matrix(-1, 0, 0, -1, 1738.60004, 1597.40002)\"/>\n            <text class=\"ffrd fs15 c-tm fttu\" x=\"794.5\" y=\"804.4\">]]..dW..[[</text>\n            <text class=\"ffrd fs15 c-th\" style=\" text-anchor: middle;\" x=\"737\" y=\"804.4\">DRIVE STATE</text>\n          </g>\n          <text class=\"ffrd fs11 c-ow\" x=\"700\" y=\"839.3\">ESTIMATED TRAVEL TIME / ]]..dS..[[</text>\n          <text class=\"ffrd fs12 c-ow\" x=\"700\" y=\"854.3\">WARP CELLS REMAINING: ]]..aV.cellsInv..[[</text>\n          <text class=\"ffrd fs12 c-ow\" x=\"700\" y=\"869.3\">DISTANCE TO DESTINATION: ]]..formatDist(aV.dist)..[[</text>\n        </g>\n      ]]end;bc=bc..'</g>'HUD.widgets.primary.tmpl:bind({CenterWarp=bc})end;return az end)()Warnings=(function()local az={disabled=false,template=\"\",mainTemplates={},allKeys={},initBinds={},html=\"\"}function az:flush()local cI=Flight.altitude;if not self.disabled and Flight.inSpace then self.disabled=true;self.button1:toggle({active='dis'})elseif not Flight.inSpace then self.disabled=false;self.button1:toggle({active=self.active and self.tempsw and\"on\"or\"off\"})end;if Flight.speed==nil or Throttle.previous==nil or self.disabled then return end;if self.active and self.tempsw or Flight.speed<70 and not Flight.inSpace and Throttle.previous<3 and Flight.gravity>1 then Flight.targetAngularVelocity=Flight.targetAngularVelocity+Flight.worldVertical:cross(Flight.up)end end;function az:keyAction()if self.disabled then return end;self.active=not self.active;self.tempsw=self.active;self.button1:toggle({active=self.active and self.tempsw and\"on\"or\"off\"})end;function az:tsw()if Flight.pitchInput>0 or Flight.rollInput>0 or Flight.yawInput>0 then self.tempsw=false else self.tempsw=self.active end end;function compile(b6,b5,cm)self.template=\"\"for cn,am in pairs(self.mainTemplates)do self.template=self.template..am end;self.initBinds[b5]={b6,cm}end;function az:init()self.tmpl=nil;self.tmpl=Template.new(self.template)self.tmpl:listen(function(be)end)KeyActions:register('start','option9','IgnoreWarns',Warnings,'keyAction')az.button1=HUD.buttons:createButton('IgnoreWarns',\"Ignore Warning Messages\",'A:9','off')end;function az:ready()self.tmpl:compile(self.template)for b5,co in pairs(self.initBinds)do co[1]:toggle(co[2])end end;function az:create(b5,d9,cn,cm)local da=self;local az={name=b5}da.allKeys[#da.allKeys+1]=b5;local cu=9.4+#da.allKeys*20;az.template=[[<svg viewBox=\"0 0 254 44\" class=\"svg-warning\" transform=\"translate(0,]]..cu..[[)\">\n      <path fill=\"#b85656\" fill-opacity=\".35\" d=\"m13.1 9-8.8 3.7.1 20.9 8.1 3.6h228.9l8.8-3.7V12.7L241.7 9z\"/>\n      <path fill=\"#e82d2d\" d=\"M159.66 39.73h14.91l6.53 3.95h15.55l3.43-3.43h9l-1.48-1.5h-47.2zm-65.02 0h-14.9l-6.54 3.95H57.65l-3.43-3.43h-9l1.48-1.5h47.2zm65.43-36.71 2.41-2.41h63.9l2.61 2.62h8.94l1.22 1.22h-9.75s-.66.98-.98.98h-35.75s-1.95-2.41-2.42-2.41h-30.18Zm-65.85 0L91.8.61H27.91l-2.63 2.62h-8.92l-1.22 1.22h9.75s.65.98.98.98h35.75s1.95-2.41 2.42-2.41h30.18Zm-60.8 36.24.03-1.18-21.2.08-8.85-4.04-.06-21.9 9.57-4.08 95.98.07-1.47-1.48-94.8.26L2.2 11.51l.05 23.43 9.68 4.37 21.49-.05Zm187.88 0-.04-1.18 21.2.08 8.86-4.04.05-21.9-9.56-4.08-95.98.07 1.46-1.48 94.8.26 10.43 4.52-.05 23.43-9.68 4.37-21.5-.05Z\" />\n      <text class=\"ffrd fftam\" x=\"127.2\" y=\"31.8\" fill=\"#e82d2d\" font-size=\"26\" letter-spacing=\".3\" style=\"white-space:pre\" word-spacing=\"2\">{{message}}</text>\n    </svg>\n    <g class=\"btn-{{active}}\" transform=\"translate(180,]]..cu..[[)\">\n      <use class=\"btn-{{active}}\" xlink:href=\"#BUTTON_SINGLE\" />\n      <text class=\"c-wh fs14 ftam\" x=\"967.4\" y=\"735.1\">]]..cn..[[</text>\n      <text class=\"fs14\" style=\"fill: rgb(200, 216, 244);\" x=\"1005.5\" y=\"735.1\">{{label}}</text>\n    </g>]]az.tmpl=Template.new(az.template)az.tmpl:listen(function(be)da.tmpl:bind({[az.name]=be.html})da.tmpl:render()end)az.toggle=function(self,bn)az.tmpl:bind(bn)az.tmpl:render()end;az.tmpl:bind({label=d9})da.mainTemplates[b5]=\"{{\"..b5 ..\"}}\"da:compile(az,b5,{active=cm})return az end;return az end)()local u=u;MyLoc=(function()local az={state=true,sys=0,bodyIDs={}}function az:init()KeyActions:register('start','option9','MyLoc',MyLoc,'keyAction1')end;function az:keyAction1()if Flight.keyLShift==1 then return end;if Flight.position~=nil then b(json.encode(Flight.position))end end;return az end)()\n"
  unit:
    onTimer(timerId):
      lua: |
        KeyActions:exec('tick', timerId)
    onStart:
      lua: >
        local log = system.print


        log('')

        log('')

        log('')

        log('')

        log('')

        log('')

        log('')

        log('')

        log('')

        log('')

        log('- /////// ALBATROSS HUD LOADED ///////');

        log('- twitch.tv/codeinfused')

        log('- tinyurl.com/codehud')

        log('-----------------------------------')

        log('For a list of commands, type:  help')


        -- core, databank, radar, shields, warpdrive

        ---------------------------------------------


        UpdateDatabank = false --export: Checkmark this to update the current
        databank ship settings

        hudColor = '#4992CF' --export: Hex color code for the HUD

        hudTextColor = '' --export: Force text color of HUD data, leave blank
        for auto-color

        hudOpacity = 94 --export: 0 to 100, percentage of HUD opacity

        hudScale = 120 --export: 90 to 140, percentage to scale the HUD

        drawFPS = 20 --export: FPS to draw HUD at, reduce for better performance

        startingHoverHeight = 40 --export: Meters off the ground to hover when
        you disengage landing mode

        landingSpeedConfig = 500 --export: Max speed at which landing mode can
        engage

        burnSpeedMax = 0 --export: Use 0 for auto, allow HUD to calculate it

        showAutopilot = true --export: Disable to remove the Autopilot button

        apAtmoPark = 400000 --export: Distance for autopilot on arrival to park
        away from a planet

        apSpacePark = 10000 --export: Distance for autopilot on arrival to space
        coordinate to park

        showHOTAS = true --export: Disable to remove the HOTAS button

        enableHOTAS = false --export: Enable the HOTAS Lua Axis controls

        hotasThrottle = 'half' --export: Use "full" for no reverse range, or
        "half" for zero at center

        pitchInvert = false --export: HOTAS invert, -1 or 1

        rollInvert = false --export: HOTAS invert, -1 or 1

        yawInvert = false --export: HOTAS invert, -1 or 1

        soundFolder = 'albatross_hud' --export: Rename your local albatross
        sound folder and put name here

        brakeToggleMode = false --export: Turn on for brake lock to be a toggle
        instead of keypress

        burnSpeedLimiter = true --export: If on, will brake before hitting
        atmospheric burn speed

        cruiseDefault = false --export: Use Cruise Speed as default flight mode

        showReticles = true --export: Show the forward and velocity reticles
        projected into world

        showWarnings = true --export: Show warnings such as stall and burn

        playSounds = true --export: Play voice files if present on local
        computer

        rcuFreeze = true --export: Freeze the player flying remotely using an
        RCU

        showGroundMode = false --export: Show the button to toggle on Ground
        Mode hovering

        needleAutopilot = false --export: Turn on racing alignment in autopilot

        containerWeightTier = 0 --export: Talent Tier for Container-Optimization
        (-5%/e item mass)

        fuelWeightTier = 0 --export: Talent Tier for Fuel-Tank-Optimization
        (-5%/e fuel mass)

        atmoTankSizeTier = 0 --export: Talent Tier for Atmo Fuel-Tank-Handling
        (+20%/e volume)

        spaceTankSizeTier = 0 --export: Talent Tier for Space Fuel-Tank-Handling
        (+20%/e volume)

        rocketTankSizeTier = 0 --export: Talent Tier for Rocket
        Fuel-Tank-Handling (+10%/e volume)


        Settings = {
          haskey = 0,
          hasap = 0,
          vals = {},
          names = {
            'hudColor'
            ,'hudTextColor'
            ,'hudOpacity'
            ,'hudScale'
            ,'drawFPS'
            ,'startingHoverHeight'
            ,'landingSpeedConfig'
            ,'showAutopilot'
            ,'apAtmoPark'
            ,'apSpacePark'
            ,'showHOTAS'
            ,'enableHOTAS'
            ,'hotasThrottle'
            ,'pitchInvert'
            ,'rollInvert'
            ,'yawInvert'
            ,'soundFolder'
            ,'brakeToggleMode'
            ,'burnSpeedLimiter'
            ,'cruiseDefault '
            ,'showReticles'
            ,'showWarnings '
            ,'playSounds '
            ,'rcuFreeze '
            ,'showGroundMode'
            ,'needleAutopilot'
            ,'containerWeightTier'
            ,'fuelWeightTier'
            ,'atmoTankSizeTier'
            ,'spaceTankSizeTier'
            ,'rocketTankSizeTier'
          },
          init = function(s)
            s.haskey = myDB.hasKey('AISconf')
            s.hasap = myDB.hasKey('AISap')
            if s.hasap~=1 then
              --local ap = json.encode({})
              myDB.setStringValue('AISap', "{}")
            end
            if s.haskey==1 then
              s.text = myDB.getStringValue('AISconf')
              s.vals = json.decode(s.text)
            else
              _G['UpdateDatabank'] = true
            end
            if _G['UpdateDatabank']==true then
              s:saveDB()
            else
              s:useDB()
            end
          end,
          saveDB = function(s)
            local vals = {}
            for i,key in ipairs(s.names) do
              vals[key] = _G[key]
            end
            s.vals = vals
            local text = json.encode(vals)
            myDB.setStringValue('AISconf', text)
            log('Databank updated')
          end,
          useDB = function(s)
            log('Using databank settings')
            for i,key in ipairs(s.names) do
              _G[key] = s.vals[key]
            end
          end,
          checkAP = function(s)
            if s.hasap~=1 then return false end
            s.ap = json.decode(myDB.getStringValue('AISap'))
            if s.ap and s.ap.target ~= nil then
              Autopilot:go(s.ap.target)
            end
          end,
          saveAP = function(s, target)
            if s.hasap~=1 then return false end
            local ap = json.encode({target = target})
            myDB.setStringValue('AISap', ap)
          end,
          clearAP = function(s)
            if s.hasap~=1 then return false end
            myDB.setStringValue('AISap', "{}")
          end
        }


        core = nil

        warpdrive = nil

        shield = nil

        antigrav = nil

        gyro = nil

        dbs = {}

        myDB = nil

        radars = {}

        weapons = {}


        for slot_name, slot in pairs(unit) do
          if
            type(slot) == "table"
            and type(slot.export) == "table"
            and slot.getClass
          then
            local elementClass = slot.getClass():lower()
            if elementClass:find("coreunit") then
              core = slot
            elseif elementClass:find("radar") then
              table.insert(radars, slot)
            elseif elementClass:find("warpdriveunit") then
              warpdrive = slot
            elseif elementClass:find("databankunit") then
              table.insert(dbs, slot)
            elseif elementClass:find("shieldgenerator") then
              shield = slot
            elseif elementClass:find("weapon") then
              table.insert(weapons, slot)
            elseif elementClass:find("gyrounit") then
              gyro = slot
            elseif elementClass:find("antigravitygeneratorunit") then
              antigrav = slot
            else
              --log(elementClass)
            end
          end
        end


        if #dbs > 0 then 
          myDB = dbs[1]
          Settings:init()
        else
          log('No databank linked')
        end


        if core == nil then
          print("You must link a Core to the seat.")
        end


        Nav = Navigator.new(system, core, unit)

        NACM = Nav.axisCommandManager

        NACM:setupCustomTargetSpeedRanges(axisCommandId.longitudinal, {1000,
        5000, 10000, 20000, 30000, 60000})

        NACM.axisCommands[axisCommandId.longitudinal].throttleMouseStepScale = 1


        if cruiseDefault then unit.cancelCurrentControlMasterMode() end


        if rcuFreeze and unit.isRemoteControlled() then player.freeze(true) end


        -- WEAPONS

        _autoconf.displayCategoryPanel(weapons, #weapons,
        L_TEXT("ui_lua_widget_weapon", "Weapons"), "weapon", true)


        -- ANTIGRAV

        if antigrav ~= nil then 
          AGG:init()
        end


        -- WARPDRIVE

        --if warpdrive ~= nil then warpdrive.showWidget() end


        core.hideWidget()

        unit.hideWidget()

        system.showHelper(false)

        system.showScreen(true)

        system.setScreen("")


        KeyMaps = {
          stopengines='',
          booster='',
          speedup='',
          speeddown='',
          up='',
          down='',
          gear='',
          groundaltitudeup='',
          groundaltitudedown='',
          brake=''
        }

        for k,v in pairs(KeyMaps) do
          KeyMaps[k]=system.getActionKeyName(k):upper():gsub('ALT %+ ', 'A:'):gsub('SHIFT %+ ', 'S:'):gsub('SPACE', 'SPC')
        end

        KeyMaps.warp='A:J'




        RadarSwitch = (function()
          local F = Flight
          local this = {
            radars={ {n="Off", t='off', radar={}} },
            active=0,
            activet='',

            incoming = {},
            contacts = {},
            sorted = {}
          }

          function this.init(s)
            KeyActions:register('start', 'option8', 'RadarSwitch', s, 'keyAction')

            for i,r in ipairs(radars) do
              local t = 0
              local d = r.getWidgetData()
              local j = json.decode(d)
              local n = j.name
              r.hideWidget()
              if n:lower():find('atmo') then t='atmo' else t='space' end
              s.radars[#s.radars+1] = {n=n, radar=r, t=t}
              if s.activet=='' then
                if (t=='space' and Flight.inSpace) or (t=='atmo' and not Flight.inSpace) then s.active=i+1; s.activet=t end
              end
            end

            s.active=1
            local r = s.radars[s.active]
            s.activet = r.t
            s.radar = r.radar
          
            s.button1 = HUD.buttons:createButton('RadarSwitch', "Active Radar", 'A:8', s.active>1 and "on" or "off")
            s.button1:toggle({label="Radar ["..r.n.."]", active = s.active>1 and "on" or "off"})

            --local rs = {self.radars[2].radar}
            --if self.active>1 then rs = {self.radars[self.active].radar} end
            --_autoconf.displayCategoryPanel(rs, 1, "Periscope", "periscope")
            --self:keyAction(self.active)

            --s.Processor = coroutine.create(s.coCheck)

            --[[
            KeyActions:register('tick', 'RadarIncoming', 'RadarIncoming', s, 'getIncomingList')
            unit.setTimer('RadarIncoming', 0.1)

            KeyActions:register('tick', 'RadarUpdate', 'RadarUpdate', s, 'coCheck')
            unit.setTimer('RadarUpdate', 0.016)

            KeyActions:register('tick', 'RadarRender', 'RadarRender', s, 'renderContacts')
            unit.setTimer('RadarRender', 0.1)
            ]]

          end

          --[[
          function this.coCheck(s)
            local cont = coroutine.status(s.Processor)
            if cont ~= "dead" then 
              local value, done = coroutine.resume(s.Processor)
              --if done then log("Atlas ready.") end
            elseif cont == "dead" then
              --log('radar loop finished')
              s.Processor = coroutine.create(s.updateContacts)
              local value, done = coroutine.resume(s.Processor)
            end
          end

          function this.getIncomingList(s)
            local r = s.radar -- s.radars[s.active].radar
            if r.getConstructIds == nil then return end
          
            s.incoming = r.getConstructIds()

            local remap = {}
            --for k,v in ipairs(s.incoming) do
            for k=1,#s.incoming,1 do
              local v = s.incoming[k]
              remap['c'..v] = 1
              if s.contacts['c'..v] == nil then 
                s.contacts['c'..v] = {
                  cid = v
                }
              end
            end

            HUD.widgets.primary.tmpl:bind({
              RadarContactCount = #s.incoming
            });

            --for k,v in pairs(s.contacts) do
            for k=1,tablex.size(s.contacts),1 do
              if remap[k] ~= 1 then remove(s.contacts, k) end
            end

          end

          function this.updateStaticInfo(s, c)
            c.kind = s.radar.getConstructKind(c.cid)
            c.size = s.radar.getConstructCoreSize(c.cid)
            c.name = s.radar.getConstructName(c.cid)
          end

          function this.updateContacts(s)
            s = this
            local cmap = {}
            local r = s.radar
            local i = 0
            if r.getConstructIds == nil then return end
            for k,v in pairs(s.contacts) do
              i=i+1
              if i>30 then coroutine.yield(); i=0 end
              if v.name == nil then s:updateStaticInfo(v) end
              v.dist = r.getConstructDistance(v.cid)
              v.speed = r.getConstructSpeed(v.cid)
              cmap[#cmap+1] = {cid=v.cid, dist=v.dist}
            end

            table.sort(cmap, function(a, b)
              return a.dist < b.dist
            end)

            s.sorted = cmap
            -- at the end of update contacts, create sorted list (by distance)

            --log(tablex.size(s.contacts))
          end
          ]]

          function this.renderContacts(s)
            local radarDisplay = '';
            if #s.sorted < 11 then return end

            for k=1, 10, 1 do
              local c = s.contacts['c'..s.sorted[k].cid]
              radarDisplay = radarDisplay .. [[
                <p>]]..c.name..[[ (]]..c.kind..[[) (]]..c.size..[[) // ]]..formatDist(c.dist)..[[ // ]]..(c.speed*3.6)..[[kmh</p>
              ]]
            end

            HUD.widgets.primary.tmpl:bind({
              RadarList = radarDisplay
            });
          end


          function this.keyAction(s, i)
            if F.keyLShift == 1 then return end
            if s.active>1 then s.radars[s.active].radar.hideWidget() end
            if not i then 
              s.active = s.active>1 and 1 or 2
            else 
              s.active = i
            end
            if s.active > #s.radars then s.active = 1 end
            local r = s.radars[s.active]
            if s.active>1 then
              r.radar.showWidget()
            end
            s.activet = r.t
            s.radar = r.radar

            s.button1:toggle({label="Radar ["..r.n.."]", active = s.active>1 and "on" or "off"})
          end

          function this.force(s, t)
            for i,r in ipairs(s.radars) do
              if r.t==t then 
                s:keyAction(i)
                return
              end
            end
          end

          return this
        end)()



        --HUD.widgets.shields:init()

        HUD.widgets.primary:init()


        HUD.widgets.primary.tmpl:bind({
          KeyGroundUp = KeyMaps['groundaltitudeup'],
          KeyGroundDown = KeyMaps['groundaltitudedown'],
          HUDver = '2.4.4',
          VelocitySpeed = 0,
          VelocityUp = 0,
          ThrottlePercent = 0,
          HoverHeight = 0,
          ClosestBodyName = 'Space',
          ClosestBodyChange = 'space',
          ClosestBodyDistance = '-',
          ClosestIcon = '',
          AtmoAlt = 0,
          Gravity = 0,
          BrakesUsed = 0,
          BrakesMax = 50000,
          BrakingDistance = '0 su',
          BrakingTime = '00:01:00',
          ShipMass = '230,069',
          DockedTo = 'None',
          DockedClosest = 'None',
          Altitude = '0',
          WidgetThrottle = '',
          MainButtons = '',
          MainFuel = '',
          MainWarp = '',
          HPStressPerc = 100,
          RadarContactCount = 0,
          CenterNav = function() return HUD.widgets.primary.CenterNav() end
        })


        HUD.full:init()

        HUD.buttons:init() -- initial setup


        SystemFlush = Executor.new()


        --Warnings:init()

        Throttle:init()

        Flight:init()

        Flight:update()

        Flight:slowUpdate()

        Fuel:init()

        AISatlas:init()

        Autopilot:init()

        Gear:init()

        Brakes:init()

        Hovers:init()


        SystemFlush:register(3, 'flush', Flight, 'flush')

        SystemFlush:register(5, 'validate', Flight, 'validate')

        SystemFlush:register(10, 'rotation', Flight, 'rotation')

        SystemFlush:register(15, 'torque', Flight, 'torque')

        SystemFlush:register(20, 'brakes', Flight, 'brakes')

        SystemFlush:register(25, 'longitudinal', Flight, 'longitudinal')

        SystemFlush:register(30, 'lateral', Flight, 'lateral')

        SystemFlush:register(35, 'vertical', Flight, 'vertical')

        SystemFlush:register(40, 'cruise', Flight, 'cruise')

        SystemFlush:register(45, 'boosters', Flight, 'boosters')


        Commands:init()

        Stabilize:init()

        AltLock:init()

        Sound:init()


        SystemFlush:exec()


        if #radars > 0 then RadarSwitch:init() end

        if warpdrive ~= nil then Warp:init() else
          --warpdrive = {hideWidget=function() end, getStatus=function() return 1 end, getDistance=function() return 0 end, getDestinationName=function() return 'No Destination' end, getAvailableWarpCells=function() return 0 end, getRequiredWarpCells=function() return 0 end}
          --Warp:init()
        end


        OptBurn = {btn=HUD.buttons:createButton('OptBurn', 'Burn Speed Limiter',
        'AS:8', burnSpeedLimiter and 'on' or 'off'), toggle=function(s) 
          if Flight.keyLShift==0 then return end 
          burnSpeedLimiter = not burnSpeedLimiter
          s.btn:toggle({active = burnSpeedLimiter and 'on' or 'off'})
        end}

        KeyActions:register('start', 'option8', 'OptBurn', OptBurn, 'toggle')


        --Disabling Ground Mode for now due to bugs

        --if showGroundMode then GroundMode:init() end



        HUD.buttons:ready()


        HUD:colorize(hudColor)

        HUD:opacitize(hudOpacity)

        HUD:scalize(hudScale)

        HUD.full:fps(drawFPS)


        --json = nil

        --vec3 = nil

        --AxisCommandManager = nil

        --utils = nil

        --Navigator = nil

        --constants = nil

        database = nil

        SGui = nil

        sgui = nil

        ClickableArea = nil

        --axisCommandType = nil

        getAxisAngleRad = nil

        --AxisCommand = nil



        HUDHelper = {state=false, toggle = function(s) if Flight.keyLShift==0
        then return end s.state = not s.state; system.showHelper(s.state) end}

        KeyActions:register('start', 'option9', 'HUDHelper', HUDHelper,
        'toggle')


        Lights = {toggle=function(s)
          if unit.isAnyHeadlightSwitchedOn() then
            unit.switchOffHeadlights()
          else
            unit.switchOnHeadlights()
          end
        end}

        KeyActions:register('start', 'light', 'Lights', Lights, 'toggle')


        --CBReset = {reset = function(s) collectgarbage("restart") end}

        --KeyActions:register('tick', 'CBReset', 'CBReset', CBReset, 'reset');

        --unit.setTimer('CBReset', 600);


        Settings:checkAP()


        Sound:play('init');
    onStop:
      lua: >
        _autoconf.hideCategoryPanels()if antigrav~=nil then
        antigrav.hideWidget()end;if warpdrive~=nil then
        warpdrive.hideWidget()end;if gyro~=nil then
        gyro.hideWidget()end;core.hideWidget()Nav.control.switchOffHeadlights()system.setScreen("")system.showScreen(false)player.freeze(false)
  system:
    onFlush:
      lua: |
        SystemFlush:exec()
    onStart:
      lua: |
        -- placeholder
    onUpdate:
      lua: |
        Nav:update()
        KeyActions:exec('system', 'update')
        collectgarbage("collect")
    onActionStart(action):
      lua: |
        KeyActions:exec('start', action)
    onActionStop(action):
      lua: |
        KeyActions:exec('stop', action)
    onActionLoop(action):
      lua: |
        KeyActions:exec('loop', action)
    onInputText(text):
      lua: |
        Commands:call(text)
  screen_voice:
    onOutputChanged(output):
      lua: |
        Commands:call(output, 'y')
